import{_ as p,r as o,o as i,c as r,b as a,d as s,e,a as t}from"./app-e8f85126.js";const c={},l=t(`<h2 id="黑屏问题介绍" tabindex="-1"><a class="header-anchor" href="#黑屏问题介绍" aria-hidden="true">#</a> 黑屏问题介绍</h2><p>黑屏问题是显示相关的综合性问题，涉及Android应用层、框架层和底层SurfaceFlinger、屏显等多个领域。下面有一些基础的判断来定位黑屏问题的归属：</p><p>(1) 屏幕没有亮屏、背光为0则需先从power、屏显角度分析</p><p>(2) 屏幕黑屏，但可以进行三指截屏、power键+音量下键截屏，并且截图正常显示(非黑图)，则需先从屏显角度分析</p><p>(3) 视频类、相机类显示黑屏，需要先确认编解码、阅览显示问题</p><p>(4) 应用界面局部性黑块，某个控件黑，确认应用的view问题</p><h2 id="常见分析手段" tabindex="-1"><a class="header-anchor" href="#常见分析手段" aria-hidden="true">#</a> 常见分析手段</h2><p>从显示系统入手，软件架构从上到下分层，黑屏问题主要分为应用领域、窗口领域、SF&amp;屏显&amp;底软领域黑屏；分析黑屏问题，首先确认黑屏的是哪个界面(layer)，然后才确认造成该界面黑的原因；而分析手段主要是通过dump数据、Activity生命周期、systrace、截图的raw数据、窗口绘制状态、视频操作等。</p><h3 id="surfaceflinger" tabindex="-1"><a class="header-anchor" href="#surfaceflinger" aria-hidden="true">#</a> SurfaceFlinger</h3><p><strong><code>adb shell dumpsys SurfaceFlinger &gt; SurfaceFlinger.txt</code></strong></p><p>确认当前的dump SurfaceFlinger数据对应黑屏现象的时间点</p><p>首先，确认HWC layers合成显示的图层是否为对应黑屏时应该显示的应用图层；接着，核查是否存在焦点图层【focused】（有星号的表示有焦点图层），该图层是否对应所需的显示图层；然后，核对位置【Disp Frame (LTRB)】、大小【Source Crop (LTRB)】、旋转角度【 Frame Rate 】是否正常。<br><img src="https://raw.githubusercontent.com/shug666/image/main/images99d41606feced003fc9290b79b2839e8.png" alt="在这里插入图片描述"><br> 相关代码位置：<code>/frameworks/native/services/surfaceflinger/SurfaceFlinger.cpp</code> 中的dump相关方法，如:dumpHwcLayersMinidumpLocked、dumpAllLocked等。</p><p>如果启动某个应用黑屏，而当前SurfaceFlinger.txt的layer不存在该应用的layer，那需要进一步确认显示buffer的数据是否正常。</p><p>从上面的SurfaceFlinger.txt dump 数据可以看出，BufferStateLayer表示当前绘图窗口，ContainerLayer是其父容器，不会有绘图buffer，父子是从上到下层次树形成；BufferStateLayer的绘图buffer是activeBuffer，该处可以看出已经完成绘图，而未完成绘图状态：<strong>activeBuffer=[ 0x 0: 0,Unknown/None]</strong>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+ BufferStateLayer <span class="token punctuation">(</span>com.example.mysystemdialog/com.example.mysystemdialog.MainActivity<span class="token comment">#117) uid=10117</span>
  Region TransparentRegion <span class="token punctuation">(</span>this<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
  Region VisibleRegion <span class="token punctuation">(</span>this<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">[</span>  <span class="token number">0</span>,   <span class="token number">0</span>, <span class="token number">1440</span>, <span class="token number">2960</span><span class="token punctuation">]</span>
  Region SurfaceDamageRegion <span class="token punctuation">(</span>this<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token assign-left variable">layerStack</span><span class="token operator">=</span>   <span class="token number">0</span>, <span class="token assign-left variable">z</span><span class="token operator">=</span>        <span class="token number">0</span>, <span class="token assign-left variable">pos</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0,0</span><span class="token punctuation">)</span>, <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1440,2960</span><span class="token punctuation">)</span>, <span class="token assign-left variable">crop</span><span class="token operator">=</span><span class="token punctuation">[</span>  <span class="token number">0</span>,   <span class="token number">0</span>,   <span class="token number">0</span>,   <span class="token number">0</span><span class="token punctuation">]</span>, <span class="token assign-left variable">cornerRadius</span><span class="token operator">=</span><span class="token number">0.000000</span>, <span class="token assign-left variable">isProtected</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">isTrustedOverlay</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">isOpaque</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">invalidate</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">dataspace</span><span class="token operator">=</span>Default, <span class="token assign-left variable">defaultPixelFormat</span><span class="token operator">=</span>RGBA_8888, <span class="token assign-left variable">backgroundBlurRadius</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">color</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.000</span>,0.000,0.000,1.000<span class="token punctuation">)</span>, <span class="token assign-left variable">flags</span><span class="token operator">=</span>0x00000100, <span class="token assign-left variable">tr</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span>
      <span class="token assign-left variable">parent</span><span class="token operator">=</span>9f63fd7 com.example.mysystemdialog/com.example.mysystemdialog.MainActivity<span class="token comment">#116</span>
      <span class="token assign-left variable">zOrderRelativeOf</span><span class="token operator">=</span>none
      <span class="token assign-left variable">activeBuffer</span><span class="token operator">=</span><span class="token punctuation">[</span>0x0:0,Unknown/None<span class="token punctuation">]</span>, <span class="token assign-left variable">tr</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span> queued-frames<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">metadata</span><span class="token operator">=</span><span class="token punctuation">{</span>dequeueTime:97987454113, windowType:1, ownerPID:2202, ownerUID:10117<span class="token punctuation">}</span>, <span class="token assign-left variable">cornerRadiusCrop</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span>, <span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span>,  <span class="token assign-left variable">shadowRadius</span><span class="token operator">=</span><span class="token number">0.000</span>, 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相关代码位置：<code>frameworks/native/libs/gui/LayerDebugInfo.cpp</code></p><p>另外我们还需要重点关注两个参数:color和flags，color的最后一个参数表示alpha，如果该参数为0，该图层也是不会显示的；flag参数在2进制状态的末位bit表示可见性，1表示不可见，0表示可见。也可以总结为flag是偶数表示图层可见，是奇数表示图层不可见。</p><h3 id="window-a" tabindex="-1"><a class="header-anchor" href="#window-a" aria-hidden="true">#</a> window -a</h3><p><strong><code>adb shell dumpsys window -a &gt; window .txt</code></strong></p><p>前面dump sf.txt没有对应的layer显示，那么可以查看dump window的数据，确认对应应用的窗口显示状态。搜索Window #，找到对应的Window。</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images6e79363df1aa01f88ccb6984392a303d.png" alt="在这里插入图片描述"></p><p>这里对应的Window为我自己的 应用界面，上面信息描述了该窗口的基本信息，重点需要关注mDrawState=HAS_DRAWN，mDrawState为窗口的绘制状态，HAS_DRAWN表示WMS已经完成该窗口的显示流程。其中，NO_SURFACE、DRAW_PENDING这两个状态表示应用端没有完成对应的surface申请和绘制，此类问题需要应用端查看；COMMIT_DRAW_PENDING、READY_TO_SHOW，表示应用端已经完成绘制并上报状态给WMS，则需要WMS查看显示控制流程。</p><p>isOnScreen=true、isVisible=true这两个变量也很重要，确认当前窗口已经是可见，并显示到屏幕上；其他的，如请求宽高、frame大小、位置也可以一一确认。</p>`,23),u={href:"https://blog.csdn.net/yimelancholy/article/details/130339779",target:"_blank",rel:"noopener noreferrer"},d=t('<h3 id="activity-activities" tabindex="-1"><a class="header-anchor" href="#activity-activities" aria-hidden="true">#</a> activity activities</h3><p><strong><code>adb shell dumpsys activity activities &gt; activities.txt</code></strong></p><p><code>dumpsys activity activities</code>可以确认当前启动的activity显示状态。该数据，从top遍历到bottom，从Task到里面的activity，把activity的信息，包含属于哪个应用、由谁启动、通过哪个Intent等。其中，确认该acitivity的窗口是否正常绘制，主要看信息mNumInterestingWindows=1 mNumDrawnWindows=1 allDrawn=true。</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesed489196fb6f1822229c411d7caf35dc.png" alt="在这里插入图片描述"><img src="https://raw.githubusercontent.com/shug666/image/main/images3b025d49c8c1b9bfcc6f6186fc288b3a.png" alt="在这里插入图片描述"><br> mNumInterestingWindows表示需要绘图的窗口数目，mNumDrawnWindows表示已经完成绘图的窗口数目。这里都为1表示已经完成绘图。这里里面可以看到很多信息，例如：</p><p>Keyguard的显示状态</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images1b4b243b6a73764216b6de5e2af9a415.png" alt="在这里插入图片描述">InsetsState状态</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesfea484553bb9f1d15cfdc868f8034b57.png" alt="在这里插入图片描述">Display areas z order</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesb3b8d4487ae266660f283cc0b35c7963.png" alt="在这里插入图片描述"></p><h3 id="activity-containers" tabindex="-1"><a class="header-anchor" href="#activity-containers" aria-hidden="true">#</a> activity containers</h3><p><strong><code>adb shell dumpsys activity containers &gt; containers.txt</code></strong></p><p><code>dumpsys activity containers</code>可以确认当前窗口的层级结构的状态。</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images75b3409e17c74e34dd51b97365ca0981.png" alt="图片.png"></p><h3 id="activity-top" tabindex="-1"><a class="header-anchor" href="#activity-top" aria-hidden="true">#</a> activity top</h3><p><strong><code>adb shell dumpsys activity top &gt; top_activity.txt</code></strong></p><p>当启动应用黑屏，使用raw工具可以确认应用绘制送帧为黑色，也可以找到有问题的acitivity对比dump activity top的View Hierarchy:层级树，对比正常的是否加载。<br><img src="https://raw.githubusercontent.com/shug666/image/main/images213d2b02d35281b7bbfe69195ac278f1.png" alt="在这里插入图片描述"></p><h3 id="activity-生命周期-event-log" tabindex="-1"><a class="header-anchor" href="#activity-生命周期-event-log" aria-hidden="true">#</a> activity 生命周期，event.log</h3><p>通过 event.log分析activity生命周期情况，确认应用的activity是否执行了onResume，focus是否切换到焦点窗口，甚至应用存在anr等情况。</p><p>关键log：<code>wm_on | input_focus</code></p><h3 id="其他方法" tabindex="-1"><a class="header-anchor" href="#其他方法" aria-hidden="true">#</a> 其他方法</h3>',19),m={href:"https://blog.csdn.net/yimelancholy/article/details/134646726?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},k=t(`<h2 id="分析步骤" tabindex="-1"><a class="header-anchor" href="#分析步骤" aria-hidden="true">#</a> 分析步骤</h2><p>分析方法有很多根据个人习惯分析即可</p><h3 id="确认问题现象" tabindex="-1"><a class="header-anchor" href="#确认问题现象" aria-hidden="true">#</a> 确认问题现象</h3><p>通过录屏来观察黑屏的过程，确认问题时间点<br> 如果在录像过程中，有对黑屏现象截图，发现截图正常，但是屏幕是黑的，可以直接判断为屏显问题</p><h3 id="dump关键log" tabindex="-1"><a class="header-anchor" href="#dump关键log" aria-hidden="true">#</a> dump关键log</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell dumpsys SurfaceFlinger <span class="token operator">&gt;</span> ./dump/SurfaceFlinger.txt
adb shell dumpsys window <span class="token parameter variable">-a</span> <span class="token operator">&gt;</span> ./dump/window.txt
adb shell dumpsys activity activities <span class="token operator">&gt;</span> ./dump/activities.txt
adb shell dumpsys activity <span class="token function">top</span> <span class="token operator">&gt;</span> ./dump/top_activity.txt
adb shell dumpsys activity containers <span class="token operator">&gt;</span> ./dump/containers.txt
adb shell dumpsys input <span class="token operator">&gt;</span> ./dump/input.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="找到问题窗口" tabindex="-1"><a class="header-anchor" href="#找到问题窗口" aria-hidden="true">#</a> 找到问题窗口</h3><p>可以通过dump的SurfaceFlinger 、window 找到问题窗口</p><h3 id="分析dump信息" tabindex="-1"><a class="header-anchor" href="#分析dump信息" aria-hidden="true">#</a> 分析dump信息</h3><p>同样不分先后顺序，按个人习惯即可。</p><h4 id="_1、surfaceflinger" tabindex="-1"><a class="header-anchor" href="#_1、surfaceflinger" aria-hidden="true">#</a> 1、SurfaceFlinger</h4><p>①看SurfaceFlinger中是否有对应的图层，即是否合成显示，如果没有可以先看dump的window，见第2步<br> ②有图层则通过id找到对应的Layer和BufferStateLayer</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images18137e9e8b447fea773c9c5e9f8e5673.png" alt="在这里插入图片描述"><img src="https://raw.githubusercontent.com/shug666/image/main/images314ec10e0d3be862613628299182b525.png" alt="在这里插入图片描述">我们可以看到Layer 后有一串16进制数，同这个可以在log文件里面找到对应raw文件，使用irfanview工具，看其图层内容，如果本身就是黑屏，大概率是应用问题，见第2步、第3步可以进一步确认</p><p>游戏类的应用也类似</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesc52c2c86c0f59d94bb1d73d062d6477c.png" alt="在这里插入图片描述"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+ Layer <span class="token punctuation">(</span>SurfaceView<span class="token punctuation">[</span>com.miHoYo.hkrpg/com.mihoyo.combosdk.ComboSDKActivity<span class="token punctuation">]</span><span class="token punctuation">(</span>BLAST<span class="token punctuation">)</span><span class="token comment">#7353) uid=10231</span>
  Region TransparentRegion <span class="token punctuation">(</span>this<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
  Region VisibleRegion <span class="token punctuation">(</span>this<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">[</span>  <span class="token number">0</span>,   <span class="token number">0</span>, <span class="token number">3200</span>, <span class="token number">1440</span><span class="token punctuation">]</span>
  Region SurfaceDamageRegion <span class="token punctuation">(</span>this<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token assign-left variable">layerStack</span><span class="token operator">=</span>   <span class="token number">0</span>, <span class="token assign-left variable">z</span><span class="token operator">=</span>        <span class="token number">0</span>, <span class="token assign-left variable">pos</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0,0</span><span class="token punctuation">)</span>, <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token punctuation">(</span>   <span class="token number">0</span>,   <span class="token number">0</span><span class="token punctuation">)</span>, <span class="token assign-left variable">crop</span><span class="token operator">=</span><span class="token punctuation">[</span>  <span class="token number">0</span>,   <span class="token number">0</span>,  -1,  -1<span class="token punctuation">]</span>, <span class="token assign-left variable">cornerRadius</span><span class="token operator">=</span><span class="token number">0.000000</span>, <span class="token assign-left variable">smoothness</span><span class="token operator">=</span><span class="token number">0.000000</span>, <span class="token assign-left variable">isProtected</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">isTrustedOverlay</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">isOpaque</span><span class="token operator">=</span><span class="token number">1</span>, <span class="token assign-left variable">invalidate</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">dataspace</span><span class="token operator">=</span>BT709 sRGB Full range, <span class="token assign-left variable">defaultPixelFormat</span><span class="token operator">=</span>RGBA_8888, <span class="token assign-left variable">backgroundBlurRadius</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">color</span><span class="token operator">=</span><span class="token punctuation">(</span>-1.000,-1.000,-1.000,1.000<span class="token punctuation">)</span>, <span class="token assign-left variable">flags</span><span class="token operator">=</span>0x00000502, <span class="token assign-left variable">tr</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span>
      <span class="token assign-left variable">parent</span><span class="token operator">=</span>SurfaceView<span class="token punctuation">[</span>com.miHoYo.hkrpg/com.mihoyo.combosdk.ComboSDKActivity<span class="token punctuation">]</span><span class="token comment">#7352</span>
      <span class="token assign-left variable">zOrderRelativeOf</span><span class="token operator">=</span>none
      <span class="token assign-left variable">activeBuffer</span><span class="token operator">=</span><span class="token punctuation">[</span>1440x3200:268437760,RGBA_8888<span class="token punctuation">]</span>, <span class="token assign-left variable">tr</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span> queued-frames<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">metadata</span><span class="token operator">=</span><span class="token punctuation">{</span>dequeueTime:28367775301729, callingUID:10231<span class="token punctuation">}</span>, <span class="token assign-left variable">cornerRadiusCrop</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.00</span>, <span class="token number">0.00</span>, <span class="token number">0.00</span>, <span class="token number">0.00</span><span class="token punctuation">]</span>,  <span class="token assign-left variable">shadowRadius</span><span class="token operator">=</span><span class="token number">0.000</span>, 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Display</strong>表示哪块屏幕active，我们看activie的<strong>hwc layers</strong>，带SurfaceView的图层表示应用显示的内容，常见的视频、游戏等应用都有这个图层，该图层的是否显示主要是看其BufferStateLayer中的activeBuffer、flag</p><p><code>activeBuffer=[ 0x 0: 0,Unknown/None]</code>表示未完成绘图状态，我们这里是<code>activeBuffer=[1440x3200:268437760,RGBA_8888]</code>表示有数据显示</p><p>flag为偶数表示图层可见，是奇数表示图层不可见，例如这里的flags=0x00000502表示可见</p><h4 id="_2、window" tabindex="-1"><a class="header-anchor" href="#_2、window" aria-hidden="true">#</a> 2、window</h4><p>找到有问题的窗口查看关键的参数</p><p>mDrawState确认窗口绘制状态</p><p>isOnScreen、isVisible当前窗口已经是可见，并显示到屏幕上</p><p>NO_SURFACE、DRAW_PENDING这两个状态表示应用端没有完成对应的surface申请和绘制，此类问题需要应用端查看；COMMIT_DRAW_PENDING、READY_TO_SHOW，表示应用端已经完成绘制并上报状态给WMS，则需要WMS查看显示控制流程。</p><table><thead><tr><th>窗口显示相关方法</th><th>工作内容解释</th></tr></thead><tbody><tr><td>addWindow</td><td>App向WMS请求添加窗口记录，会在WMS里新建WindowState(NO_SURFACE)</td></tr><tr><td>relayoutWindow</td><td>App向WMS申请surface用于绘制，执行后window拥有了surface(NO_SURFACE-&gt;DRAW_PENDING)</td></tr><tr><td>finishDrawingWindow</td><td>App在surface上完成绘制后，通知WMS(DRAW_PENDING-&gt;COMMIT_DRAW_PENDING)</td></tr><tr><td>commitFinishDrawingLocked</td><td>WMS遍历window，对于完成绘制的window(COMMIT_DRAW_PENDING-&gt;READY_TO_SHOW)</td></tr><tr><td>performShowLocked</td><td>判断系统是否允许窗口显示isReadyForDisplay(READY_TO_SHOW-&gt;HAS_DRAWN)</td></tr><tr><td>showSurfaceRobustlyLocked</td><td>对HAS_DRAWN状态的窗口，用SurfaceControl通知SurfaceFlinger显示出来</td></tr></tbody></table><p>如果dump上没有显示绘制状态则可以在日志中搜索：*<em>windowmanager.<em>mDrawState</em></em></p><h4 id="_3、activity" tabindex="-1"><a class="header-anchor" href="#_3、activity" aria-hidden="true">#</a> 3、activity</h4><p>查看窗口层级</p><p><code>adb shell dumpsys activity containers</code></p><p>查看View控件</p><p><code>adb shell dumpsys activity top &gt; top\\_activity.txt</code></p><p>对比正常的dump，查看View Hierarchy:层级树是否存在异常</p><h4 id="_4、生命周期" tabindex="-1"><a class="header-anchor" href="#_4、生命周期" aria-hidden="true">#</a> 4、生命周期</h4><p>在event.log中搜索wm_和input_focus查看应用生命周期是否已经走到了onresume，窗口焦点是否正常（Focus entering到了焦点）</p><h4 id="_5、其他异常log" tabindex="-1"><a class="header-anchor" href="#_5、其他异常log" aria-hidden="true">#</a> 5、其他异常log</h4><p>例如常见的ANR，OOM等</p><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><h3 id="抖音黑屏" tabindex="-1"><a class="header-anchor" href="#抖音黑屏" aria-hidden="true">#</a> 抖音黑屏</h3><p>1.视频播放输入输出数据正常</p><p>2.dump SurfaceFlinger 中没有抖音图层</p><p>3.dump window 中mDrawState为NO_SURFACE</p><p>4.应用生命周期有走到onresume流程，当前焦点窗口为空，与前面NO_SURFACE对的上</p><p>5.在日志中查看是否有异常log，发现有OOM(OutOfMemoryError)</p>`,43),b={href:"https://blog.csdn.net/yimelancholy/article/details/130543872?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"};function g(h,f){const n=o("ExternalLinkIcon");return i(),r("div",null,[l,a("p",null,[s("窗口流程见： "),a("a",u,[s("WMS窗口相关流程"),e(n)])]),d,a("p",null,[a("a",m,[s("android trace和backtrace文件的抓取与查看方法"),e(n)])]),k,a("p",null,[s("本文转自 "),a("a",b,[s("https://blog.csdn.net/yimelancholy/article/details/130543872?spm=1001.2014.3001.5502"),e(n)]),s("，如有侵权，请联系删除。")])])}const y=p(c,[["render",g],["__file","changjiandumpsysfangfayuheipingwentifenxichulizongjie.html.vue"]]);export{y as default};
