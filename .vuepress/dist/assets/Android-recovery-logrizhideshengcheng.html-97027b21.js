import{_ as t,r as o,o as p,c,b as s,d as n,e,a as r}from"./app-f541e591.js";const l={},i=s("h2",{id:"recovery-log-的生成",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#recovery-log-的生成","aria-hidden":"true"},"#"),n(" recovery.log 的生成")],-1),u={href:"https://www.baidu.com/s?wd=google&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.baidu.com/s?wd=%E9%81%A5%E6%8E%A7%E5%99%A8&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.baidu.com/s?wd=%E7%95%8C%E9%9D%A2&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd",target:"_blank",rel:"noopener noreferrer"},_=r(`<p>第二种：recovery下，输入命令，cat /tmp/recovery.log</p><p>第三种：android下，输入命令，cat  /cache/recovery/last_log 可能会有多个，命名方式： last_log.1 , last_log.2 , last_log.3 等</p><p>有时候我们需要把recovery的log直接输出到<strong>终端串口</strong>，则我们需要修改下recovery的代码即可，下面以android L（5.1）版本的代码修改说明下：</p><p>bootable/recovery/recovery.cpp</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>TEMPORARY_LOG_FILE <span class="token operator">=</span> <span class="token string">&quot;/tmp/recovery.log&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">redirect_stdio</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> filename<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// If these fail, there&#39;s not really anywhere to complain...</span>
    <span class="token function">freopen</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">setbuf</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">freopen</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token constant">stderr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">setbuf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
Int <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    time_t start <span class="token operator">=</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token operator">*</span><span class="token operator">*</span>redirect_stdio<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>TEMPORARY_LOG_FILE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们只需要把redirect_stdio函数的参数，有”/tmp/recovery.log”修改为”/dev/console”即可。redirect_stdio(”/dev/console”); 不同的平台可能有所不一样，可以先这样验证，echo “111111111” &gt; /dev/console，检验下是否能够把打印正常输出到串口。</p>`,6),v={href:"https://blog.csdn.net/yush34/article/details/106645219",target:"_blank",rel:"noopener noreferrer"};function g(h,m){const a=o("ExternalLinkIcon");return p(),c("div",null,[i,s("p",null,[n("我们在调试recovery升级的时候，我们经常需要查看recovery的log，"),s("a",u,[n("google"),e(a)]),n("的原始逻辑中，recovery的log并非直接输出到串口，我们需要输入命令才能获取，我们有三种方式：")]),s("p",null,[n("第一种：recovery下，"),s("a",d,[n("遥控器"),e(a)]),n("选择 view recovery logs，"),s("a",k,[n("界面"),e(a)]),n("上查看。")]),_,s("p",null,[n("本文转自 "),s("a",v,[n("https://blog.csdn.net/yush34/article/details/106645219"),e(a)]),n("，如有侵权，请联系删除。")])])}const y=t(l,[["render",g],["__file","Android-recovery-logrizhideshengcheng.html.vue"]]);export{y as default};
