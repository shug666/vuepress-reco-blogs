import{_ as t,r as p,o as e,c as o,b as s,d as n,e as c,a as l}from"./app-e8f85126.js";const i={},u=l(`<p>在Android系统当中，系统设置保存着全局性、系统级别的用户编好设置，比如像飞行模式开关、是否开启手机静音模式时震动、屏幕休眠时长等状态值。这些用户偏好的设置很多就保存在SettingsProvider中，在Android 6.0及以后版本，SettingsProvider被重构，Android从性能、安全等方面考虑，把SettingsProvider中原本保存在settings.db中的数据，目前全部保存在XML文件中。并且对SettingsProvider对数据进行了分类，分别是Global、System、Secure三种类型：</p><h1 id="_1、三种类型的settings数据" tabindex="-1"><a class="header-anchor" href="#_1、三种类型的settings数据" aria-hidden="true">#</a> 1、三种类型的Settings数据</h1><p>Global：所有的偏好设置对系统的所有用户公开，第三方APP有读没有写的权限；</p><p>数据保存的位置为：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">/</span>data<span class="token operator">/</span>system<span class="token operator">/</span>users<span class="token operator">/</span><span class="token number">0</span><span class="token operator">/</span>settings_global<span class="token punctuation">.</span>xml

<span class="token comment">//通过adb命令可以查看global类型的数据</span>
<span class="token comment">//比如查看系统设置是否自动确定时间的开关</span>
adb shell settings get global auto_time
<span class="token number">1</span>

<span class="token comment">//通过adb命令也可以修改global类型的数据</span>
<span class="token comment">//比如修改系统设置自动确定时间的开关</span>
adb shell settings put global auto_time <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>System：包含各种各样的用户偏好系统设置，第三方APP有读没有写的权限；</p><p>数据保存的位置为：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">/</span>data<span class="token operator">/</span>system<span class="token operator">/</span>users<span class="token operator">/</span><span class="token number">0</span><span class="token operator">/</span>settings_system<span class="token punctuation">.</span>xml

<span class="token comment">//通过adb命令可以查看system类型的数据</span>
<span class="token comment">//比如查看系统设置字体大小的比例值</span>
adb shell settings get system font_scale
<span class="token number">1.0</span>

<span class="token comment">//通过adb命令也可以修改system类型的数据</span>
<span class="token comment">//比如修改系统字体大小的比例值</span>
adb shell settings put system font_scale <span class="token number">1.5f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Secure：安全性的用户偏好系统设置，第三方APP有读没有写的权限；</p><p>数据保存的位置为：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">/</span>data<span class="token operator">/</span>system<span class="token operator">/</span>users<span class="token operator">/</span><span class="token number">0</span><span class="token operator">/</span>settings_secure<span class="token punctuation">.</span>xml


<span class="token comment">//通过adb命令可以查看secure类型的数据</span>
<span class="token comment">//比如查看系统的Android id</span>
adb shell settings get secure android_id
<span class="token number">265</span>b29c6eed6e790

<span class="token comment">//通过adb命令也可以修改secure类型的数据</span>
<span class="token comment">//同样的修改一个secure类型的数据，对应的修改键值名称就可以了</span>
adb shell settings put secure key_name key_value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面主要介绍了三种类型settings数据库的保存位置以及adb命令读写的方法。</p><h1 id="_2、新增自定义设置字段以及监听它的数据库变化" tabindex="-1"><a class="header-anchor" href="#_2、新增自定义设置字段以及监听它的数据库变化" aria-hidden="true">#</a> 2、新增自定义设置字段以及监听它的数据库变化</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//首先我们先定义一个数据库的键值Key</span>
<span class="token comment">//比如我们定义一个保存设备uuid的键值为&quot;device_uuid&quot;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">KEY_DEVICE_UUID</span> <span class="token operator">=</span> <span class="token string">&quot;device_uuid&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//保存设备的uuid</span>
<span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LinspirerToolConstant</span><span class="token punctuation">.</span><span class="token constant">KEY_DEVICE_UUID</span><span class="token punctuation">,</span> uuid<span class="token punctuation">)</span>

<span class="token comment">//读取设备的uuid</span>
<span class="token class-name">String</span> uuid <span class="token operator">=</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LinspirerToolConstant</span><span class="token punctuation">.</span><span class="token constant">KEY_DEVICE_UUID</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么对于上面保存的设备uuid，如果发生了变化，我们该怎么及时知道呢？</p><p>第一步，我们要想知道某个数据的变化，需要先对这个数据库的字段键值设置监听：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//获取ContentResolver对象</span>
<span class="token class-name">ContentResolver</span> contentResolver <span class="token operator">=</span> <span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//注册监听对应的数据库字段Key</span>
contentResolver<span class="token punctuation">.</span><span class="token function">registerContentObserver</span><span class="token punctuation">(</span><span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">getUriFor</span><span class="token punctuation">(</span><span class="token class-name">LinspirerToolConstant</span><span class="token punctuation">.</span><span class="token constant">KEY_SHEEPMIE_UUID</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">SettingsObserver</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着，自定义自己的ContentObserver类，实现数据变化的回调方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SettingsObserver</span> <span class="token keyword">extends</span> <span class="token class-name">ContentObserver</span> <span class="token punctuation">{</span>

        <span class="token doc-comment comment">/**
         * Creates a content observer.
         * <span class="token keyword">@param</span> <span class="token parameter">handler</span> The handler to run <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">onChange</span></span><span class="token punctuation">}</span> on, or null if none.
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">SettingsObserver</span><span class="token punctuation">(</span><span class="token class-name">Handler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> selfChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> uuid <span class="token operator">=</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">KEY_DEVICE_UUID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token string">&quot; -- SettingsObserver is onChange and uuid == &quot;</span> <span class="token operator">+</span> uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上面注册监听ContentObserver对象的方式，每当监听的数据库键值变化时，都可以实时的处理跟数据变化相关的业务逻辑了。</p><h1 id="_3、监听实现的原理过程" tabindex="-1"><a class="header-anchor" href="#_3、监听实现的原理过程" aria-hidden="true">#</a> 3、监听实现的原理过程</h1><p>像上面保存的设备UUID，直接使用Settings.Secure.putString()方法，它在Android Framework中的具体类路径以及方法逻辑如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>frameworks<span class="token operator">/</span>base<span class="token operator">/</span>core<span class="token operator">/</span>java<span class="token operator">/</span>android<span class="token operator">/</span>provider<span class="token operator">/</span><span class="token class-name">Settings</span><span class="token punctuation">.</span>java

 <span class="token comment">//其内部类Secure 实现如下</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Secure</span> <span class="token keyword">extends</span> <span class="token class-name">NameValueTable</span> <span class="token punctuation">{</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 代码省略号 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token doc-comment comment">/**
         * Store a name/value pair into the database.
         * <span class="token keyword">@param</span> <span class="token parameter">resolver</span> to access the database with
         * <span class="token keyword">@param</span> <span class="token parameter">name</span> to store
         * <span class="token keyword">@param</span> <span class="token parameter">value</span> to associate with the name
         * <span class="token keyword">@return</span> true if the value was set, false on database errors
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">putString</span><span class="token punctuation">(</span><span class="token class-name">ContentResolver</span> resolver<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">putStringForUser</span><span class="token punctuation">(</span>resolver<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> resolver<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 代码省略号 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token doc-comment comment">/** <span class="token keyword">@hide</span> */</span>
        <span class="token annotation punctuation">@UnsupportedAppUsage</span><span class="token punctuation">(</span>maxTargetSdk <span class="token operator">=</span> <span class="token class-name">Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>R</span><span class="token punctuation">,</span> trackingBug <span class="token operator">=</span> <span class="token number">170729553</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">putStringForUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">ContentResolver</span> resolver<span class="token punctuation">,</span>
                <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> value<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> tag<span class="token punctuation">,</span>
                <span class="token keyword">boolean</span> makeDefault<span class="token punctuation">,</span> <span class="token annotation punctuation">@UserIdInt</span> <span class="token keyword">int</span> userHandle<span class="token punctuation">,</span> <span class="token keyword">boolean</span> overrideableByRestore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">MOVED_TO_GLOBAL</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Setting &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot; has moved from android.provider.Settings.Secure&quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot; to android.provider.Settings.Global&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">Global</span><span class="token punctuation">.</span><span class="token function">putStringForUser</span><span class="token punctuation">(</span>resolver<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span>
                        tag<span class="token punctuation">,</span> makeDefault<span class="token punctuation">,</span> userHandle<span class="token punctuation">,</span> <span class="token constant">DEFAULT_OVERRIDEABLE_BY_RESTORE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
             <span class="token comment">//这个会继续向下调用</span>
            <span class="token keyword">return</span> sNameValueCache<span class="token punctuation">.</span><span class="token function">putStringForUser</span><span class="token punctuation">(</span>resolver<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> tag<span class="token punctuation">,</span>
                    makeDefault<span class="token punctuation">,</span> userHandle<span class="token punctuation">,</span> overrideableByRestore<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

由上面的逻辑我们知道，我们保存的<span class="token class-name">Secure</span>类型的数据是通过<span class="token class-name">NameValueCache</span><span class="token punctuation">.</span><span class="token function">putStringForUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法。那我们再来具体看下<span class="token class-name">NameValueCache</span>类中该方法的具体实现吧。
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">NameValueCache</span> <span class="token punctuation">{</span>
        
        <span class="token annotation punctuation">@UnsupportedAppUsage</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ContentProviderHolder</span> mProviderHolder<span class="token punctuation">;</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

 <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">NameValueTable</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">NameValueCache</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> getCommand<span class="token punctuation">,</span>
                <span class="token class-name">String</span> setCommand<span class="token punctuation">,</span> <span class="token class-name">String</span> deleteCommand<span class="token punctuation">,</span> <span class="token class-name">String</span> listCommand<span class="token punctuation">,</span> <span class="token class-name">String</span> setAllCommand<span class="token punctuation">,</span>
                <span class="token class-name">ContentProviderHolder</span> providerHolder<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> callerClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            mProviderHolder <span class="token operator">=</span> providerHolder<span class="token punctuation">;</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

 <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">putStringForUser</span><span class="token punctuation">(</span><span class="token class-name">ContentResolver</span> cr<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">,</span>
                <span class="token class-name">String</span> tag<span class="token punctuation">,</span> <span class="token keyword">boolean</span> makeDefault<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> userHandle<span class="token punctuation">,</span>
                <span class="token keyword">boolean</span> overrideableByRestore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>

                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
                <span class="token comment">//通过ContentProviderHolder获取IContentProvider对象并调用call 方法将我们的Uri以及要保存的键值对传入</span>
                <span class="token class-name">IContentProvider</span> cp <span class="token operator">=</span> mProviderHolder<span class="token punctuation">.</span><span class="token function">getProvider</span><span class="token punctuation">(</span>cr<span class="token punctuation">)</span><span class="token punctuation">;</span>
                cp<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>cr<span class="token punctuation">.</span><span class="token function">getAttributionSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        mProviderHolder<span class="token punctuation">.</span>mUri<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mCallSetCommand<span class="token punctuation">,</span> name<span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Can&#39;t set key &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> mUri<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里，当我们看到IContentProvider这个类以及它的call方法的时候，有没有很熟悉？<img src="https://img-blog.csdnimg.cn/4e7c02b5db1b48649800143718d3a76c.png" alt=""></p><p>这样我们就很容易联想到了ContentProvider中的call方法实现，具体的逻辑，各位继续往下看。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>frameworks<span class="token operator">/</span>base<span class="token operator">/</span>core<span class="token operator">/</span>java<span class="token operator">/</span>android<span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">ContentProvider</span><span class="token punctuation">.</span>java
 <span class="token comment">//在ContentProvider中有这样一个内部类的实现</span>
<span class="token keyword">class</span> <span class="token class-name">Transport</span> <span class="token keyword">extends</span> <span class="token class-name">ContentProviderNative</span> <span class="token punctuation">{</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token keyword">volatile</span> <span class="token class-name">ContentInterface</span> mInterface <span class="token operator">=</span> <span class="token class-name">ContentProvider</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">;</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token class-name">ContentProvider</span> <span class="token function">getContentProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">ContentProvider</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Bundle</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">AttributionSource</span> attributionSource<span class="token punctuation">,</span> <span class="token class-name">String</span> authority<span class="token punctuation">,</span>
                <span class="token class-name">String</span> method<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> arg<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> extras<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">validateIncomingAuthority</span><span class="token punctuation">(</span>authority<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Bundle</span><span class="token punctuation">.</span><span class="token function">setDefusable</span><span class="token punctuation">(</span>extras<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">traceBegin</span><span class="token punctuation">(</span><span class="token constant">TRACE_TAG_DATABASE</span><span class="token punctuation">,</span> <span class="token string">&quot;call: &quot;</span><span class="token punctuation">,</span> authority<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">AttributionSource</span> original <span class="token operator">=</span> <span class="token function">setCallingAttributionSource</span><span class="token punctuation">(</span>
                    attributionSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//可以看到这里，最后还是调用了ContentProvider中自己重写的call方法</span>
                <span class="token keyword">return</span> mInterface<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>authority<span class="token punctuation">,</span> method<span class="token punctuation">,</span> arg<span class="token punctuation">,</span> extras<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> e<span class="token punctuation">.</span><span class="token function">rethrowAsRuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token function">setCallingAttributionSource</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token constant">TRACE_TAG_DATABASE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> authority<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> method<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> arg<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> extras<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">call</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> arg<span class="token punctuation">,</span> extras<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//该方法就需要继承ContentProvider的子类继续重写了</span>
    <span class="token keyword">public</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> method<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> arg<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> extras<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>系统设置作为保存全局状态标识的入口，它所有的数据库对外的读写也是通过ContentProvider实现不同进程间共享的。也是有单独的模块来处理这部分业务逻辑的，它就是SettingsProvider，具体的项目源码路径为：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> frameworks<span class="token operator">/</span>base<span class="token operator">/</span>packages<span class="token operator">/</span><span class="token class-name">SettingsProvider</span><span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>那些在这个模块下SettingsProvider类，通过继承ContentProvider，实现对settings数据库的共享。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>frameworks<span class="token operator">/</span>base<span class="token operator">/</span>packages<span class="token operator">/</span><span class="token class-name">SettingsProvider</span><span class="token operator">/</span>src<span class="token operator">/</span>com<span class="token operator">/</span>android<span class="token operator">/</span>providers<span class="token operator">/</span>settings<span class="token operator">/</span><span class="token class-name">SettingsProvider</span><span class="token punctuation">.</span>java
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SettingsProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ContentProvider</span> <span class="token punctuation">{</span>

      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token function">setInSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mUserManager <span class="token operator">=</span> <span class="token class-name">UserManager</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            mSettingsRegistry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SettingsRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mSettingsRegistry<span class="token punctuation">.</span><span class="token function">migrateAllLegacySettingsIfNeededLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mSettingsRegistry<span class="token punctuation">.</span><span class="token function">syncSsaidTableOnStartLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">&quot;settings&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SettingsService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">&quot;device_config&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DeviceConfigService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Bundle</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">String</span> method<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Bundle</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> requestingUserId <span class="token operator">=</span> <span class="token function">getRequestingUserId</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
            <span class="token comment">//获取GLOBAL类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_GET_GLOBAL</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token class-name">Setting</span> setting <span class="token operator">=</span> <span class="token function">getGlobalSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token function">packageValueForCallResult</span><span class="token punctuation">(</span>setting<span class="token punctuation">,</span> <span class="token function">isTrackingGeneration</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//获取SECURE类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_GET_SECURE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token class-name">Setting</span> setting <span class="token operator">=</span> <span class="token function">getSecureSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token function">packageValueForCallResult</span><span class="token punctuation">(</span>setting<span class="token punctuation">,</span> <span class="token function">isTrackingGeneration</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//获取SYSTEM类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_GET_SYSTEM</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token class-name">Setting</span> setting <span class="token operator">=</span> <span class="token function">getSystemSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token function">packageValueForCallResult</span><span class="token punctuation">(</span>setting<span class="token punctuation">,</span> <span class="token function">isTrackingGeneration</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//保存GLOBAL类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_PUT_GLOBAL</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token function">getSettingValue</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> tag <span class="token operator">=</span> <span class="token function">getSettingTag</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">boolean</span> makeDefault <span class="token operator">=</span> <span class="token function">getSettingMakeDefault</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">boolean</span> overrideableByRestore <span class="token operator">=</span> <span class="token function">getSettingOverrideableByRestore</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">insertGlobalSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> makeDefault<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                        overrideableByRestore<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//保存SECURE类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_PUT_SECURE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token function">getSettingValue</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> tag <span class="token operator">=</span> <span class="token function">getSettingTag</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">boolean</span> makeDefault <span class="token operator">=</span> <span class="token function">getSettingMakeDefault</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">boolean</span> overrideableByRestore <span class="token operator">=</span> <span class="token function">getSettingOverrideableByRestore</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">insertSecureSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> makeDefault<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                        overrideableByRestore<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//保存SYSTEM类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_PUT_SYSTEM</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token function">getSettingValue</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">boolean</span> overrideableByRestore <span class="token operator">=</span> <span class="token function">getSettingOverrideableByRestore</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">insertSystemSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">,</span> overrideableByRestore<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//删除GLOBAL类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_DELETE_GLOBAL</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> rows <span class="token operator">=</span> <span class="token function">deleteGlobalSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token class-name">Bundle</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                result<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token constant">RESULT_ROWS_DELETED</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//删除SECURE类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_DELETE_SECURE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> rows <span class="token operator">=</span> <span class="token function">deleteSecureSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token class-name">Bundle</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                result<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token constant">RESULT_ROWS_DELETED</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//删除SYSTEM类型的设置数据</span>
            <span class="token keyword">case</span> <span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">CALL_METHOD_DELETE_SYSTEM</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> rows <span class="token operator">=</span> <span class="token function">deleteSystemSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token class-name">Bundle</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                result<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token constant">RESULT_ROWS_DELETED</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">LOG_TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;call() with invalid method: &quot;</span> <span class="token operator">+</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在SettingsProvider类中的onCreate()方法中，先创建一个SettingsRegistry对象，初始化一些设置数据保存的文件路径名称等, 同时也在系统启动的时候添加注册SettingsService, 可以让设备一启动，系统设置就可以正常工作了。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SettingsRegistry</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SETTINGS_FILE_GLOBAL</span> <span class="token operator">=</span> <span class="token string">&quot;settings_global.xml&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SETTINGS_FILE_SYSTEM</span> <span class="token operator">=</span> <span class="token string">&quot;settings_system.xml&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SETTINGS_FILE_SECURE</span> <span class="token operator">=</span> <span class="token string">&quot;settings_secure.xml&quot;</span><span class="token punctuation">;</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>紧接着，重点来了。最终的call()方法实现了系统设置的增删改查。</p><p>现在我们还是以保存Secure类型的数据数据为例，把call()方法中的逻辑以及向下对应的方法调用链简单展示一下哈</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">//去插入Secure类型的Settings数据</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">insertSecureSetting</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">,</span> <span class="token class-name">String</span> tag<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> makeDefault<span class="token punctuation">,</span> <span class="token keyword">int</span> requestingUserId<span class="token punctuation">,</span> <span class="token keyword">boolean</span> forceNotify<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> overrideableByRestore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
        <span class="token keyword">return</span> <span class="token function">mutateSecureSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> makeDefault<span class="token punctuation">,</span> requestingUserId<span class="token punctuation">,</span>
                <span class="token constant">MUTATION_OPERATION_INSERT</span><span class="token punctuation">,</span> forceNotify<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> overrideableByRestore<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

<span class="token comment">//根据保存的数据类型做一个转换操作</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">mutateSecureSetting</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">,</span> <span class="token class-name">String</span> tag<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> makeDefault<span class="token punctuation">,</span> <span class="token keyword">int</span> requestingUserId<span class="token punctuation">,</span> <span class="token keyword">int</span> operation<span class="token punctuation">,</span> <span class="token keyword">boolean</span> forceNotify<span class="token punctuation">,</span>
            <span class="token keyword">int</span> mode<span class="token punctuation">,</span> <span class="token keyword">boolean</span> overrideableByRestore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Make sure the caller can change the settings.</span>
        <span class="token function">enforceWritePermission</span><span class="token punctuation">(</span><span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_SECURE_SETTINGS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token comment">// Mutate the value.</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>operation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token constant">MUTATION_OPERATION_INSERT</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> mSettingsRegistry<span class="token punctuation">.</span><span class="token function">insertSettingLocked</span><span class="token punctuation">(</span><span class="token constant">SETTINGS_TYPE_SECURE</span><span class="token punctuation">,</span>
                            owningUserId<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> makeDefault<span class="token punctuation">,</span>
                            callingPackage<span class="token punctuation">,</span> forceNotify<span class="token punctuation">,</span> <span class="token constant">CRITICAL_SECURE_SETTINGS</span><span class="token punctuation">,</span>
                            overrideableByRestore<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
               <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据上面Secure类型判断，该类型的数据插入动作又调用了SettingsRegistry中的insertSettingLocked()方法，那我们就继续看下这个方法的具体逻辑吧。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">insertSettingLocked</span><span class="token punctuation">(</span><span class="token keyword">int</span> type<span class="token punctuation">,</span> <span class="token keyword">int</span> userId<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">,</span>
                <span class="token class-name">String</span> tag<span class="token punctuation">,</span> <span class="token keyword">boolean</span> makeDefault<span class="token punctuation">,</span> <span class="token keyword">boolean</span> forceNonSystemPackage<span class="token punctuation">,</span> <span class="token class-name">String</span> packageName<span class="token punctuation">,</span>
                <span class="token keyword">boolean</span> forceNotify<span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> criticalSettings<span class="token punctuation">,</span> <span class="token keyword">boolean</span> overrideableByRestore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

            <span class="token keyword">boolean</span> success <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token class-name">SettingsState</span> settingsState <span class="token operator">=</span> <span class="token function">peekSettingsStateLocked</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>settingsState <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                 <span class="token comment">//保存传入的Settings数据</span>
                success <span class="token operator">=</span> settingsState<span class="token punctuation">.</span><span class="token function">insertSettingLocked</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span>
                        tag<span class="token punctuation">,</span> makeDefault<span class="token punctuation">,</span> forceNonSystemPackage<span class="token punctuation">,</span> packageName<span class="token punctuation">,</span> overrideableByRestore<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>success <span class="token operator">&amp;&amp;</span> criticalSettings <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> criticalSettings<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                settingsState<span class="token punctuation">.</span><span class="token function">persistSyncLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
             <span class="token comment">//如果保存成功，通知Settings数据发送变化</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>forceNotify <span class="token operator">||</span> success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">notifyForSettingsChange</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> success<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在notifyForSettingsChange()方法中，会通过handler发送消息，告知对应的URI发生了变化。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">notifyForSettingsChange</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Increment the generation first, so observers always see the new value</span>
            mGenerationRegistry<span class="token punctuation">.</span><span class="token function">incrementGeneration</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isGlobalSettingsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isConfigSettingsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
               
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> userId <span class="token operator">=</span> <span class="token function">getUserIdFromKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token function">getNotificationUriFor</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                 <span class="token comment">//通知某个URI发生了变化</span>
                mHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span><span class="token class-name">MyHandler</span><span class="token punctuation">.</span><span class="token constant">MSG_NOTIFY_URI_CHANGED</span><span class="token punctuation">,</span>
                        userId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendToTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Always notify that our data changed</span>
            mHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span><span class="token class-name">MyHandler</span><span class="token punctuation">.</span><span class="token constant">MSG_NOTIFY_DATA_CHANGED</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendToTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>handler中具体的实现如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">MyHandler</span> <span class="token keyword">extends</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
            <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MSG_NOTIFY_URI_CHANGED</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MSG_NOTIFY_DATA_CHANGED</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

            <span class="token keyword">public</span> <span class="token class-name">MyHandler</span><span class="token punctuation">(</span><span class="token class-name">Looper</span> looper<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">super</span><span class="token punctuation">(</span>looper<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token constant">MSG_NOTIFY_URI_CHANGED</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token keyword">int</span> userId <span class="token operator">=</span> msg<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
                        <span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">)</span> msg<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                             <span class="token comment">//最终通知我们在ContentResolver中注册的ContentObserver观察者</span>
                            <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notifyChange</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">LOG_TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Failed to notify for &quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> uri<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">LOG_TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Notifying for &quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>

                    <span class="token keyword">case</span> <span class="token constant">MSG_NOTIFY_DATA_CHANGED</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        mBackupManager<span class="token punctuation">.</span><span class="token function">dataChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">scheduleWriteFallbackFilesJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样最终就回调到了我们最初注册的SettingsObserver中重写的onChange()方法了。这样以来，对特定键值的URI做了监听，如果保存的settings值发生了变化，就可以第一时间处理对应的逻辑了。</p>`,42),k={href:"https://blog.csdn.net/liu_guizhou/article/details/125034986",target:"_blank",rel:"noopener noreferrer"};function r(d,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[n("本文转自 "),s("a",k,[n("https://blog.csdn.net/liu_guizhou/article/details/125034986"),c(a)]),n("，如有侵权，请联系删除。")])])}const b=t(i,[["render",r],["__file","Settingsshujukuduxiecaozuoheshujujiantingbianhuayuanlifenxi.html.vue"]]);export{b as default};
