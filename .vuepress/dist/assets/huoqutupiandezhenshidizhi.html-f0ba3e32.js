import{_ as n,o as s,c as a,a as t}from"./app-f541e591.js";const p={},o=t(`<p>在开发中我们需要获取手机上的图片信息， 系统提供的有时候是一个可以访问展示的uri地址，但是当我们需要对图片进行一定的操作时比如 删除。这个时候去删除是无法操作的，因为系统提供的地址并不是对应图片在手机中的真实文件路径。所以需要对uri进行一定的转换。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 根据图片的Uri获取图片的绝对路径(已经适配多种API)
     * <span class="token keyword">@return</span> 如果Uri对应的图片存在,那么返回该图片的绝对路径,否则返回null
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getRealPathFromUri</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> sdkVersion <span class="token operator">=</span> <span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sdkVersion <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// SDK &lt; Api11</span>
            <span class="token keyword">return</span> <span class="token function">getRealPathFromUri_BelowApi11</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sdkVersion <span class="token operator">&lt;</span> <span class="token number">19</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// SDK &gt; 11 &amp;&amp; SDK &lt; 19</span>
            <span class="token keyword">return</span> <span class="token function">getRealPathFromUri_Api11To18</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// SDK &gt; 19</span>
        <span class="token keyword">return</span> <span class="token function">getRealFilePath</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * 适配api11-api18,根据uri获取图片的绝对路径
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getRealPathFromUri_Api11To18</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> projection <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media</span><span class="token punctuation">.</span><span class="token constant">DATA</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">CursorLoader</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CursorLoader</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> uri<span class="token punctuation">,</span> projection<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">loadInBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cursor<span class="token punctuation">.</span><span class="token function">moveToFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            filePath <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span>projection<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> filePath<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 适配api11以下(不包括api11),根据uri获取图片的绝对路径
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getRealPathFromUri_BelowApi11</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> projection <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media</span><span class="token punctuation">.</span><span class="token constant">DATA</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> projection<span class="token punctuation">,</span>
                <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cursor<span class="token punctuation">.</span><span class="token function">moveToFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            filePath <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span>projection<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> filePath<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">context</span>
     * <span class="token keyword">@param</span> <span class="token parameter">uri</span>
     * <span class="token keyword">@return</span> 文件绝对路径或者null
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getRealFilePath</span><span class="token punctuation">(</span> <span class="token keyword">final</span> <span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Uri</span> uri <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token keyword">null</span> <span class="token operator">==</span> uri <span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> scheme <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> scheme <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span>
            data <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token class-name">ContentResolver</span><span class="token punctuation">.</span><span class="token constant">SCHEME_FILE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span> scheme <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            data <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token class-name">ContentResolver</span><span class="token punctuation">.</span><span class="token constant">SCHEME_CONTENT</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span> scheme <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span> uri<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>ImageColumns</span><span class="token punctuation">.</span><span class="token constant">DATA</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token keyword">null</span> <span class="token operator">!=</span> cursor <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> cursor<span class="token punctuation">.</span><span class="token function">moveToFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">int</span> index <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span> <span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>ImageColumns</span><span class="token punctuation">.</span><span class="token constant">DATA</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span> index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        data <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span> index <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","huoqutupiandezhenshidizhi.html.vue"]]);export{k as default};
