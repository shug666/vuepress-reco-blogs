import{_ as c,r as e,o,c as i,b as a,d as n,e as t,a as p}from"./app-e8f85126.js";const u={},l=p(`<h2 id="_1-范围裁切" tabindex="-1"><a class="header-anchor" href="#_1-范围裁切" aria-hidden="true">#</a> 1 范围裁切</h2><p>范围裁切有两个方法： <code>clipRect()</code> 和 <code>clipPath()</code>。裁切方法之后的绘制代码，都会被限制在裁切范围内。</p><h3 id="cliprect" tabindex="-1"><a class="header-anchor" href="#cliprect" aria-hidden="true">#</a> clipRect()</h3><p>使用很简单，直接应用：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">clipRect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5rzjhx8j21cq0r2aig.jpg" alt=""></p><p>记得要加上 <code>Canvas.save()</code> 和 <code>Canvas.restore()</code> 来及时恢复绘制范围，所以完整代码是这样的：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">clipRect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clippath" tabindex="-1"><a class="header-anchor" href="#clippath" aria-hidden="true">#</a> clipPath()</h3><p>其实和 clipRect() 用法完全一样，只是把参数换成了 <code>Path</code> ，所以能裁切的形状更多一些：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">clipPath</span><span class="token punctuation">(</span>path1<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>x<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">clipPath</span><span class="token punctuation">(</span>path2<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> point2<span class="token punctuation">.</span>x<span class="token punctuation">,</span> point2<span class="token punctuation">.</span>y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-几何变换" tabindex="-1"><a class="header-anchor" href="#_2-几何变换" aria-hidden="true">#</a> 2 几何变换</h2><p>几何变换的使用大概分为三类：</p><ol><li>使用 <code>Canvas</code> 来做常见的二维变换；</li><li>使用 <code>Matrix</code> 来做常见和不常见的二维变换；</li><li>使用 <code>Camera</code> 来做三维变换。</li></ol><h3 id="使用-canvas-来做常见的二维变换" tabindex="-1"><a class="header-anchor" href="#使用-canvas-来做常见的二维变换" aria-hidden="true">#</a> 使用 Canvas 来做常见的二维变换：</h3><h4 id="canvas-translate-float-dx-float-dy-平移" tabindex="-1"><a class="header-anchor" href="#canvas-translate-float-dx-float-dy-平移" aria-hidden="true">#</a> Canvas.translate(float dx, float dy) 平移</h4><p>参数里的 <code>dx</code> 和 <code>dy</code> 表示横向和纵向的位移。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="canvas-rotate-float-degrees-float-px-float-py-旋转" tabindex="-1"><a class="header-anchor" href="#canvas-rotate-float-degrees-float-px-float-py-旋转" aria-hidden="true">#</a> Canvas.rotate(float degrees, float px, float py) 旋转</h4><p>参数里的 <code>degrees</code> 是旋转角度，单位是度（也就是一周有 360° 的那个单位），方向是顺时针为正向； <code>px</code> 和 <code>py</code> 是轴心的位置。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="canvas-scale-float-sx-float-sy-float-px-float-py-放缩" tabindex="-1"><a class="header-anchor" href="#canvas-scale-float-sx-float-sy-float-px-float-py-放缩" aria-hidden="true">#</a> Canvas.scale(float sx, float sy, float px, float py) 放缩</h4><p>参数里的 <code>sx</code> <code>sy</code> 是横向和纵向的放缩倍数； <code>px</code> <code>py</code> 是放缩的轴心。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.3f</span><span class="token punctuation">,</span> <span class="token number">1.3f</span><span class="token punctuation">,</span> x <span class="token operator">+</span> bitmapWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> y <span class="token operator">+</span> bitmapHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5u9xvj5j20wj0hc113.jpg" alt=""></p><h4 id="skew-float-sx-float-sy-错切" tabindex="-1"><a class="header-anchor" href="#skew-float-sx-float-sy-错切" aria-hidden="true">#</a> skew(float sx, float sy) 错切</h4><p>参数里的 <code>sx</code> 和 <code>sy</code> 是 x 方向和 y 方向的错切系数。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">skew</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5f</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5ug5zo7j20pu0d6dl7.jpg" alt=""></p><h3 id="使用-matrix-来做变换" tabindex="-1"><a class="header-anchor" href="#使用-matrix-来做变换" aria-hidden="true">#</a> 使用 Matrix 来做变换</h3><h4 id="使用-matrix-来做常见变换" tabindex="-1"><a class="header-anchor" href="#使用-matrix-来做常见变换" aria-hidden="true">#</a> 使用 Matrix 来做常见变换</h4><p><code>Matrix</code> 做常见变换的方式：</p><p>1.创建 <code>Matrix</code> 对象；</p><p>2.调用 <code>Matrix</code> 的 <code>pre/postTranslate/Rotate/Scale/Skew()</code> 方法来设置几何变换；<br> 3.使用 <code>Canvas.setMatrix(matrix)</code> 或 <code>Canvas.concat(matrix)</code> 来把几何变换应用到 <code>Canvas</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Matrix</span> matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

matrix<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
matrix<span class="token punctuation">.</span><span class="token function">postTranslate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
matrix<span class="token punctuation">.</span><span class="token function">postRotate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果就不放图了，和 <code>Canvas</code> 是一样的。</p><p>把 <code>Matrix</code> 应用到 <code>Canvas</code> 有两个方法： <code>Canvas.setMatrix(matrix)</code> 和 <code>Canvas.concat(matrix)</code>。</p><ol><li><code>Canvas.setMatrix(matrix)</code>：用 <code>Matrix</code> 直接替换 <code>Canvas</code> 当前的变换矩阵，即抛弃 <code>Canvas</code> 当前的变换，改用 <code>Matrix</code> 的变换（注：根据下面评论里以及我在微信公众号中收到的反馈，不同的系统中 <code>setMatrix(matrix)</code> 的行为可能不一致，所以还是尽量用 <code>concat(matrix)</code> 吧）；</li><li><code>Canvas.concat(matrix)</code>：用 <code>Canvas</code> 当前的变换矩阵和 <code>Matrix</code> 相乘，即基于 <code>Canvas</code> 当前的变换，叠加上 <code>Matrix</code> 中的变换。</li></ol><h4 id="使用-matrix-来做自定义变换" tabindex="-1"><a class="header-anchor" href="#使用-matrix-来做自定义变换" aria-hidden="true">#</a> 使用 Matrix 来做自定义变换</h4><p><code>Matrix</code> 的自定义变换使用的是 <code>setPolyToPoly()</code> 方法。</p><h5 id="matrix-setpolytopoly-float-src-int-srcindex-float-dst-int-dstindex-int-pointcount-用点对点映射的方式设置变换" tabindex="-1"><a class="header-anchor" href="#matrix-setpolytopoly-float-src-int-srcindex-float-dst-int-dstindex-int-pointcount-用点对点映射的方式设置变换" aria-hidden="true">#</a> Matrix.setPolyToPoly(float[] src, int srcIndex, float[] dst, int dstIndex, int pointCount) 用点对点映射的方式设置变换</h5><p><code>poly</code> 就是「多」的意思。<code>setPolyToPoly()</code> 的作用是通过多点的映射的方式来直接设置变换。「多点映射」的意思就是把指定的点移动到给出的位置，从而发生形变。例如：(0, 0) -&gt; (100, 100) 表示把 (0, 0) 位置的像素移动到 (100, 100) 的位置，这个是单点的映射，单点映射可以实现平移。而多点的映射，就可以让绘制内容任意地扭曲。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Matrix</span> matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> pointsSrc <span class="token operator">=</span> <span class="token punctuation">{</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> pointsDst <span class="token operator">=</span> <span class="token punctuation">{</span>left <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> top <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">120</span><span class="token punctuation">,</span> top <span class="token operator">-</span> <span class="token number">90</span><span class="token punctuation">,</span> left <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> bottom <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> bottom <span class="token operator">+</span> <span class="token number">60</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

matrix<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
matrix<span class="token punctuation">.</span><span class="token function">setPolyToPoly</span><span class="token punctuation">(</span>pointsSrc<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pointsDst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5uw4t2jj20q60fcag4.jpg" alt=""></p><p>参数里，<code>src</code> 和 <code>dst</code> 是源点集合目标点集；<code>srcIndex</code> 和 <code>dstIndex</code> 是第一个点的偏移；<code>pointCount</code> 是采集的点的个数（个数不能大于 4，因为大于 4 个点就无法计算变换了）。</p><h3 id="使用-camera-来做三维变换" tabindex="-1"><a class="header-anchor" href="#使用-camera-来做三维变换" aria-hidden="true">#</a> 使用 Camera 来做三维变换</h3><p><code>Camera</code> 的三维变换有三类：旋转、平移、移动相机。</p><h4 id="camera-rotate-三维旋转" tabindex="-1"><a class="header-anchor" href="#camera-rotate-三维旋转" aria-hidden="true">#</a> Camera.rotate*() 三维旋转</h4><p><code>Camera.rotate*()</code> 一共有四个方法： <code>rotateX(deg)</code> <code>rotateY(deg)</code> <code>rotateZ(deg)</code> <code>rotate(x, y, z)</code>。这四个方法的区别不用我说了吧？</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

camera<span class="token punctuation">.</span><span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 旋转 Camera 的三维空间</span>
camera<span class="token punctuation">.</span><span class="token function">applyToCanvas</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把旋转投影到 Canvas</span>

canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>x<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5vam5fij20rq0g0agl.jpg" alt=""></p><p>另外，<code>Camera</code> 和 <code>Canvas</code> 一样也需要保存和恢复状态才能正常绘制，不然在界面刷新之后绘制就会出现问题。所以上面这张图完整的代码应该是这样的：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

camera<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 保存 Camera 的状态</span>
camera<span class="token punctuation">.</span><span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 旋转 Camera 的三维空间</span>
camera<span class="token punctuation">.</span><span class="token function">applyToCanvas</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把旋转投影到 Canvas</span>
camera<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 恢复 Camera 的状态</span>

canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>x<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你需要图形左右对称，需要配合上 <code>Canvas.translate()</code>，在三维旋转之前把绘制内容的中心点移动到原点，即旋转的轴心，然后在三维旋转后再把投影移动回来：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

camera<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 保存 Camera 的状态</span>
camera<span class="token punctuation">.</span><span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 旋转 Camera 的三维空间</span>
canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 旋转之后把投影移动回来</span>
camera<span class="token punctuation">.</span><span class="token function">applyToCanvas</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把旋转投影到 Canvas</span>
canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span>centerX<span class="token punctuation">,</span> <span class="token operator">-</span>centerY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 旋转之前把绘制内容移动到轴心（原点）</span>
camera<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 恢复 Camera 的状态</span>

canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>x<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>Canvas</code> 的几何变换顺序是反的，所以要把移动到中心的代码写在下面，把从中心移动回来的代码写在上面。</p></blockquote><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5vucbnrj20ne0cugqq.jpg" alt=""></p><h4 id="camera-translate-float-x-float-y-float-z-移动" tabindex="-1"><a class="header-anchor" href="#camera-translate-float-x-float-y-float-z-移动" aria-hidden="true">#</a> Camera.translate(float x, float y, float z) 移动</h4><p>它的使用方式和 <code>Camera.rotate*()</code> 相同，而且我在项目中没有用过它，所以就不贴代码和效果图了。</p><h4 id="camera-setlocation-x-y-z-设置虚拟相机的位置" tabindex="-1"><a class="header-anchor" href="#camera-setlocation-x-y-z-设置虚拟相机的位置" aria-hidden="true">#</a> Camera.setLocation(x, y, z) 设置虚拟相机的位置</h4><p>注意！这个方法有点奇葩，它的参数的单位不是像素，而是 inch，英寸。</p><p>我 TM 的真没逗你，我也没有胡说八道，它的单位就。是。英。寸。</p>`,62),d={href:"https://skia.org/?ref=rengwuxian.com",target:"_blank",rel:"noopener noreferrer"},r=p(`<p>吐槽到此为止，俗话说看透不说透，还是好朋友。</p><p>在 <code>Camera</code> 中，相机的默认位置是 (0, 0, -8)（英寸）。8 x 72 = 576，所以它的默认位置是 (0, 0, -576)（像素）。</p><p>如果绘制的内容过大，当它翻转起来的时候，就有可能出现图像投影过大的「糊脸」效果。而且由于换算单位被写死成了 72 像素，而不是和设备 dpi 相关的，所以在像素越大的手机上，这种「糊脸」效果会越明显。</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5wuncd3j20si0gutf2.jpg" alt=""></p><p>而使用 <code>setLocation()</code> 方法来把相机往后移动，就可以修复这种问题。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>camera<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> newZ<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/shug666/image/main/images52eb2279ly1fig5x2krxfj20lm0efgqr.jpg" alt=""></p><p><code>Camera.setLocation(x, y, z)</code> 的 <code>x</code> 和 <code>y</code> 参数一般不会改变，直接填 0 就好。</p>`,8),k={href:"https://rengwuxian.com/ui-1-4/",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const s=e("ExternalLinkIcon");return o(),i("div",null,[l,a("p",null,[n("这种设计源自 Android 底层的图像引擎 "),a("a",d,[n("Skia"),t(s)]),n(" 。在 Skia 中，Camera 的位置单位是英寸，英寸和像素的换算单位在 Skia 中被写死为了 72 像素，而 Android 中把这个换算单位照搬了过来。是的，它。写。死。了。")]),r,a("p",null,[n("本文转自 "),a("a",k,[n("https://rengwuxian.com/ui-1-4/"),t(s)]),n("，如有侵权，请联系删除。")])])}const f=c(u,[["render",v],["__file","zidingyiView1-4-Canvasduihuizhidefuzhu.html.vue"]]);export{f as default};
