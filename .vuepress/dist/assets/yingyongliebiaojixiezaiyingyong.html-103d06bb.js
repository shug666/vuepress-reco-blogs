import{_ as n,o as s,c as a,a as p}from"./app-ee4ba21e.js";const t={},e=p(`<h2 id="应用列表" tabindex="-1"><a class="header-anchor" href="#应用列表" aria-hidden="true">#</a> 应用列表</h2><p>获取手机上已安装应用列表，将获取到的信息用集合返回，可以自己定义是否过滤系统应用，Appinfo是一个实体类，包含应用的名称 包名 图标icon等等</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 获取手机已安装应用列表
     * <span class="token keyword">@param</span> <span class="token parameter">ctx</span>
     * <span class="token keyword">@param</span> <span class="token parameter">isFilterSystem</span> 是否过滤系统应用
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AppInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllAppInfo</span><span class="token punctuation">(</span><span class="token class-name">Context</span> ctx<span class="token punctuation">,</span><span class="token keyword">boolean</span> isFilterSystem<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AppInfo</span><span class="token punctuation">&gt;</span></span> appBeanList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AppInfo</span> bean <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
 
        <span class="token class-name">PackageManager</span> packageManager <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PackageInfo</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> packageManager<span class="token punctuation">.</span><span class="token function">getInstalledPackages</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">PackageInfo</span> p <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bean<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">.</span><span class="token function">loadIcon</span><span class="token punctuation">(</span>packageManager<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bean<span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span>packageManager<span class="token punctuation">.</span><span class="token function">getApplicationLabel</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bean<span class="token punctuation">.</span><span class="token function">setPackage_name</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">.</span>packageName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> flags <span class="token operator">=</span> p<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">.</span>flags<span class="token punctuation">;</span>
            <span class="token comment">// 判断是否是属于系统的apk</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> <span class="token class-name">ApplicationInfo</span><span class="token punctuation">.</span><span class="token constant">FLAG_SYSTEM</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token operator">&amp;&amp;</span>isFilterSystem<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//                bean.setSystem(true);</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                appBeanList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> appBeanList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppInfo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> uid<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> label<span class="token punctuation">;</span><span class="token comment">//应用名称</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> package_name<span class="token punctuation">;</span><span class="token comment">//应用包名</span>
    <span class="token keyword">public</span> <span class="token class-name">Drawable</span> icon<span class="token punctuation">;</span><span class="token comment">//应用icon</span>
    
    <span class="token keyword">public</span> <span class="token class-name">AppInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        uid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        label <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        package_name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        icon <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> uid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUid</span><span class="token punctuation">(</span><span class="token keyword">int</span> uid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>uid <span class="token operator">=</span> uid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getLabel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> label<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLabel</span><span class="token punctuation">(</span><span class="token class-name">String</span> label<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>label <span class="token operator">=</span> label<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPackage_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> package_name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPackage_name</span><span class="token punctuation">(</span><span class="token class-name">String</span> package_name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>package_name <span class="token operator">=</span> package_name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token class-name">Drawable</span> <span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> icon<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token class-name">Drawable</span> icon<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>icon <span class="token operator">=</span> icon<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="卸载app的三种方法" tabindex="-1"><a class="header-anchor" href="#卸载app的三种方法" aria-hidden="true">#</a> 卸载APP的三种方法</h2><h3 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一" aria-hidden="true">#</a> 方法一</h3><p>直接使用Intent卸载</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">fromParts</span><span class="token punctuation">(</span><span class="token string">&quot;package&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.example.demo&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DELETE</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这是最简单的方式，调用卸载方法系统会弹出卸载APP对话框，点击确定就会立即卸载，不需要额外权限</p><h3 id="方法二" tabindex="-1"><a class="header-anchor" href="#方法二" aria-hidden="true">#</a> 方法二</h3><p>使用PackageManager静默卸载，谷歌认为该方法是不安全的行为，因此该接口是@hide的，不是公开的接口，调用此接口需要有系统签名和相应的系统级权限</p><p>具体来说就是需要 <code>&lt;uses-permission android:name=&quot;android.permission.DELETE_PACKAGES&quot;/&gt;</code>权限，但<code>&lt;uses-permission android:name=&quot;android.permission.DELETE_PACKAGES&quot;/&gt;</code> 是系统级权限，普通APP根本无法获取到，如果在AndroidManifest.xml强行加入该权限编译也无法通过，唯一的办法就是使用APK反编译工具在Android Studio之外修改权限，比如用apktool反编译工具先把apk文件解压出来，用编辑器在AndroidManifest.xml中加入上面的两个权限，然后在用工具apktool重新打包</p><p>获得<code>&lt;uses-permission android:name=&quot;android.permission.DELETE_PACKAGES&quot;/&gt;</code>权限后，定义PackageDeleteObserver实现类，实现packageDeleted方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">PackageDeleteObserver</span> <span class="token keyword">extends</span> <span class="token class-name">IPackageDeleteObserver<span class="token punctuation">.</span>Stub</span> <span class="token punctuation">{</span>  
    <span class="token keyword">private</span> <span class="token keyword">int</span> position<span class="token punctuation">;</span>  
    <span class="token keyword">private</span> <span class="token keyword">int</span> mFlag<span class="token punctuation">;</span>  

    <span class="token keyword">public</span> <span class="token class-name">PackageDeleteObserver</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        position <span class="token operator">=</span> index<span class="token punctuation">;</span>  
        mFlag <span class="token operator">=</span> flag<span class="token punctuation">;</span><span class="token comment">// 0卸载1个包，1卸载N个包 N&gt;1  </span>
    <span class="token punctuation">}</span>  

    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">packageDeleted</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg0<span class="token punctuation">,</span> <span class="token keyword">int</span> arg1<span class="token punctuation">)</span>  
            <span class="token keyword">throws</span> <span class="token class-name">RemoteException</span> <span class="token punctuation">{</span>  
        <span class="token comment">// TODO Auto-generated method stub </span>
        <span class="token class-name">Message</span> msg<span class="token punctuation">;</span>  
        msg <span class="token operator">=</span> mHandle<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        msg<span class="token punctuation">.</span>what <span class="token operator">=</span> <span class="token constant">FLAG_DELETE_VIRUS</span><span class="token punctuation">;</span>  
        msg<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> position<span class="token punctuation">;</span>  
        msg<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> mFlag<span class="token punctuation">;</span>  
        msg<span class="token punctuation">.</span><span class="token function">sendToTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取PackageManager 对象，调用deletePackage方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">PackageManager</span> pkgManager <span class="token operator">=</span> mContext<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">PackageDeleteObserver</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageDeleteObserver</span><span class="token punctuation">(</span>currVirus<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
pkgManager<span class="token punctuation">.</span><span class="token function">deletePackage</span><span class="token punctuation">(</span>pakName<span class="token punctuation">,</span> observer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，还需要进行系统签名才能使用</p><p>对apk进行系统签名：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar signapk.jar platform.x509.pem platform.pk8 test.apk test_signed.apk1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将签名之后的文件 push到手机中，需要root权限</p><h3 id="方法三" tabindex="-1"><a class="header-anchor" href="#方法三" aria-hidden="true">#</a> 方法三</h3><p>通过pm命令方式实现静默卸载，该方法直接对Android系统执行卸载命令，需要root权限</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//pm命令可以通过adb在shell中执行，同样，我们可以通过代码来执行 </span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Process</span> process <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">InputStream</span> errIs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">InputStream</span> inIs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        process <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> read <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        errIs <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">getErrorStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> errIs<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            baos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>read<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        inIs <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> inIs<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            baos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>read<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>baos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>inIs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            inIs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>errIs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            errIs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        process<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        result <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行卸载命令</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&quot;pm&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;uninstall&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;packageName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编译生成apk时，要在manifest文件下添加Android:sharedUserId=”android.uid.system”</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>  
     <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.xieyuan.mhfilemanager<span class="token punctuation">&quot;</span></span>  
     <span class="token attr-name"><span class="token namespace">android:</span>versionCode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>  
     <span class="token attr-name"><span class="token namespace">android:</span>versionName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.0<span class="token punctuation">&quot;</span></span>  
     <span class="token attr-name"><span class="token namespace">android:</span>installLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>internalOnly<span class="token punctuation">&quot;</span></span>  
     <span class="token attr-name"><span class="token namespace">android:</span>sharedUserId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.uid.system<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","yingyongliebiaojixiezaiyingyong.html.vue"]]);export{k as default};
