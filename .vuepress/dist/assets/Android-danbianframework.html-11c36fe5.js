import{_ as s,r as n,o as d,c as o,b as a,d as e,e as i,a as t}from"./app-f541e591.js";const c={},m=t(`<h2 id="一-编译framework资源文件" tabindex="-1"><a class="header-anchor" href="#一-编译framework资源文件" aria-hidden="true">#</a> 一 : 编译framework资源文件</h2><p>如果修改android framework资源文件，需要先编译资源文件，然后再编译framework才可以正常引用，</p><p>进入项目目录 cd xxx工程目录**<code>/frameworks/base/core/res/</code>** 执行mm 编译 framework-res.apk（原生或高通，如果只是修改了core目录下的res资源代码，到这一步就可以了！）</p><h3 id="_1、生成资源的引用" tabindex="-1"><a class="header-anchor" href="#_1、生成资源的引用" aria-hidden="true">#</a> 1、生成资源的引用</h3><p>编译完后**<code>com.android.internal.R</code>**中会生成资源的引用</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images/d2dda8c0f9844c08979c3b31f22264e3.png" alt="在这里插入图片描述"></p><p>原因解析：</p><p>**<code>frameworks\\\\base\\\\core\\\\res\\\\Android.bp</code>**文件有以下代码，Android.bp文件描述了模块代码编译的规则，有兴趣可以去深入了解，以前是用Android.mk文件的，现在源码基本都是bp文件了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>android_app <span class="token punctuation">{</span> //表示编译成一个apk
    name: <span class="token string">&quot;framework-res&quot;</span>,  //表示将这个apk命名为framework-res.apk
    sdk_version: <span class="token string">&quot;core_platform&quot;</span>,
    certificate: <span class="token string">&quot;platform&quot;</span>, 
    resource_dirs: <span class="token punctuation">[</span>  //指定apk所需要的资源文件路径
        <span class="token string">&quot;res&quot;</span>,  //当前res目录
    <span class="token punctuation">]</span>,
    <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以说，如果我们修改了res目录下的资源文件，只要编译出framework-res.apk文件，然后push进去手机就可以了，其他jar包、so库什么的原因大致一样</p><p>如果是修改了**<code>/frameworks/base</code>**目录下的其他文件，则还需要下面的操作</p><h3 id="_2、编译-framework-jar" tabindex="-1"><a class="header-anchor" href="#_2、编译-framework-jar" aria-hidden="true">#</a> 2、编译 framework.jar</h3><pre><code>在目录 frameworks/base/ 下执行mm 编译 framework.jar  
或者 使用
make framework-minus-apex（进行部分编译）
</code></pre><p>根据**<code>framework/base/</code>**目录下Android.bp中的提示：</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images/dda77758d575415e989f74fdcb56ea24.png" alt="在这里插入图片描述"></p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images/f2914084287d4f8199879098e1157e67.png" alt="在这里插入图片描述"></p><p>3、如果 <strong><code>frameworks/base/services</code></strong> 下有修改，则也要编译，在目录 <strong><code>/frameworks/base/services/java/</code></strong> 执行mm 编译services.jar</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images/e10183647845435e8d833611f0793a19.png" alt="在这里插入图片描述"></p><p>编译生成的文件都位于你的**<code>out/target/product/xxx/system/frameworks/</code>**目录下</p><p>注：若不生成新的apk、jar包文件，请将旧的.apk、.jar包删除</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images/45f720a2718e4826878f3ff025678c3b.png" alt="在这里插入图片描述"></p><h2 id="二-验证修改后的效果" tabindex="-1"><a class="header-anchor" href="#二-验证修改后的效果" aria-hidden="true">#</a> 二 : 验证修改后的效果</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb root  

adb remount  

adb push framework-res.apk /system/framework/  

adb push framework.jar /system/framework/  

adb push secondary\\_framework.jar /system/framework/ (如果存在secondary\\_framework.jar,需要push)  

adb push services.jar /system/framework/ （如果service有修改，需要push，还有一些类似service模块带有单独Android.bp的模块等，这里就不一一举例） 

adb reboot 重启设备。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>替换**<code>framework.jar</code><strong>同时还要</strong>删除<strong>这个目录下面的</strong><code>oat，arm，arm64</code>**三个目录(不删除会一直卡在开机动画)，最后再运行下面的命令重启zygote，这样新替换的framework.jar就生效了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell stop
adb shell start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-总结" tabindex="-1"><a class="header-anchor" href="#三-总结" aria-hidden="true">#</a> 三 : 总结</h2><p>在开发过程中,尤其是framework相关开发时,有时候需要重新编译资源文件.编译顺序和注意事项如下(均在源码根目录):</p><p>资源文件位置: <strong><code>frameworks/base/core/res</code></strong>，编译后生成的文件:<strong><code>framework-res.apk</code></strong> 另外**<code>com.android.internal.R</code><strong>会更新这个R.java所在目录</strong><code>/out/target/common/R/com/android/internal.</code>**</p><p>编译资源后,必须重新编译framework.jar.</p><p>如果在**<code>frameworks/base/core/res</code>**执行mm时并不重新编译,请使用mm -B</p><p>资源文件要小写</p><h2 id="四-其他模块单编介绍" tabindex="-1"><a class="header-anchor" href="#四-其他模块单编介绍" aria-hidden="true">#</a> 四：其他模块单编介绍</h2><p><strong><code>mmm system/core/init</code></strong> 等同于 <strong><code>cd system/core/init</code></strong> 进入目录后再执行mm。</p><p>编译系统采用的是增量编译，只会编译发生变化的目标文件。当需要重新编译所有的相关模块，则需要编译命令后增加参数-B，比如make -B [module_name]，或者 mm -B [module_path]。</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images/59d0dfef3c4242c8822689a731530e47.png" alt="在这里插入图片描述"></p>`,35),l={href:"https://blog.csdn.net/z1804362542/article/details/125977277?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168128706916800192216921%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168128706916800192216921&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125977277-null-null.142%5Ev82%5Einsert_down38,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=framework%20%E5%8D%95%E7%BC%96&spm=1018.2226.3001.4187",target:"_blank",rel:"noopener noreferrer"};function p(u,b){const r=n("ExternalLinkIcon");return d(),o("div",null,[m,a("p",null,[e("本文转自 "),a("a",l,[e("https://blog.csdn.net/z1804362542/article/details/125977277?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168128706916800192216921%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168128706916800192216921&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125977277-null-null.142^v82^insert_down38,201^v4^add_ask,239^v2^insert_chatgpt&utm_term=framework%20%E5%8D%95%E7%BC%96&spm=1018.2226.3001.4187"),i(r)]),e("，如有侵权，请联系删除。")])])}const g=s(c,[["render",p],["__file","Android-danbianframework.html.vue"]]);export{g as default};
