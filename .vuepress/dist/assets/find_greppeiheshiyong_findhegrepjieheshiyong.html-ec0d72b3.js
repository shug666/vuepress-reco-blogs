import{_ as e,r as p,o as t,c as i,b as n,d as a,e as l,a as r}from"./app-52856ff7.js";const o={},c=r(`<h2 id="一、使用find与grep" tabindex="-1"><a class="header-anchor" href="#一、使用find与grep" aria-hidden="true">#</a> 一、使用find与grep</h2><ol><li>查找所有&quot;.h&quot;文件（非组合命令）</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> /<span class="token environment constant">PATH</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.h&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>查找所有&quot;.h&quot;文件中的含有&quot;helloworld&quot;字符串的文件（组合命令）</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> /<span class="token environment constant">PATH</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.h&quot;</span> <span class="token parameter variable">-exec</span> <span class="token function">grep</span> <span class="token parameter variable">-in</span> <span class="token string">&quot;helloworld&quot;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>

<span class="token function">find</span> /<span class="token environment constant">PATH</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.h&quot;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">grep</span> <span class="token parameter variable">-in</span> <span class="token string">&quot;helloworld&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>查找所有&quot;.h&quot;和&quot;.c&quot;文件中的含有&quot;helloworld&quot;字符串的文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> /<span class="token environment constant">PATH</span> /<span class="token punctuation">(</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.h&quot;</span> <span class="token parameter variable">-or</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.c&quot;</span> /<span class="token punctuation">)</span> <span class="token parameter variable">-exec</span> <span class="token function">grep</span> <span class="token parameter variable">-in</span> <span class="token string">&quot;helloworld&quot;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>查找非备份文件中的含有&quot;helloworld&quot;字符串的文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> /<span class="token environment constant">PATH</span> /<span class="token punctuation">(</span> <span class="token parameter variable">-not</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*~&quot;</span> /<span class="token punctuation">)</span> <span class="token parameter variable">-exec</span> <span class="token function">grep</span> <span class="token parameter variable">-in</span> <span class="token string">&quot;helloworld&quot;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注：/PATH为查找路径，默认为当前路径。带-exec参数时必须以;结尾，否则会提示“find: 遗漏“-exec”的参数”。</strong></p><h2 id="二、使用find和xargs" tabindex="-1"><a class="header-anchor" href="#二、使用find和xargs" aria-hidden="true">#</a> 二、使用find和xargs</h2><h3 id="_1-find-pathname-options-print-exec-ok" tabindex="-1"><a class="header-anchor" href="#_1-find-pathname-options-print-exec-ok" aria-hidden="true">#</a> 1. find pathname -options [-print -exec -ok]</h3><p>-optinos<br> a) -name:按照文件名查找</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-name</span> “*.txt” <span class="token parameter variable">-print</span>
<span class="token function">find</span> ~ <span class="token parameter variable">-name</span> “<span class="token punctuation">[</span>a-z<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span>.txt” <span class="token parameter variable">-print</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>b) -perm:按照权限查找文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-perm</span> <span class="token number">755</span> <span class="token parameter variable">-print</span>  <span class="token comment">#查找权限为755的文件</span>
<span class="token function">find</span> ~ <span class="token parameter variable">-perm</span> 007 <span class="token parameter variable">-print</span> <span class="token comment">#查找o位置上具有7权限的文件</span>
<span class="token function">find</span> ~ <span class="token parameter variable">-perm</span> <span class="token number">4000</span> <span class="token parameter variable">-print</span> <span class="token comment">#查找具有suid的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>c) -prune<br> 不在当前目录下查找</p><p>d) -user和－nouser</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-user</span> zhao <span class="token parameter variable">-print</span> <span class="token comment">#查找文件属主是zhao的文件</span>
<span class="token function">find</span> ~ <span class="token parameter variable">-nouser</span> <span class="token parameter variable">-print</span> <span class="token comment">#查找文件属主已经被删除的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>e)-group和－nogroup</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-group</span> zhao <span class="token parameter variable">-print</span> <span class="token comment">#查找文件群组是zhao的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>f) 按照时间</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-5</span> <span class="token parameter variable">-print</span> <span class="token comment">#文件更改时间在5天内的文件</span>
<span class="token function">find</span> ~ <span class="token parameter variable">-mtime</span> +3 <span class="token parameter variable">-print</span> <span class="token comment">#文件更改时间在3天前的文件</span>
<span class="token function">find</span> ~ <span class="token parameter variable">-newer</span> file1 <span class="token parameter variable">-print</span> <span class="token comment">#查找比文件file1新的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>g)按照类型查找</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-type</span> d <span class="token parameter variable">-print</span> <span class="token comment">#查找所有目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>h) 按照大小</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-size</span> +1000000C <span class="token parameter variable">-print</span> <span class="token comment">#查找文件大小大于1000000字节(1M)的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>i) 查找位于本文件系统里面的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> / <span class="token parameter variable">-name</span> “*.txt” <span class="token parameter variable">-mount</span> <span class="token parameter variable">-print</span> -exec,-ok 
<span class="token comment">#find命令对于匹配文件执行该参数所给出shell命令，相应命令形式为: ‘command’ {} \\;</span>
<span class="token comment">#-ok 在执行命令前要确认</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-type</span> f <span class="token parameter variable">-exec</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
<span class="token function">find</span> / <span class="token parameter variable">-name</span> “*.log” <span class="token parameter variable">-mtime</span> +5 <span class="token parameter variable">-ok</span> <span class="token function">rm</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> core <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span> <span class="token comment">#使用-x dev参数   防止find搜索其他分区</span>
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-size</span> <span class="token number">0</span> <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span> <span class="token comment">#删除尺寸为０的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-xargs与-exec功能类似" tabindex="-1"><a class="header-anchor" href="#_2-xargs与-exec功能类似" aria-hidden="true">#</a> 2. xargs与-exec功能类似</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ~ <span class="token parameter variable">-type</span> f <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span>
<span class="token function">find</span> / <span class="token parameter variable">-name</span> “*.log” <span class="token parameter variable">-type</span> f -print<span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">grep</span> <span class="token parameter variable">-i</span> DB0
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">grep</span> <span class="token parameter variable">-i</span> “Mary” <span class="token comment">#在所有文件中检索字符串Mary</span>
<span class="token function">ls</span> *~ <span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token comment">#删除所有以~结尾的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、svn过滤svn文件夹" tabindex="-1"><a class="header-anchor" href="#三、svn过滤svn文件夹" aria-hidden="true">#</a> 三、svn过滤svn文件夹</h2><p>1.使用管道进行双层“过滤”，其中第二次grep使用了-v选项，即逆向匹配，打印出不匹配的行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-r</span> <span class="token string">&#39;function_name&#39;</span> * <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&#39;.svn&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.或者更简单一些，直接使用–exclude-dir选项，即指定排除目录，注意svn前的 .</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-r</span> --exclude-dir<span class="token operator">=</span><span class="token punctuation">\\</span>.svn <span class="token string">&#39;function_name&#39;</span> * 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3.grep多个过滤条件</p><p>a、或操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&#39;123|abc&#39;</span> filename  <span class="token comment">#找出文件（filename）中包含123或者包含abc的行</span>
  <span class="token function">egrep</span> <span class="token string">&#39;123|abc&#39;</span> filename    <span class="token comment">#用egrep同样可以实现</span>
  <span class="token function">awk</span> <span class="token string">&#39;/123|abc/&#39;</span> filename   <span class="token comment">#awk 的实现方式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>b、与操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token function">grep</span> pattern1 files <span class="token operator">|</span> <span class="token function">grep</span> pattern2 <span class="token comment">#显示既匹配 pattern1 又匹配 pattern2 的行。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>c、其他操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-i</span> pattern files <span class="token comment">#不区分大小写地搜索。默认情况区分大小写，</span>
<span class="token function">grep</span> <span class="token parameter variable">-l</span> pattern files <span class="token comment">#只列出匹配的文件名，</span>
<span class="token function">grep</span> <span class="token parameter variable">-L</span> pattern files <span class="token comment">#列出不匹配的文件名，</span>
<span class="token function">grep</span> <span class="token parameter variable">-w</span> pattern files <span class="token comment">#只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’），</span>
<span class="token function">grep</span> <span class="token parameter variable">-C</span> number pattern files <span class="token comment">#匹配的上下文分别显示[number]行，</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>d、find过滤svn文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token parameter variable">-type</span> f <span class="token operator">!</span> <span class="token parameter variable">-path</span> <span class="token string">&#39;*/.svn/*&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>只搜索那些具有 .c 或 .h 扩展名的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">--include</span><span class="token operator">=</span><span class="token punctuation">\\</span>*.<span class="token punctuation">{</span>c,h<span class="token punctuation">}</span> <span class="token parameter variable">-rnw</span> <span class="token string">&#39;/path/to/somewhere/&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;pattern&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>排除搜索所有以 .o 扩展名结尾的文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span><span class="token punctuation">\\</span>*.o <span class="token parameter variable">-rnw</span> <span class="token string">&#39;/path/to/somewhere/&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;pattern&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于目录，可以使用–exclude-dir参数排除一个或多个目录。例如，这将排除目录dir1/、dir2/ 以及所有与*.dst/ 匹配的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> --exclude-dir<span class="token operator">=</span><span class="token punctuation">{</span>dir1,dir2,*.dst<span class="token punctuation">}</span> <span class="token parameter variable">-rnw</span> <span class="token string">&#39;/path/to/somewhere/&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;pattern&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,52),d={href:"https://blog.csdn.net/sinat_32152141/article/details/126880839",target:"_blank",rel:"noopener noreferrer"};function u(m,v){const s=p("ExternalLinkIcon");return t(),i("div",null,[c,n("p",null,[a("本文转自 "),n("a",d,[a("https://blog.csdn.net/sinat_32152141/article/details/126880839"),l(s)]),a("，https://blog.csdn.net/weixin_37335761/article/details/125918438如有侵权，请联系删除。")])])}const b=e(o,[["render",u],["__file","find_greppeiheshiyong_findhegrepjieheshiyong.html.vue"]]);export{b as default};
