import{_ as t,r as n,o as i,c as o,b as e,d as s,e as r,a as p}from"./app-f541e591.js";const d={},k=e("h2",{id:"重新签名应用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#重新签名应用","aria-hidden":"true"},"#"),s(" 重新签名应用")],-1),l=e("p",null,"对于客户提供的已签名apk进行再次签名的方法如下：",-1),g=e("li",null,"使用apktool工具，将原apk的签名进行删除：命令如下：apktool d test.apk",-1),c=e("li",null,"对删除签名之后的文件夹进行再次打包，此时无签名，命令如下：apktool b test，此时在test目录下会有一个dist文件夹，dist下面的就是重新打包的apk；",-1),_={href:"https://so.csdn.net/so/search?q=%E7%A7%81%E9%92%A5&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},u=p('<p>示例命令如下：jarsigner -verbose -keystore platform-rtk.jks -signedjar out.apk app-debug.apk androiddebugkey</p><h2 id="jarsigner命令说明" tabindex="-1"><a class="header-anchor" href="#jarsigner命令说明" aria-hidden="true">#</a> jarsigner命令说明</h2><blockquote><p>-keystore后面为keystore</p><p>-sigfile 指定.SF和.RSA文件的文件名，如果不输入-sigfile，则默认使用keystore别名的前8个字符作为文件名</p><p>-storepass 指定keystore的密码</p><p>-sigalg 指定摘要算法</p><p>-digestalg 指定签名算法，如果指定SHA1则使用SHA1签名，如果不指定，则使用SHA256</p><p>androiddebugkey 为keystore的别名</p></blockquote><p>示例：</p><p>jarsigner -verbose -keystore debug.keystore -storepass android -signedjar test_signed.apk -digestalg SHA1 -sigalg MD5withRSA test.apk androiddebugkey</p><h2 id="apksigner-命令说明" tabindex="-1"><a class="header-anchor" href="#apksigner-命令说明" aria-hidden="true">#</a> apksigner 命令说明</h2><p>java -jar apksigner.jar sign --ks debug.keystore --ks-key-alias androiddebugkey --ks-pass pass:android --key-pass pass:android --out test-new_sign.apk test-new.apk</p><blockquote><p>–ks 后面为keystore</p><p>–ks-key-alias 后面为keystore别名</p><p>–ks-pass pass: 后面为keystore的密码</p><p>–key-pass pass: 后面为keystore的密码</p><p>–v1-signing-enabled 是否开启V1签名,默认开启</p><p>–v2-signing-enabled 是否开启V2签名,默认开启（apksigner sign --v2-signing-enabled false --ks 密钥库名 xxx.apk）<br> –out 为输出的apk</p></blockquote><p>apksigner.jar所在目录：E:\\studio_sdk\\build-tools\\28.0.3\\lib</p><p>使用示例：</p><p>java -jar E:\\studio_sdk\\build-tools\\28.0.3\\lib\\apksigner.jar sign --ks application.keystore --ks-key-alias androiddebugkey --ks-pass pass:android --key-pass pass:android --out cashier_system_tablet-release_signed.apk cashier_system_tablet-release_unsign.apk</p>',11),h={href:"https://blog.csdn.net/u010755471/article/details/127582206",target:"_blank",rel:"noopener noreferrer"};function b(y,j){const a=n("ExternalLinkIcon");return i(),o("div",null,[k,l,e("ol",null,[g,c,e("li",null,[s("使用jarsigner对步骤2当中重新打包的apk进行签名，android有自带签名的DOS命令 : jarsigner -verbose -keystore [您的"),e("a",_,[s("私钥"),r(a)]),s("存放路径] -signedjar [签名后文件存放路径] [未签名的文件路径] [您的证书名称]")])]),u,e("p",null,[s("本文转自 "),e("a",h,[s("https://blog.csdn.net/u010755471/article/details/127582206"),r(a)]),s("，如有侵权，请联系删除。")])])}const m=t(d,[["render",b],["__file","Android-duiapkqianmingjizhongxinqianming.html.vue"]]);export{m as default};
