import{_ as n,o as s,c as a,a as t}from"./app-e8f85126.js";const p={},e=t(`<h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1.概述</h2><p>在13.0的系统产品开发中，对产品的细节化要求也是常有功能</p><p>比如在首次开机开机动画播完进入Launcher桌面时黑屏进入Launcher</p><p>有黑屏不太美观，在重启以后会在进入桌面后会显示<strong>android正在启动</strong>等一会进入Launcher</p><p>这就是系统FallBackHome机制，由于产品开发需要要求去掉优化掉这两个功能</p><h2 id="_2-核心类" tabindex="-1"><a class="header-anchor" href="#_2-核心类" aria-hidden="true">#</a> 2.核心类</h2><p><strong>屏蔽FallbackHome机制，去掉android正在启动直接进入默认Launcher功能实现的核心类</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    frameworks<span class="token operator">/</span>base<span class="token operator">/</span>services<span class="token operator">/</span>core<span class="token operator">/</span>java<span class="token operator">/</span>com<span class="token operator">/</span>android<span class="token operator">/</span>server<span class="token operator">/</span>wm<span class="token operator">/</span><span class="token class-name">WindowManagerService</span><span class="token punctuation">.</span>java
    frameworks<span class="token operator">/</span>base<span class="token operator">/</span>services<span class="token operator">/</span>core<span class="token operator">/</span>java<span class="token operator">/</span>com<span class="token operator">/</span>android<span class="token operator">/</span>server<span class="token operator">/</span>wm<span class="token operator">/</span><span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-核心功能分析和实现" tabindex="-1"><a class="header-anchor" href="#_3-核心功能分析和实现" aria-hidden="true">#</a> 3.核心功能分析和实现</h2><p><strong>屏蔽FallbackHome机制去掉android正在启动直接进入默认Launcher功能实现的核心功能分析和实现</strong></p><p>在系统中启动launcher之前会先启动FallBackHome，FallBackHome是在Setting中的一个Activity（透明Activity），配置了Home属性，Settings的<code>android:directBootAware</code>为true。所有只有FallbackHome可以在direct boot模式下启动，</p><p>在FallBackHome这个activity启动完成后,他会检测系统有没有解锁并且接收系统解锁的广播.如果系统还未解锁完成,那么他会一直等待这个广播,所以界面还是会黑. 如果系统解锁完成</p><p>那么他会查找系统内的launcher,如果找到,那么会直接跳转到新launcher并且将自己finish掉. 如果没有找到,那么他会每隔500ms继续检测一次,直到找到新launcher,在这期间也是黑屏的</p><p>在android系统中，在准备播放完开机动画以后，经过一系列处理后，会在WindowManagerService.java中，等进入系统解锁阶段以后，进入到 结束开机动画等操作，然后就进入Launcher的流程，接下来就看下WindowManagerService的相关代码</p><h3 id="_3-1-windowmanagerservice-java" tabindex="-1"><a class="header-anchor" href="#_3-1-windowmanagerservice-java" aria-hidden="true">#</a> 3.1 WindowManagerService.java</h3><p><strong>WindowManagerService.java中关于系统解锁，停止开机动画的相关操作流程分析</strong></p><p>Android WindowManagerService(窗口管理服务)是Android操作系统的关键组件之一,负责管理应用程序窗口的创建、显示、更新和销毁， Activity组件在其窗口对象和视图对象创建完成之后，就会请求与WindowManagerService建立一个连接，即请求WindowManagerService为 其增加一个WindowState对象，用来描述它的窗口状态</p><p>WindowManagerService的职责 1.窗口管理：窗口的管理者，负责窗口的启动，添加和删除，窗口的大小，层级等功能</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">enableScreenIfNeededLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_BOOT</span><span class="token punctuation">,</span> <span class="token string">&quot;enableScreenIfNeededLocked: mDisplayEnabled=%b &quot;</span>
				  <span class="token operator">+</span> <span class="token string">&quot;mForceDisplayEnabled=%b mShowingBootMessages=%b mSystemBooted=%b. &quot;</span>
				  <span class="token operator">+</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span>
		  mDisplayEnabled<span class="token punctuation">,</span> mForceDisplayEnabled<span class="token punctuation">,</span> mShowingBootMessages<span class="token punctuation">,</span> mSystemBooted<span class="token punctuation">,</span>
		  <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;here&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillInStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mDisplayEnabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mSystemBooted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mShowingBootMessages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	mH<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span><span class="token class-name">H</span><span class="token punctuation">.</span><span class="token constant">ENABLE_SCREEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在屏蔽FallbackHome机制去掉android正在启动直接进入默认Launcher功能实现中，在上述的源码中分析得知，在WindowManagerService.java的上述代码可以发现，在系统准备解锁以后会调用enableScreenIfNeededLocked()来进行准备屏幕亮屏操作和发送H.ENABLE_SCREEN进行相关操作，接下来看下相关代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">case</span> <span class="token constant">ENABLE_SCREEN</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">performEnableScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">case</span> <span class="token constant">APP_FREEZE_TIMEOUT</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">WM_ERROR</span><span class="token punctuation">,</span> <span class="token string">&quot;App freeze timeout expired.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  mWindowsFreezingScreen <span class="token operator">=</span> <span class="token constant">WINDOWS_FREEZING_SCREENS_TIMEOUT</span><span class="token punctuation">;</span>
	  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> mAppFreezeListeners<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  mAppFreezeListeners<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onAppFreezeTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">case</span> <span class="token constant">CLIENT_FREEZE_TIMEOUT</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token keyword">if</span> <span class="token punctuation">(</span>mClientFreezingScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  mClientFreezingScreen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		  mLastFinishedFreezeSource <span class="token operator">=</span> <span class="token string">&quot;client-timeout&quot;</span><span class="token punctuation">;</span>
		  <span class="token function">stopFreezingDisplayLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在屏蔽FallbackHome机制去掉android正在启动直接进入默认Launcher功能实现中，在上述的源码中分析得知， 在WindowManagerService.java的上述代码可以发现，可以看到在case ENABLE_SCREEN是调用performEnableScreen();通过在performEnableScreen()中来具体处理 关于屏幕亮屏的相关功能，然后进入Launcher后进行主屏幕进行相关的操作，接下来看performEnableScreen();的相关方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performEnableScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

	  <span class="token comment">// Don&#39;t enable the screen until all existing windows have been drawn.</span>
	  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mForceDisplayEnabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  <span class="token keyword">if</span> <span class="token punctuation">(</span>mBootWaitForWindowsStartTime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			  <span class="token comment">// First time we will start waiting for all windows to be drawn.</span>
			  mBootWaitForWindowsStartTime <span class="token operator">=</span> <span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">elapsedRealtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token punctuation">}</span>
		  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> mRoot<span class="token punctuation">.</span><span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			  <span class="token keyword">if</span> <span class="token punctuation">(</span>mRoot<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shouldWaitForSystemDecorWindowsOnBoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				  <span class="token keyword">return</span><span class="token punctuation">;</span>
			  <span class="token punctuation">}</span>
		  <span class="token punctuation">}</span>
		  <span class="token keyword">long</span> waitTime <span class="token operator">=</span> <span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">elapsedRealtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBootWaitForWindowsStartTime<span class="token punctuation">;</span>
		  mBootWaitForWindowsStartTime <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
		  <span class="token keyword">if</span> <span class="token punctuation">(</span>waitTime <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			  <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_BOOT</span><span class="token punctuation">,</span>
					  <span class="token string">&quot;performEnableScreen: Waited %dms for all windows to be drawn&quot;</span><span class="token punctuation">,</span>
					  waitTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token punctuation">}</span>
	  <span class="token punctuation">}</span>
	<span class="token comment">// 修改代码开始</span>
	  <span class="token class-name">LockPatternUtils</span> lockPatternUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockPatternUtils</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>lockPatternUtils<span class="token punctuation">.</span><span class="token function">isSecure</span><span class="token punctuation">(</span>mCurrentUserId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mBootAnimationStopped<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  <span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">asyncTraceBegin</span><span class="token punctuation">(</span><span class="token constant">TRACE_TAG_WINDOW_MANAGER</span><span class="token punctuation">,</span> <span class="token string">&quot;Stop bootanim&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token comment">// stop boot animation</span>
		  <span class="token comment">// formerly we would just kill the process, but we now ask it to exit so it</span>
		  <span class="token comment">// can choose where to stop the animation.</span>
		  <span class="token class-name">SystemProperties</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;service.bootanim.exit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  mBootAnimationStopped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span>

	  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mForceDisplayEnabled <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">checkBootAnimationCompleteLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_BOOT</span><span class="token punctuation">,</span> <span class="token string">&quot;performEnableScreen: Waiting for anim complete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token keyword">return</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span>

	  <span class="token keyword">try</span> <span class="token punctuation">{</span>
		  <span class="token class-name">IBinder</span> surfaceFlinger <span class="token operator">=</span> <span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token string">&quot;SurfaceFlinger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token keyword">if</span> <span class="token punctuation">(</span>surfaceFlinger <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			  <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token constant">WM_ERROR</span><span class="token punctuation">,</span> <span class="token string">&quot;******* TELLING SURFACE FLINGER WE ARE BOOTED!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			  <span class="token class-name">Parcel</span> data <span class="token operator">=</span> <span class="token class-name">Parcel</span><span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			  data<span class="token punctuation">.</span><span class="token function">writeInterfaceToken</span><span class="token punctuation">(</span><span class="token string">&quot;android.ui.ISurfaceComposer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			  surfaceFlinger<span class="token punctuation">.</span><span class="token function">transact</span><span class="token punctuation">(</span><span class="token class-name">IBinder</span><span class="token punctuation">.</span><span class="token constant">FIRST_CALL_TRANSACTION</span><span class="token punctuation">,</span> <span class="token comment">// BOOT_FINISHED</span>
					  data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			  data<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token punctuation">}</span>
	  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">WM_ERROR</span><span class="token punctuation">,</span> <span class="token string">&quot;Boot completed: SurfaceFlinger is dead!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	   <span class="token comment">// 修改代码结束</span>

	  <span class="token class-name">EventLogTags</span><span class="token punctuation">.</span><span class="token function">writeWmBootAnimationDone</span><span class="token punctuation">(</span><span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">asyncTraceEnd</span><span class="token punctuation">(</span><span class="token constant">TRACE_TAG_WINDOW_MANAGER</span><span class="token punctuation">,</span> <span class="token string">&quot;Stop bootanim&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  mDisplayEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	  <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_SCREEN_ON</span><span class="token punctuation">,</span> <span class="token string">&quot;******************** ENABLING SCREEN!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	  <span class="token comment">// Enable input dispatch.</span>
	  mInputManagerCallback<span class="token punctuation">.</span><span class="token function">setEventDispatchingLw</span><span class="token punctuation">(</span>mEventDispatchingEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
	  mActivityManager<span class="token punctuation">.</span><span class="token function">bootAnimationComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	mPolicy<span class="token punctuation">.</span><span class="token function">enableScreenAfterBoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Make sure the last requested orientation has been applied.</span>
	<span class="token function">updateRotationUnchecked</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在屏蔽FallbackHome机制去掉android正在启动直接进入默认Launcher功能实现中，在上述的源码中分析得知</strong></p><p>在WindowManagerService.java的上述代码可以发现，在performEnableScreen() 中开始调用结束开机动画的方法，然后通过<code>SystemProperties.set(&quot;service.bootanim.exit&quot;, &quot;1&quot;);</code>来设置结束开机动画的标志，但是在这时候结束，还没完全结束 会进入FallbackHome模式，会出现android正在启动，所以需要判断当前是否设置了屏幕锁屏密码相关代码然后决定是否执行这段代码，在进入Launcher启动的时候，调用结束开机动画的，在结束开机动画就可以了.</p><h3 id="_3-2-activityrecord-java" tabindex="-1"><a class="header-anchor" href="#_3-2-activityrecord-java" aria-hidden="true">#</a> 3.2 ActivityRecord.java</h3><p><strong>ActivityRecord.java的关于启动Launcher后，结束开机动画的相关代码分析</strong></p><blockquote><p>ActivityRecord是Activity在SystemService中的实现。</p><p>ActivityRecord同步着Activity的生命周期，记录了Activity的关键信息。</p><p>ActivityRecord参与了窗口显示、尺寸、图层等很多在SystemService的逻辑操作，是应用在SystemService最重要的基本单元之一</p><p>ActivityRecord历史栈中的一个条目,代表一个activity</p><p>ActivityRecord的属性中,有一个类型为Task的task属性,它描述了当前Activity所属的任务栈</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@VisibleForTesting</span>
<span class="token keyword">void</span> <span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> visible<span class="token punctuation">,</span> <span class="token keyword">boolean</span> deferHidingClient<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">final</span> <span class="token class-name">AppTransition</span> appTransition <span class="token operator">=</span> <span class="token function">getDisplayContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mAppTransition<span class="token punctuation">;</span>

	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

	<span class="token comment">// If in a transition, defer commits for activities that are going invisible</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visible <span class="token operator">&amp;&amp;</span> mAtmService<span class="token punctuation">.</span><span class="token function">getTransitionController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> recentsAnimating <span class="token operator">=</span> <span class="token function">isAnimating</span><span class="token punctuation">(</span><span class="token constant">PARENTS</span><span class="token punctuation">,</span> <span class="token constant">ANIMATION_TYPE_RECENTS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">okToAnimate</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token comment">/* ignoreFrozen */</span><span class="token punctuation">,</span> <span class="token function">canTurnScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		  <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>appTransition<span class="token punctuation">.</span><span class="token function">isTransitionSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		  <span class="token operator">||</span> <span class="token punctuation">(</span>recentsAnimating <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isActivityTypeHome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  displayContent<span class="token punctuation">.</span>mOpeningApps<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  mEnteringAnimation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  displayContent<span class="token punctuation">.</span>mClosingApps<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  mEnteringAnimation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span>
	  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>appTransition<span class="token punctuation">.</span><span class="token function">getTransitFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token constant">TRANSIT_FLAG_OPEN_BEHIND</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		  <span class="token comment">// We&#39;re launchingBehind, add the launching activity to mOpeningApps.</span>
		  <span class="token keyword">final</span> <span class="token class-name">WindowState</span> win <span class="token operator">=</span> <span class="token function">getDisplayContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFocusedWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		  <span class="token keyword">if</span> <span class="token punctuation">(</span>win <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			  <span class="token keyword">final</span> <span class="token class-name">ActivityRecord</span> focusedActivity <span class="token operator">=</span> win<span class="token punctuation">.</span>mActivityRecord<span class="token punctuation">;</span>
			  <span class="token keyword">if</span> <span class="token punctuation">(</span>focusedActivity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				  <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_APP_TRANSITIONS</span><span class="token punctuation">,</span>
						  <span class="token string">&quot;TRANSIT_FLAG_OPEN_BEHIND,  adding %s to mOpeningApps&quot;</span><span class="token punctuation">,</span>
						  focusedActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>

				  <span class="token comment">// Force animation to be loaded.</span>
				  displayContent<span class="token punctuation">.</span>mOpeningApps<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>focusedActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>
			  <span class="token punctuation">}</span>
		  <span class="token punctuation">}</span>
	  <span class="token punctuation">}</span>
	  <span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">commitVisibility</span><span class="token punctuation">(</span>visible<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* performLayout */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">updateReportedVisibilityLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在屏蔽FallbackHome机制去掉android正在启动直接进入默认Launcher功能实现中，在上述的源码中分析得知</p><p>在ActivityRecord.java的上述代码中可以看到在setVisibility(boolean visible, boolean deferHidingClient) 是在进入亮屏后调用的相关方法来准备进入Launcher中，接下来看下 updateReportedVisibilityLocked()相关方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/** Called when the windows associated app window container are drawn. */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onWindowsDrawn</span><span class="token punctuation">(</span><span class="token keyword">long</span> timestampNs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">final</span> <span class="token class-name">TransitionInfoSnapshot</span> info <span class="token operator">=</span> mTaskSupervisor
		  <span class="token punctuation">.</span><span class="token function">getActivityMetricsLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notifyWindowsDrawn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> timestampNs<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> validInfo <span class="token operator">=</span> info <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> windowsDrawnDelayMs <span class="token operator">=</span> validInfo <span class="token operator">?</span> info<span class="token punctuation">.</span>windowsDrawnDelayMs <span class="token operator">:</span> <span class="token constant">INVALID_DELAY</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token annotation punctuation">@WaitResult.LaunchState</span> <span class="token keyword">int</span> launchState <span class="token operator">=</span>
		  validInfo <span class="token operator">?</span> info<span class="token punctuation">.</span><span class="token function">getLaunchState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">WaitResult</span><span class="token punctuation">.</span><span class="token constant">LAUNCH_STATE_UNKNOWN</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>validInfo <span class="token operator">||</span> <span class="token keyword">this</span> <span class="token operator">==</span> <span class="token function">getDisplayArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">topRunningActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  mTaskSupervisor<span class="token punctuation">.</span><span class="token function">reportActivityLaunched</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token comment">/* timeout */</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
			  windowsDrawnDelayMs<span class="token punctuation">,</span> launchState<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">finishLaunchTickingLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  task<span class="token punctuation">.</span><span class="token function">setHasBeenVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	mLaunchRootTask <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token comment">// add core start</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isHomeIntent</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> shortComponentName <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>shortComponentName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;FallbackHome&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">SystemProperties</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;service.bootanim.exit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">&quot;ActivityRecord&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;real home.....&quot;</span> <span class="token operator">+</span> shortComponentName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">LockPatternUtils</span> mLockPatternUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockPatternUtils</span><span class="token punctuation">(</span>mAtmService<span class="token punctuation">.</span>mContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>mLockPatternUtils<span class="token punctuation">.</span><span class="token function">isSecure</span><span class="token punctuation">(</span>mUserId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token class-name">IBinder</span> surfaceFlinger <span class="token operator">=</span> <span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token string">&quot;SurfaceFlinger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>surfaceFlinger <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token constant">TAG_WM</span><span class="token punctuation">,</span> <span class="token string">&quot;******* TELLING SURFACE FLINGER WE ARE BOOTED!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Parcel</span> data <span class="token operator">=</span> <span class="token class-name">Parcel</span><span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			data<span class="token punctuation">.</span><span class="token function">writeInterfaceToken</span><span class="token punctuation">(</span><span class="token string">&quot;android.ui.ISurfaceComposer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			surfaceFlinger<span class="token punctuation">.</span><span class="token function">transact</span><span class="token punctuation">(</span><span class="token class-name">IBinder</span><span class="token punctuation">.</span><span class="token constant">FIRST_CALL_TRANSACTION</span><span class="token punctuation">,</span> <span class="token comment">// BOOT_FINISHED</span>
			data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			data<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	   <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Boot completed: SurfaceFlinger is dead!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// add code end</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在屏蔽FallbackHome机制去掉android正在启动直接进入默认Launcher功能实现中，在上述的源码中分析得知</p><p>在ActivityRecord的源码中 , 一个ActivityRecord对应一个Activity,保存了一个Activity的所有信息,所以在进入默认Launcher页面后</p><p>会调用onWindowsDrawn(long timestampNs)进行页面的绘制情况，所以在onWindowsDrawn(long timestampNs)中可以在这里根据shortComponentName的值和判断当前是否设置了屏幕锁屏密码来退出开机动画，然后启动SurfaceFlinger等相关binder启动触摸手势等功能</p>`,35),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","pingbiFallbackHomejizhi.html.vue"]]);export{k as default};
