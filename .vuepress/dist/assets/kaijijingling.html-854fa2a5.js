import{_ as p,r as o,o as c,c as l,b as n,d as a,e as t,a as e}from"./app-f541e591.js";const i={},u=e(`<h2 id="android初探开机引导" tabindex="-1"><a class="header-anchor" href="#android初探开机引导" aria-hidden="true">#</a> Android初探开机引导</h2><p>做开机引导，主要要做到的效果就是<strong>只有第一次使用的时候会打开，只打开一次，当执行完开机引导的流程之后，之后开机都不会再展示</strong></p><p>要实现开机引导，那么就一定是系统应用，按照原理来说，需要两个步骤，第一，需要引导页的优先级比LAUNCHER高。第二，需要流程完毕之后执行某些操作让应用下次不会启动。</p><blockquote><p>LAUNCHER</p><p>使用这个种类来让一个 Activity 作为应用程序的启动项</p></blockquote><h3 id="_1-设置应用的优先级" tabindex="-1"><a class="header-anchor" href="#_1-设置应用的优先级" aria-hidden="true">#</a> 1. 设置应用的优先级</h3><p>可以设置android:priority属性，系统会判断启动priority优先级高的。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.MainActivity<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@string/app_name<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>launchMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>singleTask<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--设置priority属性让自己的优先级比默认Launcher高--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span> <span class="token attr-name"><span class="token namespace">android:</span>priority</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.intent.action.MAIN<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.intent.category.DEFAULT<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!--设置android.intent.category.HOME属性让自己成为一个Launcher--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.intent.category.HOME<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.intent.category.SETUP_WIZARD<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样配置之后，其它应用的优先级如果没有设置的话默认就是0，这样就会优先打开引导页。</p><blockquote><p>android.intent.category.HOME</p><p>HOME Activity 是设备启动（登陆屏幕）时显示的第一个 Activity 。通过指定 Intent Filter 为 HOME 种类而不指定动作的话，你正在将其设为本地 home 画面的替代。</p></blockquote>`,9),r=n("p",null,"android.intent.category.SETUP_WIZARD",-1),k=n("p",null,"谷歌的开机向导的应用是com.google.android.setupwizard`应用，可以运行在launcher之前的apk",-1),d={href:"https://www.jianshu.com/p/f31ad1b86f42",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[a("需将"),n("code",null,"Provision"),a("内置到"),n("code",null,"/system/product/priv-app/"),a("目录下，这是因为不在这个目录下的应用设置"),n("code",null,"android:priority"),a("属性会被重置为0")],-1),v=e(`<h3 id="_2-禁用home键及锁屏" tabindex="-1"><a class="header-anchor" href="#_2-禁用home键及锁屏" aria-hidden="true">#</a> 2. 禁用HOME键及锁屏</h3><p>自己可以在引导页中写自己想要做的逻辑。当执行完所有逻辑之后，需要配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token constant">USER_SETUP_COMPLETE</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">COMPONENT_ENABLED_STATE_DISABLED_USER</span><span class="token punctuation">;</span>
 <span class="token function">setApplicationEnabledSetting</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;com.android.mc.rtk&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token constant">SYNCHRONOUS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>1.使HOME失效</strong></p><p><code>Settings.Secure.USER_SETUP_COMPLETE</code>：当导航app未设置完成时HOME键是不起作用的，原因就是状态控制了</p><p><strong>2.禁用app</strong></p><p><code>PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER</code>：由用户禁用app，所以是可以重新启用的，只能setApplicationEnabledSetting()方法使用</p><p><code>setApplicationEnabledSetting(&quot;com.android.mc.rtk&quot;, state, SYNCHRONOUS</code>)方法：是PackageManager提供的禁用app的方法，一般只能用来禁用自己，不能禁用其他app，否则会报错误，因为系统会判断禁用的应用uid和当前应用的uid是否一致，如果不一致，就会报错。</p><h3 id="_3-开机引导完成后" tabindex="-1"><a class="header-anchor" href="#_3-开机引导完成后" aria-hidden="true">#</a> 3.开机引导完成后</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">finishSetup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 添加持久设置以允许其他应用程序知道设备已配置。</span>
    <span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token constant">DEVICE_PROVISIONED</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//这个标记位标识当前用户已经走完引导流程，如果不设置这个值，Home键、锁屏等将不可用</span>
    <span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token constant">USER_SETUP_COMPLETE</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 从PackageManager中禁用该Activity。</span>
    pm<span class="token punctuation">.</span><span class="token function">setComponentEnabledSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">COMPONENT_ENABLED_STATE_DISABLED</span><span class="token punctuation">,</span>
                <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">DONT_KILL_APP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启用或者禁用四大组件()</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>pm<span class="token punctuation">.</span><span class="token function">setComponentEnabledSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token constant">DONT_KILL_APP</span> <span class="token operator">|</span> <span class="token constant">SYNCHRONOUS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>componentName：组件名称</p><p>newState：组件新的状态，可以设置三个值，分别是如下：</p><p>不可用状态：COMPONENT_ENABLED_STATE_DISABLED</p><p>可用状态：COMPONENT_ENABLED_STATE_ENABLED</p><p>默认状态：COMPONENT_ENABLED_STATE_DEFAULT</p><p>flags:行为标签,值可以是DONT_KILL_APP或者0. 0说明杀死包含该组件的app</p></blockquote><h2 id="调试启动开机精灵" tabindex="-1"><a class="header-anchor" href="#调试启动开机精灵" aria-hidden="true">#</a> 调试启动开机精灵</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">1.</span>通过如下命令使能进入开机向导
adb shell
settings put global device_provisioned <span class="token number">0</span>
settings put secure user_setup_complete <span class="token number">0</span>
<span class="token comment">//开启Provision应用的DefaultActivity</span>
pm enable <span class="token operator">-</span>n com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>provision<span class="token operator">/</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>provision<span class="token punctuation">.</span></span>DefaultActivity</span>
<span class="token comment">//或者</span>
<span class="token comment">//开启Demo的MainActivity</span>
pm enable <span class="token operator">-</span>n com<span class="token punctuation">.</span>toptech<span class="token punctuation">.</span>setupwizard<span class="token operator">/</span><span class="token punctuation">.</span>MainActivity
sync
<span class="token comment">//重启</span>
reboot

<span class="token number">2.</span>查询settings的值
settings get global device_provisioned
settings get secure user_setup_complete

<span class="token number">3.</span>通过代码实现
<span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span>mContext<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token constant">DEVICE_PROVISIONED</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span>mContext<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token constant">USER_SETUP_COMPLETE</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ComponentName</span> name <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span><span class="token string">&quot;com.android.provision&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.android.provision.DefaultActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mContext<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComponentEnabledSetting</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">COMPONENT_ENABLED_STATE_ENABLED</span><span class="token punctuation">,</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">DONT_KILL_APP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,16),g={href:"https://www.jianshu.com/p/6f8e62911d3c",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.jianshu.com/p/f31ad1b86f42",target:"_blank",rel:"noopener noreferrer"},_={href:"https://blog.csdn.net/StudyOfAndroid/article/details/109678471",target:"_blank",rel:"noopener noreferrer"};function E(h,S){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("blockquote",null,[r,k,n("p",null,[n("a",d,[a("packages\\apps\\Provision\\DefaultActivity,这部分内容见超链接"),t(s)])]),m]),v,n("p",null,[n("a",g,[a("Android初探开机引导"),t(s)])]),n("p",null,[n("a",b,[a("Android自定义开机引导最强篇"),t(s)])]),n("p",null,[n("a",_,[a("setComponentEnabledSetting和setApplicationEnabledSetting"),t(s)])])])}const A=p(i,[["render",E],["__file","kaijijingling.html.vue"]]);export{A as default};
