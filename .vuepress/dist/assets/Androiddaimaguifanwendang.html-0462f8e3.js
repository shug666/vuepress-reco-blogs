import{_ as p,r as o,o as l,c,b as n,d as s,e as t,a as e}from"./app-e8f85126.js";const i={},u=e('<h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E5%8E%9F%E5%88%99">代码规范原则</a></li><li><a href="#%E5%B8%B8%E8%A7%84%E8%A7%84%E8%8C%83">常规规范</a></li><li><a href="#%E5%90%8E%E5%8F%B0%E6%8E%A5%E5%8F%A3%E8%A7%84%E8%8C%83">后台接口规范</a></li><li><a href="#%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">变量命名规范</a></li><li><a href="#%E5%8C%85%E5%90%8D%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">包名命名规范</a></li><li><a href="#%E6%96%B9%E6%B3%95%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">方法命名规范</a></li><li><a href="#%E7%B1%BB%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">类文件命名规范</a></li><li><a href="#%E6%8E%A5%E5%8F%A3%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">接口文件命名规范</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E5%B5%8C%E5%A5%97%E8%A7%84%E8%8C%83">代码嵌套规范</a></li><li><a href="#%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0%E8%A7%84%E8%8C%83">接口实现规范</a></li><li><a href="#%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E8%A7%84%E8%8C%83">异常捕获规范</a></li><li><a href="#%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E8%A7%84%E8%8C%83">参数传递规范</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E7%BE%8E%E8%A7%82%E6%80%A7%E8%A6%81%E6%B1%82">代码美观性要求</a></li><li><a href="#%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83">第三方框架使用规范</a></li><li><a href="#%E5%A4%9A%E6%A8%A1%E5%9D%97%E8%A7%84%E8%8C%83">多模块规范</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83">代码注释规范</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E7%A1%AC%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83">代码硬编码规范</a></li><li><a href="#%E5%B8%83%E5%B1%80%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">布局文件命名规范</a></li><li><a href="#%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">资源文件命名规范</a></li><li><a href="#string-id-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">String ID 命名规范</a></li><li><a href="#color-id-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">Color ID 命名规范</a></li><li><a href="#anim-id-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">Anim ID 命名规范</a></li><li><a href="#view-id-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">View ID 命名规范</a></li><li><a href="#style-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">Style 命名规范</a></li><li><a href="#xml-%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83">XML 编码规范</a></li><li><a href="#%E9%A2%84%E8%A7%88%E5%B1%9E%E6%80%A7%E7%BA%A6%E5%AE%9A">预览属性约定</a></li><li><a href="#%E8%B5%84%E6%BA%90%E7%A1%AC%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83">资源硬编码规范</a></li><li><a href="#%E7%89%88%E6%9C%AC%E5%90%8D%E5%92%8C%E7%89%88%E6%9C%AC%E7%A0%81%E8%A7%84%E8%8C%83">版本名和版本码规范</a></li><li><a href="#git-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E8%A7%84%E8%8C%83">Git 版本管理规范</a></li></ul><h2 id="代码规范原则" tabindex="-1"><a class="header-anchor" href="#代码规范原则" aria-hidden="true">#</a> 代码规范原则</h2><ul><li><p>在讲之前，我们先思考一个问题，代码规范的出现是为了什么？不就为了让我们更好地进行团队协作和项目维护吗？没错的，所以代码规范原则应该围绕这两个目标进行。</p><ul><li><p><strong>特事特办</strong>：代码规范文档只能解决 <strong>99%</strong> 场景下的问题，特殊情况应该要特殊处理，违背者需要给出<strong>合理的解释</strong>，建议在代码中直接<strong>用注释注明</strong>，这样可以<strong>减少沟通成本</strong>，否则在一般情况下应当要遵守代码规范文档上的约束。</p></li><li><p><strong>以人为本</strong>：我们应该衡量不同写法带来的优点和缺点，然后根据当前项目的实际需求做出合适的选择或者变化。规则是人定的，不是<strong>一成不变</strong>的。在制定新的规则或者修改旧的规则之前应当先<strong>参考和分析</strong>谷歌或者知名公司的做法，然后与团队中的各个成员<strong>沟通和协商好</strong>。</p></li><li><p><strong>实事求事</strong>：任何代码规范都应该追求在实际开发中发挥的作用或者效果，规则始终是规则，不能单纯为了制定规则而编写代码规范，而是更应该追求写法的实用性，实用性应该从<strong>代码理解的难易程度</strong>、<strong>代码可维护性</strong>、<strong>代码可复用性</strong>、<strong>代码可扩展性</strong>等方面因素综合考虑，其次是考虑<strong>代码的视觉美观性</strong>。</p></li></ul></li></ul><h2 id="常规规范" tabindex="-1"><a class="header-anchor" href="#常规规范" aria-hidden="true">#</a> 常规规范</h2>',5),r=e("<li><p>使用 <strong>0px</strong> 代替 <strong>0dp</strong>，这样就可以在获取时避免系统进行换算，提升代码的执行效率。</p></li><li><p>字符串比较，应该用 <code>&quot;xxx&quot;.equals(object)</code>，而不应该用 <code>object.equals(&quot;xxx&quot;)</code>，因为 <strong>object</strong> 对象可能为空，我们应该把不为空的条件放置在表达式的前面。</p></li><li><p>字符串类型转换，应该用 <code>String.valueOf(Object object)</code> 来代替 <code>object.toString()</code>，因为 <code>object</code> 对象可能会为空， 直接调用 <code>toString</code> 方法可能会触发 <code>NullPointerException</code>，而 <code>valueOf</code> 方法内部有做判空处理。</p></li><li><p><strong>long</strong> 类型的常量应该以大写英文 <strong>L</strong> 结尾，而不应该用小写英文 <strong>l</strong>，因为小写英文的 <strong>l</strong> 会和数字 <strong>1</strong> 容易造成一些混淆，例如 <strong>1l</strong> 会被看成 <strong>11</strong>，而使用 <strong>1L</strong> 就不会出现这种情况。</p></li><li><p>尽量采用 <strong>switch case</strong> 来判断，如果不能实现则再考虑用 <strong>if else</strong>，因为在多条件下使用 <strong>switch case</strong> 语句判断会更加简洁。</p></li><li><p>严禁用 <strong>switch case</strong> 语句来判断资源 id，因为 Gradle 在 5.0 之后的版本，资源 ID 将不会以常量的形式存在，而 <strong>switch case</strong> 语句只能判断常量，所以不能再继续使用 <strong>switch case</strong> 来判断资源 ID 了。</p></li><li><p>不推荐用 <strong>layout_marginLeft</strong>，而应该用 <strong>layout_marginStart</strong>；不推荐用 <strong>layout_marginRight</strong>，而应该用 <strong>layout_marginEnd</strong>，原因有两个，一个是适配 Android 4.4 <strong>反方向特性</strong>（可在开发者选项中开启），第二个是 XML 布局中使用 <strong>layout_marginLeft</strong> 和 <strong>layout_marginRight</strong> 会有代码警告，<strong>padding</strong> 属性也是同理，这里不再赘述。另外有一点需要注意：严禁 <strong>Left、Right</strong> 属性和 <strong>Start、End</strong> 属性同时使用，两者只能二选一。</p></li><li><p>如果在 <strong>layout_marginStart</strong> 和 <strong>layout_marginEnd</strong> 的值相同的情况下，请替换使用 <strong>layout_marginHorizontal</strong>，而 <strong>layout_marginTop</strong> 和 <strong>layout_marginBottom</strong> 也同理，请替换使用 <strong>layout_marginVertical</strong>，能用一句代码能做的事不要写两句，<strong>padding</strong> 属性也是同理，这里不再赘述。</p></li><li><p><strong>过期</strong> 和 <strong>高版本</strong> 的 API 一定要做对应的兼容（包含 Java 代码和 XML 属性），如果不需要兼容处理的，需要对警告进行抑制。</p></li><li><p>在能满足需求的情况下，尽量用 <strong>invisible</strong> 来代替 <strong>gone</strong>，因为 <strong>gone</strong> 会触发当前整个 View 树进行重新测量和绘制。</p></li>",10),d=n("strong",null,"api",-1),k=n("strong",null,"implementation",-1),v=n("strong",null,"implementation",-1),m={href:"https://www.jianshu.com/p/8962d6ba936e",target:"_blank",rel:"noopener noreferrer"},g=e("<li><p><strong>ListView</strong> 和 <strong>RecyclerView</strong> 都能实现需求的前提下，优先选用 <strong>RecyclerView</strong>，具体原因不解释，大家应该都懂。</p></li><li><p><strong>ScrollView</strong> 和 <strong>NestedScrollView</strong> 都能实现需求的前提下，优先选用 <strong>NestedScrollView</strong>，是因为 <strong>NestedScrollView</strong> 和 <strong>RecyclerView</strong> 支持相互嵌套，而 <strong>ScrollView</strong> 是不支持嵌套滚动的。</p></li><li><p>不能在项目中创建副本文件，例如创建 <code>HomeActivity2.java</code>、<code>home_activity_v2.xml</code> 类似的副本文件，因为这样不仅会增加项目的维护难度，同时对编译速度也会造成一定的影响，正确的做法应该是在原有的文件基础上面修改，如果出现需求变更的情况，请直接使用 <strong>Git</strong> 或者 <strong>SVN</strong> 进行版本回退。</p></li><li><p>如果一个类不需要被继承，请直接用 <strong>final</strong> 进行修饰，如果一个字段在类初始化过程中已经赋值并且没有地方进行二次赋值，也应当用 <strong>final</strong> 修饰，如果一个字段不需要被外部访问，那么需要用 <strong>private</strong> 进行修饰。</p></li><li><p>时间间隔的计算，对于前后时间的获取，不推荐使用 <code>System.currentTimeMillis()</code> 来获取，因为用户随时可能会调整手机的日期，这样会导致计算出来的时间间隔不准确，推荐使用 <code>SystemClock.uptimeMillis()</code> 来获取，此 API 用于获取本次已开机的毫秒数，用户就算调整了手机的日期也没有任何影响；值得一提的是，<strong>Handler</strong> 类中的 <code>postDelayed</code> 方法也是采用这种方式实现。</p></li>",5),b={href:"https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines",target:"_blank",rel:"noopener noreferrer"},y=n("strong",null,"代码警告",-1),h=n("strong",null,"mipmap",-1),w=n("strong",null,"drawable",-1),x={href:"https://developer.android.google.cn/guide/topics/resources/providing-resources",target:"_blank",rel:"noopener noreferrer"},q=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"目录"),n("th",{style:{"text-align":"center"}},"资源类型")])],-1),_=n("td",{style:{"text-align":"center"}},[n("strong",null,"drawable")],-1),f={style:{"text-align":"center"}},E=n("code",null,".png",-1),A=n("code",null,".9.png",-1),B=n("code",null,".jpg",-1),j=n("code",null,".gif",-1),C={href:"https://developer.android.google.cn/guide/topics/resources/drawable-resource",target:"_blank",rel:"noopener noreferrer"},S=n("td",{style:{"text-align":"center"}},[n("strong",null,"mipmap")],-1),F={style:{"text-align":"center"}},T=n("code",null,"mipmap",-1),V={href:"https://developer.android.google.cn/tools/projects#mipmap",target:"_blank",rel:"noopener noreferrer"},D=e(`<h2 id="后台接口规范" tabindex="-1"><a class="header-anchor" href="#后台接口规范" aria-hidden="true">#</a> 后台接口规范</h2><ul><li><p>后台返回的 <strong>id 值</strong>，不要使用 <strong>int</strong> 或者 <strong>long</strong> 类型来接收，而应该用 <strong>string</strong> 类型来接收，因为我们不需要对这个 <strong>id 值</strong>进行运算，所以我们不需要关心它是什么类型的。</p></li><li><p>后台返回的<strong>金额数值</strong>应该使用 <strong>String</strong> 来接收，而不能用<strong>浮点数</strong>来接收，因为 <strong>float</strong> 或者 <strong>double</strong> 在数值比较大的情况下会容易丢失精度，并且还需要自己手动转换出想要保留的小数位，最好的方式是后台返回什么前端就展示什么，而到了运算的时候，则应该用 <strong>BigDecimal</strong> 类来进行转换和计算，当然金额在前端一般展示居多，运算的情况还算是比较少的。</p></li><li><p>我们在定义后台返回的 Bean 类时，不应当将一些我们没有使用到的字段添加到代码中，因为这样会消耗性能，因为 Gson 是通过<strong>反射</strong>将后台字段赋值到 Java 字段中，所以我们应当避免一些不必要的字段解析，另外臃余的字段也会给我们排查问题造成一定的阻碍。</p></li><li><p>如果后台给定的字段名不符合代码命名的时候，例如当遇到 <code>student_name</code> 这种命名时，我们应当使用 Gson 框架中的 <strong>@SerializedName</strong> 注解对字段进行映射。</p></li><li><p>请求的接口参数和返回字段必须要写上注释，除此之外还应该备注对应的后台接口文档地址，以便我们后续能够更好地进行维护和迭代。</p></li><li><p>后台返回的 Bean 类字段不能直接访问，而应该通过生成 <strong>Get</strong> 方法，然后使用这个 <strong>Get</strong> 方法来访问字段。</p></li><li><p>接口请求成功的提示可以不显示，但请求失败的提示需要显示给到用户，否则会加大排查问题的难度，也极有可能会把问题掩盖掉，从而导致问题遗留到线上去。</p></li><li><p>如果用的 Json 解析框架是 Gson，则建议进行容错处理，秉持不信任后台的原则，因为我们没有办法控制后台返回了什么数据结构，但是我们有办法保证应用不会为这个问题而导致崩溃。</p></li></ul><h2 id="变量命名规范" tabindex="-1"><a class="header-anchor" href="#变量命名规范" aria-hidden="true">#</a> 变量命名规范</h2><ul><li><p><strong>严禁使用中文或者中文拼音</strong>进行重命名</p></li><li><p>遵循 <strong>lowerCamelCase（驼峰式）命名风格</strong>（单词最好控制在三个以内）</p></li><li><p>变量应该以作用来命名，例如：</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token class-name">TextView</span> nameView<span class="token punctuation">;</span>
<span class="token class-name">FrameLayout</span> nameLayout<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 命名规范附带技巧（当布局中同个类型的控件只有一个的时候，也可以这样命名）</span>
<span class="token class-name">TextView</span> textView<span class="token punctuation">;</span>
<span class="token class-name">RecyclerView</span> recyclerView<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>布尔值命名规范，无论是局部变量还是成员变量，都不应该携带 <strong>is</strong>，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token keyword">boolean</span> isDebug<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token keyword">boolean</span> debug<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>常量则需要用大写，并且用下划线代替驼峰，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">REQUEST_INSTALL_PACKAGES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>有细心的同学可能会发现一个问题，Android 源码中私有字段都是以 <code>m</code> 开头，而静态字段都是以 <code>s</code> 开头，其实这种是 AOSP 的源码规范，这样的写法也算规范的，大家可以自行抉择，但是建议组内统一。</p></li><li><p>另外如果是在 Kotlin 类中，字段名则不能以 <code>m</code> 或者 <code>s</code> 开头，因为这样写是不规范的，因为作者翻阅了 AndroidX 的源码，发现里面写的 Kotlin 代码中的字段已经没有了 <code>m</code> 或者 <code>s</code> 开头的字段，但是 Java 代码中仍然有保留着这种写法。</p></li></ul><h2 id="包名命名规范" tabindex="-1"><a class="header-anchor" href="#包名命名规范" aria-hidden="true">#</a> 包名命名规范</h2><ul><li><p>不允许包名中携带<strong>英文大写</strong></p></li><li><p>包名应该以<strong>简洁的方式</strong>命名</p></li><li><p>包名要按照<strong>模块</strong>或者<strong>作用</strong>来划分</p></li><li><p>请不要在某一包名下放置<strong>一些无关的类</strong></p></li></ul><h2 id="方法命名规范" tabindex="-1"><a class="header-anchor" href="#方法命名规范" aria-hidden="true">#</a> 方法命名规范</h2><ul><li><p>initXX：初始化相关方法，使用 <strong>init</strong> 为前缀标识，如初始化布局 <strong>initView</strong></p></li><li><p>isXX：方法返回值为 boolean 型的请使用 <strong>is</strong> 或 <strong>check</strong> 为前缀标识</p></li><li><p>getXX：返回某个值的方法，使用 <strong>get</strong> 为前缀标识，例如 <strong>getName</strong></p></li><li><p>setXX：设置某个属性值，使用 <strong>set</strong> 为前缀标识，例如 <strong>setName</strong></p></li><li><p>handleXX/processXX：对数据进行处理的方法，例如 <strong>handleMessage</strong></p></li><li><p>displayXX/showXX：弹出提示框和提示信息，例如 <strong>showDialog</strong></p></li><li><p>updateXX：更新某个东西，例如 <strong>updateData</strong></p></li><li><p>saveXX：保存某个东西，例如 <strong>saveData</strong></p></li><li><p>resetXX：重置某个东西，例如 <strong>resetData</strong></p></li><li><p>clearXX：清除某个东西，例如 <strong>clearData</strong></p></li><li><p>removeXX：移除数据或者视图等，例如 <strong>removeView</strong></p></li><li><p>drawXX：绘制数据或效果相关的，使用 <strong>draw</strong> 前缀标识，例如 <strong>drawText</strong></p></li></ul><h2 id="类文件命名规范" tabindex="-1"><a class="header-anchor" href="#类文件命名规范" aria-hidden="true">#</a> 类文件命名规范</h2><ul><li>业务模块：请以 <strong>模块 + 类型</strong> 来命名，例如：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>HomeActivity.java

SettingFragment.java

HomeAdapter.java

AddressDialog.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>技术模块：请以类的 <strong>作用</strong> 来命名，例如：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CrashHandler.java

GridSpaceDecoration.java

PickerLayoutManager.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="接口文件命名规范" tabindex="-1"><a class="header-anchor" href="#接口文件命名规范" aria-hidden="true">#</a> 接口文件命名规范</h2><ul><li>如果是监听事件可以参考 <strong>View</strong> 的写法及命名：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> listener<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token class-name">OnClickListener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>listener <span class="token operator">=</span> listener<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OnClickListener</span> <span class="token punctuation">{</span>

        <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果是回调事件可以参考 <strong>Handler</strong> 的写法及命名：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Callback</span> <span class="token punctuation">{</span>

        <span class="token keyword">boolean</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>至于接口写在内部还是外部，具体可以视实际情况而定，如果功能比较庞大，就可以考虑抽取成外部的，只作用在某个类上的，则就可以直接写成内部的。</li></ul><h2 id="代码嵌套规范" tabindex="-1"><a class="header-anchor" href="#代码嵌套规范" aria-hidden="true">#</a> 代码嵌套规范</h2><ul><li>代码嵌套很深一直以来是一个很头疼的问题，其实它也算一种代码不规范写法的表现，那么如何写代码才能降低代码逻辑嵌套呢？</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Object</span> a<span class="token punctuation">,</span> <span class="token class-name">Object</span> b<span class="token punctuation">,</span> <span class="token class-name">Object</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;所有对象不为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;对象 C 为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;对象 B 为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;对象 A 为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Object</span> a<span class="token punctuation">,</span> <span class="token class-name">Object</span> b<span class="token punctuation">,</span> <span class="token class-name">Object</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;对象 A 为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;对象 B 为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;对象 C 为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;所有对象不为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>先让我们对比一下这两种写法，是不是觉得第一种写法可读性比较差？而第二种写法可读性比较强？</p></li><li><p>我们应该遵循少写 <code>else</code> ，多用 <code>return</code> 语句的原则，这样就能降低代码之间的相互嵌套，提升代码的可读性。</p></li><li><p>这个时候大家可能有疑问了，循环没有 <code>return</code> 语句怎么办？这个问题很简单，大家可以用 <code>continue</code> 或者 <code>break</code> 来代替，其实都是换汤不换药，这里不再赘述。</p></li><li><p>另外不是说存在嵌套就一定不好，还有一种情况，减少代码嵌套时需要写很多重复代码，这种就需要大家根据实际情况做选择了。</p></li></ul><h2 id="接口实现规范" tabindex="-1"><a class="header-anchor" href="#接口实现规范" aria-hidden="true">#</a> 接口实现规范</h2><ul><li>一般情况下，我们会在类中这样实现接口，这样写的好处是，可以减少对象的创建，并且代码也比较美观。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">PasswordEditText</span> <span class="token keyword">extends</span> <span class="token class-name">EditText</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnTouchListener</span><span class="token punctuation">,</span> <span class="token class-name">View<span class="token punctuation">.</span>OnFocusChangeListener</span><span class="token punctuation">,</span> <span class="token class-name">TextWatcher</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">PasswordEditText</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setOnTouchListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setOnFocusChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addTextChangedListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFocusChange</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token keyword">boolean</span> hasFocus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> before<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeTextChanged</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token keyword">int</span> after<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterTextChanged</span><span class="token punctuation">(</span><span class="token class-name">Editable</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>但是有两个美中不足的地方，就是在实现的接口过多时，我们很难分辨是哪个方法是哪个接口的，这个时候可以使用注释的方式来解决这个问题，加上 <strong>@link</strong> 还可以帮助我们快速定位接口类在项目中所在的位置；另外一个是 <strong>implements</strong> 修饰符换行的问题，合理的换行会使代码更加简单直观。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">PasswordEditText</span> <span class="token keyword">extends</span> <span class="token class-name">EditText</span>
        <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnTouchListener</span><span class="token punctuation">,</span>
        <span class="token class-name">View<span class="token punctuation">.</span>OnFocusChangeListener</span><span class="token punctuation">,</span> <span class="token class-name">TextWatcher</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">PasswordEditText</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setOnTouchListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setOnFocusChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addTextChangedListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">OnFocusChangeListener</span></span><span class="token punctuation">}</span>
     */</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFocusChange</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token keyword">boolean</span> hasFocus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">OnTouchListener</span></span><span class="token punctuation">}</span>
     */</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">TextWatcher</span></span><span class="token punctuation">}</span>
     */</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> before<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeTextChanged</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token keyword">int</span> after<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterTextChanged</span><span class="token punctuation">(</span><span class="token class-name">Editable</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="异常捕获规范" tabindex="-1"><a class="header-anchor" href="#异常捕获规范" aria-hidden="true">#</a> 异常捕获规范</h2><ul><li>请不要使用此方式捕获异常，因为这种方式会把问题给隐藏掉，从而会加大后续排查问题的难度。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token class-name">Xxx</span><span class="token punctuation">.</span><span class="token function">xxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如需捕获异常，请用以下方式进行捕获，列出具体的异常类型，并在代码中输出对应的堆栈信息。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 捕获这个异常，避免程序崩溃</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// 目前发现在 Android 7.1 主线程被阻塞之后弹吐司会导致崩溃，可使用 Thread.sleep(5000) 进行复现</span>
    <span class="token comment">// 查看源码得知 Google 已经在 Android 8.0 已经修复了此问题</span>
    <span class="token comment">// 主线程阻塞之后 Toast 也会被阻塞，Toast 因为显示超时导致 Window Token 失效</span>
    mHandler<span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">WindowManager<span class="token punctuation">.</span>BadTokenException</span> <span class="token operator">|</span> <span class="token class-name">IllegalStateException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// android.view.WindowManager$BadTokenException：Unable to add window -- token android.os.BinderProxy is not valid; is your activity running?</span>
    <span class="token comment">// java.lang.IllegalStateException：View android.widget.TextView has already been added to the window manager.</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 又或者上报到 Bugly 错误分析中</span>
    <span class="token comment">// CrashReport.postCatchedException(e);</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>如果这个异常不是通过方法 throws 关键字抛出，则需要在 try 块中说明崩溃的缘由，并注明抛出的异常信息。</p></li><li><p>还有一个问题，有异常就一定要 <code>try catch</code> ？，这种想法其实是错的，例如我们项目用 Glide 加载图片会抛出以下异常：</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>IllegalArgumentException</span><span class="token operator">:</span> <span class="token class-name">You</span> cannot start a load <span class="token keyword">for</span> a destroyed activity
   at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>bumptech<span class="token punctuation">.</span>glide<span class="token punctuation">.</span>manager<span class="token punctuation">.</span></span>RequestManagerRetriever</span><span class="token punctuation">.</span><span class="token function">assertNotDestroyed</span><span class="token punctuation">(</span><span class="token class-name">RequestManagerRetriever</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">348</span><span class="token punctuation">)</span>
   at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>bumptech<span class="token punctuation">.</span>glide<span class="token punctuation">.</span>manager<span class="token punctuation">.</span></span>RequestManagerRetriever</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">RequestManagerRetriever</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">148</span><span class="token punctuation">)</span>
   at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>bumptech<span class="token punctuation">.</span>glide<span class="token punctuation">.</span></span>Glide</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">Glide</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">826</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这是因为 Activity 的销毁了而去加载图片导致的（场景：异步执行图片加载），大多人的解决方式可能是：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// Activity 销毁后执行加载图片会触发 crash</span>
    <span class="token class-name">Glide</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>mImageView<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// java.lang.IllegalArgumentException: You cannot start a load for a destroyed activity</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>虽然这种方式可以解决 <strong>crash</strong> 的问题，但是显得<strong>不够严谨</strong>，Glide 抛异常给外层，其实无非就想告诉调用者，调用的时机错了，正确的处理方式不是直接捕获这个异常，而是应该在外层做好逻辑判断，避免会进入出现 <strong>crash</strong> 的代码，正确的处理示例如下：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFinishing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isDestroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// Glide：You cannot start a load for a destroyed activity</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Glide</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>mImageView<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>所以尽量不要通过捕获的方式来处理异常，除非外层真的判断不了，否则应该通过一些逻辑判断来避免进入一些会 <strong>crash</strong> 的代码。</li></ul><h2 id="参数传递规范" tabindex="-1"><a class="header-anchor" href="#参数传递规范" aria-hidden="true">#</a> 参数传递规范</h2><ul><li>如果跳转的 Activity 需要传递参数，应该在目标的 Activity 中定义静态的 <strong>start</strong> 又或者 <strong>newIntent</strong> 方法。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">WebActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">INTENT_KEY_URL</span> <span class="token operator">=</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">WebActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token constant">INTENT_KEY_URL</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">WebActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">INTENT_KEY_URL</span> <span class="token operator">=</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Intent</span> <span class="token function">newIntent</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">WebActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token constant">INTENT_KEY_URL</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> intent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果创建的 Fragment 需要传递参数，应该在目标的 Fragment 中定义静态的 <strong>newInstance</strong> 方法</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">WebFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">INTENT_KEY_URL</span> <span class="token operator">=</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">WebFragment</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebFragment</span> fragment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Bundle</span> bundle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bundle<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token constant">INTENT_KEY_URL</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        fragment<span class="token punctuation">.</span><span class="token function">setArguments</span><span class="token punctuation">(</span>bundle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> fragment<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>如果跳转的 Activity 或者创建的 Fragment 不需要传任何参数，可以不需要定义这些静态方法。</p></li><li><p>另外如果一个界面需要传递的参数过多（一般 5 个以上），建议用一个对象对这些参数进行封装，然后实现 Serializable 或者 Parcelable 接口进行传递，具体写法示例：</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">VideoPlayActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">INTENT_KEY_PARAMETERS</span> <span class="token operator">=</span> <span class="token string">&quot;parameters&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 播放参数构建
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span> <span class="token keyword">implements</span> <span class="token class-name">Parcelable</span> <span class="token punctuation">{</span>

        <span class="token doc-comment comment">/** 视频源 */</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> videoSource<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 视频标题 */</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> videoTitle<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 播放进度 */</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> playProgress<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 手势开关 */</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> gestureEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 循环播放 */</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> loopPlay <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 自动播放 */</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> autoPlay <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 播放完关闭 */</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> autoOver <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setVideoSource</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>videoSource <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>videoTitle <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>videoTitle <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setVideoSource</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>videoSource <span class="token operator">=</span> url<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setVideoTitle</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>videoTitle <span class="token operator">=</span> title<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setPlayProgress</span><span class="token punctuation">(</span><span class="token keyword">int</span> progress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>playProgress <span class="token operator">=</span> progress<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setGestureEnabled</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>gestureEnabled <span class="token operator">=</span> enabled<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setLoopPlay</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>loopPlay <span class="token operator">=</span> enabled<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setAutoPlay</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>autoPlay <span class="token operator">=</span> enabled<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setAutoOver</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>autoOver <span class="token operator">=</span> enabled<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">VideoPlayActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token constant">INTENT_KEY_PARAMETERS</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>context <span class="token keyword">instanceof</span> <span class="token class-name">Activity</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                intent<span class="token punctuation">.</span><span class="token function">addFlags</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">FLAG_ACTIVITY_NEW_TASK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">VideoPlayActivity<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setVideoTitle</span><span class="token punctuation">(</span><span class="token string">&quot;速度与激情特别行动&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setVideoSource</span><span class="token punctuation">(</span><span class="token string">&quot;http://xxxxx.mp4&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token function">getAttachActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码美观性要求" tabindex="-1"><a class="header-anchor" href="#代码美观性要求" aria-hidden="true">#</a> 代码美观性要求</h2><ul><li>if 语句后面应该加上大括号，而不应该将判断和处理的逻辑在同一行做处理，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token function">isDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token function">isDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>大括号应当统一放在表达式后面，而不应该换行处理，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token function">isDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token function">isDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>代码之间应当有适当的空格，空格不用多也不能少，恰到好处即可，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isAppInstalled</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context <span class="token punctuation">,</span><span class="token class-name">String</span> packageName <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      context<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span>packageName<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span>   <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span> <span class="token class-name">PackageManager<span class="token punctuation">.</span>NameNotFoundException</span> e <span class="token punctuation">)</span><span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isAppInstalled</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> packageName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        context<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PackageManager<span class="token punctuation">.</span>NameNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>适当换行有助于提升代码的可读性，在单行代码较长的情况下可以考虑适当换行，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token class-name">ScaleAnimation</span> animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScaleAnimation</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token number">1.1f</span><span class="token punctuation">,</span> <span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token number">1.1f</span><span class="token punctuation">,</span> <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token constant">RELATIVE_TO_SELF</span><span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">,</span> <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token constant">RELATIVE_TO_SELF</span><span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
textView<span class="token punctuation">.</span><span class="token function">startAnimation</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token class-name">ScaleAnimation</span> animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScaleAnimation</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token number">1.1f</span><span class="token punctuation">,</span> <span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token number">1.1f</span><span class="token punctuation">,</span>
        <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token constant">RELATIVE_TO_SELF</span><span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">,</span> <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token constant">RELATIVE_TO_SELF</span><span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
textView<span class="token punctuation">.</span><span class="token function">startAnimation</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>链式写法不能只用一行代码，而是应当遵守一句 API 换一行的策略，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token class-name">GlideApp</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">circleCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token class-name">GlideApp</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">circleCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方法参数的排序，上下文参数应当统一放在最前面，而回调监听应当统一放在最后面，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">openSystemFileChooser</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">,</span> <span class="token class-name">FileChooserParams</span> params<span class="token punctuation">,</span> <span class="token class-name">ValueCallback</span><span class="token operator">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>一个类里面的内容，应该按照以下规则来排序，从上往下排序：</p><ol><li><p>常量</p></li><li><p>静态变量</p></li><li><p>静态方法</p></li><li><p>类字段</p></li><li><p>构造函数</p></li><li><p>重载方法</p></li><li><p>普通方法</p></li><li><p>内部类</p></li><li><p>接口类</p></li></ol></li><li><p>另外不同变量和方法的排序，应当根据重要程度、API 类型、执行顺序这几点来摆放，例如：</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 变量排序示例</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseDialog</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>

        <span class="token doc-comment comment">/** 宽度和高度 */</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span><span class="token constant">WRAP_CONTENT</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span><span class="token constant">WRAP_CONTENT</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/** 是否能够被取消 */</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> cancelable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 点击空白是否能够取消  前提是这个对话框可以被取消 */</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> canceledOnTouchOutside <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/** 背景遮盖层开关 */</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> backgroundDimEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 背景遮盖层透明度 */</span>
        <span class="token keyword">private</span> <span class="token keyword">float</span> backgroundDimAmount <span class="token operator">=</span> <span class="token number">0.5f</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/** Dialog 创建监听 */</span>
        <span class="token keyword">private</span> <span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnCreateListener</span> createListener<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** Dialog 显示监听 */</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnShowListener</span><span class="token punctuation">&gt;</span></span> showListeners <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** Dialog 取消监听 */</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnCancelListener</span><span class="token punctuation">&gt;</span></span> cancelListeners <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** Dialog 销毁监听 */</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnDismissListener</span><span class="token punctuation">&gt;</span></span> dismissListeners <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** Dialog 按键监听 */</span>
        <span class="token keyword">private</span> <span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnKeyListener</span> keyListener<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 方法排序示例</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseDialog</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>

        <span class="token doc-comment comment">/**
         * 设置宽度
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token keyword">int</span> width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 设置高度
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 是否可以取消
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> cancelable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 是否可以通过点击空白区域取消
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setCanceledOnTouchOutside</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> cancel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 设置背景遮盖层开关
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setBackgroundDimEnabled</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 设置背景遮盖层的透明度（前提条件是背景遮盖层开关必须是为开启状态）
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setBackgroundDimAmount</span><span class="token punctuation">(</span><span class="token keyword">float</span> dimAmount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 设置创建监听
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setOnCreateListener</span><span class="token punctuation">(</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnCreateListener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 添加显示监听
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">addOnShowListener</span><span class="token punctuation">(</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnShowListener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 添加取消监听
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">addOnCancelListener</span><span class="token punctuation">(</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnCancelListener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 添加销毁监听
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">addOnDismissListener</span><span class="token punctuation">(</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnDismissListener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 设置按键监听
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">setOnKeyListener</span><span class="token punctuation">(</span><span class="token class-name">BaseDialog<span class="token punctuation">.</span>OnKeyListener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>代码美观性虽然不会干扰到业务的正常进行，但是对一个程序员来讲，是代码品质的一种追求，同时也是工匠精神的体现。</li></ul><h2 id="第三方框架使用规范" tabindex="-1"><a class="header-anchor" href="#第三方框架使用规范" aria-hidden="true">#</a> 第三方框架使用规范</h2><ul><li>集成一些第三方框架或者 SDK，必须注明框架的作用及出处，以便出现问题时能够快速核查和反馈。</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token comment">// 权限请求框架：https://github.com/getActivity/XXPermissions</span>
implementation <span class="token string">&#39;com.github.getActivity:XXPermissions:16.6&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>尽量不要选择功能两套相同的框架，应当引用最合适的一套框架进行开发。</p></li><li><p>使用第三方库必须要依赖指定的版本号，而不能使用 <code>latest.release</code> 或者 <code>+</code> 来指定依赖库最新的版本号。</p></li><li><p>使用第三方开源库出现问题或者 Bug 时应及时通知到开源库的作者，如果没有及时回复就根据实际情况对问题进行修复。</p></li><li><p>尽量避免 Copy 第三方库的技术代码到项目中，特别是在放置到项目业务模块中，因为这样会增加项目的复杂度，从而降低可维护性。</p></li><li><p>如果出现问题不能找到开源库的作者，如果需要修改，应当将这些代码抽取到单独的 Module 中。</p></li><li><p>能用框架就用成熟框架，尽量不要自己编写或者修改框架，如果有需要，要对这块进行严格测试。</p></li></ul><h2 id="多模块规范" tabindex="-1"><a class="header-anchor" href="#多模块规范" aria-hidden="true">#</a> 多模块规范</h2><ul><li>模块命名规范：应该以简单明了的方式来命名</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app
base
widget
umeng
course
socket
live
shop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模块混淆配置：请不要使用 <code>proguardFiles</code> 语句，而是应该使用 <code>consumerProguardFiles</code> 语句，因为 <code>consumerProguardFiles</code> 语句会将混淆规则和资源代码一同打包到 <strong>aar</strong> 包中，这样做的好处在于：在项目编译时会将 aar 包中的混淆规则合并到主模块中。</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>android <span class="token punctuation">{</span>

    defaultConfig <span class="token punctuation">{</span>
        <span class="token comment">// 模块混淆配置</span>
        consumerProguardFiles <span class="token string">&#39;proguard-xxx.pro&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>资源前缀限制：我们应该在模块中加入此限制，这样我们在模块中添加资源时，编译器如果发现资源名称前缀不符合规范，则会出现代码警告。这样做的好处在于，以某一名称作为前缀，可以有效避免在编译时引发的一些资源合并冲突。</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>android <span class="token punctuation">{</span>
    <span class="token comment">// 资源前缀限制</span>
    resourcePrefix <span class="token interpolation-string"><span class="token string">&quot;xxx_&quot;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>框架版本管理：我们应该统一抽取框架的版本到 <code>config.gradle</code> 文件中：</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>ext <span class="token punctuation">{</span>

    android <span class="token operator">=</span> <span class="token punctuation">[</span>compileSdkVersion       <span class="token punctuation">:</span> <span class="token number">28</span><span class="token punctuation">,</span>
               minSdkVersion           <span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
               targetSdkVersion        <span class="token punctuation">:</span> <span class="token number">28</span><span class="token punctuation">,</span>
               versionCode             <span class="token punctuation">:</span> <span class="token number">40102</span><span class="token punctuation">,</span>
               versionName             <span class="token punctuation">:</span> <span class="token interpolation-string"><span class="token string">&quot;4.1.2&quot;</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
    dependencies <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token interpolation-string"><span class="token string">&quot;appcompat&quot;</span></span>                    <span class="token punctuation">:</span> <span class="token interpolation-string"><span class="token string">&quot;androidx.appcompat:appcompat:1.2.0&quot;</span></span><span class="token punctuation">,</span>
            <span class="token interpolation-string"><span class="token string">&quot;material&quot;</span></span>                     <span class="token punctuation">:</span> <span class="token interpolation-string"><span class="token string">&quot;com.google.android.material:material:1.2.0&quot;</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后在每个模块下这样定义，这样做的好处是可以做到版本号的统一管理。</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>apply from <span class="token punctuation">:</span> <span class="token string">&#39;../config.gradle&#39;</span>

android <span class="token punctuation">{</span>
    compileSdkVersion rootProject<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>android<span class="token punctuation">[</span><span class="token interpolation-string"><span class="token string">&quot;compileSdkVersion&quot;</span></span><span class="token punctuation">]</span>

    defaultConfig <span class="token punctuation">{</span>
        minSdkVersion rootProject<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>android<span class="token punctuation">[</span><span class="token interpolation-string"><span class="token string">&quot;minSdkVersion&quot;</span></span><span class="token punctuation">]</span>
        targetSdkVersion rootProject<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>android<span class="token punctuation">[</span><span class="token interpolation-string"><span class="token string">&quot;targetSdkVersion&quot;</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
dependencies <span class="token punctuation">{</span>
    implementation rootProject<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>dependencies<span class="token punctuation">[</span><span class="token interpolation-string"><span class="token string">&quot;appcompat&quot;</span></span><span class="token punctuation">]</span>
    implementation rootProject<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>dependencies<span class="token punctuation">[</span><span class="token interpolation-string"><span class="token string">&quot;material&quot;</span></span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>除此之外还有另外一种写法，我们可以把 <code>config.gradle</code> 修改成这样：</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>android <span class="token punctuation">{</span>
    compileSdkVersion <span class="token number">28</span>

    defaultConfig <span class="token punctuation">{</span>
        minSdkVersion <span class="token number">19</span>
        targetSdkVersion <span class="token number">28</span>
        versionName <span class="token string">&#39;4.1.2&#39;</span>
        versionCode <span class="token number">40102</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
    implementation <span class="token string">&#39;androidx.appcompat:appcompat:1.2.0&#39;</span>
    implementation <span class="token string">&#39;com.google.android.material:material:1.2.1&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后在每个模块上添加一句引用即可，相比上一种写方法，这种方式更强大，因为它不仅可以配置版本号，还支持统一其他的配置项。</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>apply from <span class="token punctuation">:</span> <span class="token string">&#39;../config.gradle&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>具体要用哪一种，可以根据实际情况而定，如果项目采用的是组件化，则可以考虑使用第一种方式，如果项目采用的是模块化，则可以考虑使用第二种方式，当然两种一起结合用也是可以的。</li></ul><h2 id="代码注释规范" tabindex="-1"><a class="header-anchor" href="#代码注释规范" aria-hidden="true">#</a> 代码注释规范</h2><ul><li>类注释规范：<strong>author</strong> 是创建者（必填项）、<strong>time</strong> 是创建时间（必填项）、<strong>desc</strong> 是类的描述（必填项），<strong>doc</strong> 是文档地址（非必填），<strong>github</strong> 是开源地址（如果项目是开源的则必填，否则不填）</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 *    author : Android 轮子哥
 *    github : https://github.com/getActivity/XXPermissions
 *    time   : 2018/06/15
 *    desc   : 权限请求实体类
 *    doc    : https://developer.android.google.cn/reference/android/Manifest.permission?hl=zh_cn
 *             https://developer.android.google.cn/guide/topics/permissions/overview?hl=zh-cn#normal-dangerous
 */</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Permission</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方法注释规范：方法注释可根据实际情况而定</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 设置请求的对象
 *
 * <span class="token keyword">@param</span> <span class="token parameter">activity</span>          当前 Activity，可以传入栈顶的 Activity
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">XXPermissions</span> <span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">FragmentActivity</span> activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字段注释规范：根据字段的作用而定</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/** 请求的权限组 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">REQUEST_PERMISSIONS</span> <span class="token operator">=</span> <span class="token string">&quot;request_permissions&quot;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** 权限回调对象 */</span>
<span class="token keyword">private</span> <span class="token class-name">OnPermissionCallback</span> callBack<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>变量注释规范（如果 API 是比较常见并且容易理解可以不用写，如果是复杂并且羞涩难懂则需要写上）</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 设置保留实例，不会因为屏幕方向或配置变化而重新创建</span>
fragment<span class="token punctuation">.</span><span class="token function">setRetainInstance</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注释什么情况下要写？什么情况下不用写？这个问题我很有感触，代码注释写多了不好，显得太啰嗦，也会增加工作量，写少了也不好，又怕别人看不懂，也害怕给自己后面留坑。我个人的建议是尽量用规范的命名来减少不必要的注释，很多时候我们只需要换位思考一下，忘记这段代码是自己写的，再问一下自己能不能一下子读懂，如果可以的话，注释就可以不用写，否则注释还是要考虑写上。</li></ul><h2 id="代码硬编码规范" tabindex="-1"><a class="header-anchor" href="#代码硬编码规范" aria-hidden="true">#</a> 代码硬编码规范</h2><ul><li>请尽量避免使用硬编码，例如系统的一些常量值，不能直接写死，而是应该通过代码引用，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 不规范写法示例</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getVisibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 规范写法示例</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getVisibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">VISIBLE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">ACTION_APPLICATION_DETAILS_SETTINGS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在项目开发中，被多次使用到的数值或者字符串也应该提取成常量来供外部引用，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoManager</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/** 学生 */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TYPE_STUDENT</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 老师 */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TYPE_TEACHER</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 家长 */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TYPE_PATRIARCH</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>但并不代表所有的数值都需要常量化，有一些数值常量化的意义并不大，例如：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ValueAnimator</span> animator <span class="token operator">=</span> <span class="token class-name">ValueAnimator</span><span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animator<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>所以衡量一个数值或者字符串是否进行常量化的标准有两点：</p><ul><li><p>这个数值或者字符串是否会被多次使用</p></li><li><p>这个数值或者字符串是否具有一定的含义</p></li></ul></li></ul><h2 id="布局文件命名规范" tabindex="-1"><a class="header-anchor" href="#布局文件命名规范" aria-hidden="true">#</a> 布局文件命名规范</h2><ul><li>以 <strong>模块 + 类型</strong> 来命名，例如：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>home_activity.xml

setting_fragment.xml

menu_item.xml

address_dialog.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>这样写的好处在于，由于 res 文件夹下是没有层级概念的</p></li><li><p>通过前缀的命名可以帮助我们更好定位到同一模块下的资源</p></li><li><p>例如分享对话框中，有对话框 Root 布局和 Item 布局</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>share_dialog.xml（Root 布局）

share_item.xml（Item 布局）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资源文件命名规范" tabindex="-1"><a class="header-anchor" href="#资源文件命名规范" aria-hidden="true">#</a> 资源文件命名规范</h2><ul><li>如果是业务模块下的资源，以 <strong>模块 + 类型</strong> 来命名，例如分享对话框的资源：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>share_link_ic.png（复制链接）

share_moment_ic.png（分享到朋友圈）

share_qq_ic.png（分享到 QQ 好友）

share_qzone_ic.png（分享到 QQ 空间）

share_wechat_ic.png（分享到微信好友）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果和业务模块不相干的资源，以 <strong>作用 + 类型</strong> 来命名，例如通用的控件样式资源：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>button_rect_selector.xml（通用直角按钮样式）

button_round_selector.xml（通用圆角按钮样式）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这种资源有一个共同特点，它不属于哪个模块，但是在不同模块都有用到，所以不能用业务的模块名作为文件名前缀，最后附上常见类型名称对应表：</li></ul><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:center;">类型</th></tr></thead><tbody><tr><td style="text-align:center;">ic</td><td style="text-align:center;">图标</td></tr><tr><td style="text-align:center;">bg</td><td style="text-align:center;">背景</td></tr><tr><td style="text-align:center;">selector</td><td style="text-align:center;">选择器</td></tr></tbody></table><h2 id="string-id-命名规范" tabindex="-1"><a class="header-anchor" href="#string-id-命名规范" aria-hidden="true">#</a> String ID 命名规范</h2><ul><li>请以 <strong>模块 + 功能</strong> 来命名，例如：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 主界面 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home_nav_index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home_nav_found<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>发现<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home_nav_message<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home_nav_me<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home_exit_hint<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>再按一次退出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 登录界面 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login_register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login_phone_hint<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>请输入手机号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login_password_hint<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>请输入密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login_forget<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>忘记密码？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login_text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login_other<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>其他登录方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 注册界面 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register_title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register_hint<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>手机号仅用于登录和保护账号安全<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register_login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register_password_hint1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>设置密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register_password_hint2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>再次输入密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register_password_input_error<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>两次密码输入不一致，请重新输入<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 设置界面 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setting_title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>设置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setting_language_switchover<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>语言切换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setting_language_simple<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>简体中文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setting_language_complex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>繁体中文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>另外有一类 String 被多个模块所引用，需要以 <strong>common + 作用</strong> 来命名，例如：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_loading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>加载中<span class="token entity" title="…">&amp;#8230;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_confirm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>确定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_cancel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>取消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_year<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_month<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>月<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_day<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>日<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_hour<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>时<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_minute<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>分<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_second<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>秒<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="color-id-命名规范" tabindex="-1"><a class="header-anchor" href="#color-id-命名规范" aria-hidden="true">#</a> Color ID 命名规范</h2><ul><li>请以 <strong>模块 + 作用 + color</strong> 来命名，例如：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logcat_level_verbose_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFBBBBBB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logcat_level_debug_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FF33B5E5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logcat_level_info_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FF99CC00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logcat_level_warn_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFFBB33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logcat_level_error_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFF4444<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logcat_level_other_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFFFFFF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>另外有一类 Color 被多个模块所引用，需要以 <strong>common + 作用 + color</strong> 来命名，例如：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- App 样式中引用的颜色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_primary_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@color/white<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_primary_dark_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@color/black<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_accent_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#5A8DDF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_window_background_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#F4F4F4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_text_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#333333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_text_hint_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@color/panda<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 按钮按压时的颜色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_button_pressed_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#AA5A8DDF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 按钮禁用时的颜色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_button_disable_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#BBBBBB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 分割线的颜色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common_line_color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#ECECEC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>还有一类 Color 是行业通用的色值，需要以 <strong>简单直接的方式</strong> 来命名，例如：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 透明色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#00000000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 白色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFFFFFF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 黑色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FF000000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 灰色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gray<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FF808080<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 红色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFF0000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 金色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gold<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFFD700<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 黄色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>yellow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFFFF00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 绿色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>green<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FF008000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 蓝色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FF0000FF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 紫色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>purple<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FF800080<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 粉色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pink<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFFC0CB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 橙色 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#FFFFA500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在实际开发中，我们常常会遇到类似下面这种命名方式：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>&lt;name=&quot;color_FF35BF30&quot;&gt;#FF35BF30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>其实这种命名方式是不规范的，因为它对 <strong>Color ID</strong> 的名称定义比较模糊，会容易给别人造成误导；举个例子：假设项目中有 <strong>200</strong> 个地方引用了这个 <code>color_FF35BF30</code> 色值，其中有 <strong>150</strong> 地方是你自己引用的，另外 <strong>50</strong> 个地方是别人引用的，但是别人不知道你那个色值是干什么的，看到你有写就直接引用了，突然有一天产品经理心情不好要改这个色值，那么你要从 <strong>200</strong> 地方区分 <strong>150</strong> 个需要修改的地方和 <strong>50</strong> 个不需要修改的地方。</li></ul><h2 id="anim-id-命名规范" tabindex="-1"><a class="header-anchor" href="#anim-id-命名规范" aria-hidden="true">#</a> Anim ID 命名规范</h2><ul><li>应用到某个模块 <strong>View</strong>，例如：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>login_left_balloon_view.xml
login_right_balloon_view.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>应用到全局 <strong>Activity</strong>，例如：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>left_in_activity.xml
left_out_activity.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>应用到全局 <strong>Dialog</strong>，例如：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bottom_in_dialog.xml
bottom_out_dialog.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="view-id-命名规范" tabindex="-1"><a class="header-anchor" href="#view-id-命名规范" aria-hidden="true">#</a> View ID 命名规范</h2><ul><li>应该以 <strong>控件的缩写 + 模块名 + 作用</strong> 来命名，例如</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@+id/R.id.rg_login_type

@+id/R.id.et_login_phone

@+id/R.id.et_login_sms

@+id/R.id.et_login_password

@+id/R.id.btn_login_commit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>View 和 Layout 控件缩写表，这里列举最常见的几个</li></ul><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:center;">缩写</th></tr></thead><tbody><tr><td style="text-align:center;">TextView</td><td style="text-align:center;">tv</td></tr><tr><td style="text-align:center;">EditText</td><td style="text-align:center;">et</td></tr><tr><td style="text-align:center;">Button</td><td style="text-align:center;">btn</td></tr><tr><td style="text-align:center;">ImageView</td><td style="text-align:center;">iv</td></tr><tr><td style="text-align:center;">ImageButton</td><td style="text-align:center;">ib</td></tr><tr><td style="text-align:center;">ListView</td><td style="text-align:center;">lv</td></tr><tr><td style="text-align:center;">RecyclerView</td><td style="text-align:center;">rv</td></tr><tr><td style="text-align:center;">RadioButton</td><td style="text-align:center;">rb</td></tr><tr><td style="text-align:center;">RadioGroup</td><td style="text-align:center;">rg</td></tr><tr><td style="text-align:center;">ProgressBar</td><td style="text-align:center;">pb</td></tr><tr><td style="text-align:center;">CheckBox</td><td style="text-align:center;">cb</td></tr><tr><td style="text-align:center;">TableLayout</td><td style="text-align:center;">tl</td></tr><tr><td style="text-align:center;">ScrollView</td><td style="text-align:center;">sv</td></tr><tr><td style="text-align:center;">LinearLayout</td><td style="text-align:center;">ll</td></tr><tr><td style="text-align:center;">RelativeLayout</td><td style="text-align:center;">rl</td></tr><tr><td style="text-align:center;">FrameLayout</td><td style="text-align:center;">fl</td></tr></tbody></table><h2 id="style-命名规范" tabindex="-1"><a class="header-anchor" href="#style-命名规范" aria-hidden="true">#</a> Style 命名规范</h2><ul><li>如果只是主题相关的样式，以 <strong>Theme</strong> 命名结尾，控件样式则以 <strong>Style</strong> 命名结尾，命名要求尽量简洁，并且需要有代码注释，示例如下：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 应用主题样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AppTheme<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Theme.AppCompat.DayNight.NoActionBar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    .....
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 全屏主题样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FullScreenTheme<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AppTheme<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    .....
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 闪屏页主题样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SplashTheme<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FullScreenTheme<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    .....
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 默认圆角按钮样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ButtonStyle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Widget.AppCompat.Button.Borderless<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    .....
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 不带圆角按钮样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RectButtonStyle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ButtonStyle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    .....
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 默认文本框样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>EditTextStyle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    .....
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 验证码按钮样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CountdownViewStyle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    .....
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xml-编码规范" tabindex="-1"><a class="header-anchor" href="#xml-编码规范" aria-hidden="true">#</a> XML 编码规范</h2><ul><li>不推荐用 <strong>dp</strong> 作为字体单位，虽然在大部分手机上面 <strong>dp</strong> 和 <strong>sp</strong> 计算是差不多的，但是会有一部分老年用户群，例如咱们的长辈，他们通常会把手机显示的字体大小调大，这样他们才不需要带眼镜看手机，如果我们用 <strong>dp</strong> 作为字体单位，无论手机怎么调整字体大小，应用的字体大小都不会有任何的变化，所以这种操作显然是非常不人性化的。</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 不规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>18dp<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>18sp<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,166),L=n("strong",null,"TextView",-1),I=n("strong",null,"Button",-1),P=n("code",null,"wrap_content",-1),O=n("code",null,"padding",-1),R=n("code",null,"padding",-1),N={href:"https://blog.csdn.net/ccpat/article/details/45226951",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"padding",-1),M=n("strong",null,"2~3dp",-1),G=e(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 不规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>180dp<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>60dp<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingStart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80dp<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20dp<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingEnd</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80dp<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingBottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20dp<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>ImageView</strong> 的宽高任一项定义成 <code>match_parent</code> 时，另外一项不能写死大小，而是应该使用 <code>wrap_content</code>，否则很可能会因为比例不对导致图片变形，另外还需要使用 <code>android:adjustViewBounds=&quot;true&quot;</code> 属性，否则 <code>ImageView</code> 无法根据图片的宽高来调整自己的宽高。</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 不规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300dp<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@drawable/example_bg<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>adjustViewBounds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@drawable/example_bg<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>XML 节点编写应该规范，在没有子节点的情况下，应当以 <code>/&gt;</code> 节点结尾，如果有则以 <code>&lt;/xxx.xxx.xxx&gt;</code> 节点结尾</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 不规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.recyclerview.widget.RecyclerView</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 不规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextView</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">&lt;!-- 规范写法示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="预览属性约定" tabindex="-1"><a class="header-anchor" href="#预览属性约定" aria-hidden="true">#</a> 预览属性约定</h2><ul><li>应该在布局文件根布局中定义 <code>tools:context</code> 属性，以便在布局文件中快速定位到对应的类</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/tools<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.ui.activity.HomeActivity<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tools:context=&quot;.ui.activity.HomeActivity&quot;

tools:context=&quot;.ui.fragment.SettingFragment&quot;

tools:context=&quot;.ui.adapter.HomeAdapter&quot;

tools:context=&quot;.ui.dialog.PersonDataDialog&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>此外，tools 属性还有各种各样的用途，例如 <strong>RecyclerView</strong> 的 <strong>tools</strong> 属性</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/rv_pay_list<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>overScrollMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>never<span class="token punctuation">&quot;</span></span>

    <span class="token attr-name"><span class="token namespace">tools:</span>listitem</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@layout/item_dialog_pay_password<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">tools:</span>itemCount</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>9<span class="token punctuation">&quot;</span></span>

    <span class="token attr-name"><span class="token namespace">tools:</span>layoutManager</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>androidx.recyclerview.widget.GridLayoutManager<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">tools:</span>spanCount</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这种命名方式不止可以应用于 <strong>RecyclerView</strong>，还可以应用于其他 <strong>View</strong> 的属性，比如常用的 <strong>TextView</strong> 和 <strong>ImageView</strong></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">tools:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>学生姓名<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/iv_home_course_image<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">tools:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@drawable/bg_home_placeholder<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果某个 <strong>TextView</strong> 显示的字符串是一成不变的，那么可以直接定义在布局文件中，如果是动态变化的，那么应该使用 <code>tools:text</code> 预览属性，而不应该使用 <code>android:text</code>，其他布局属性也同理。</li></ul><h2 id="资源硬编码规范" tabindex="-1"><a class="header-anchor" href="#资源硬编码规范" aria-hidden="true">#</a> 资源硬编码规范</h2>`,18),W=n("li",null,[n("p",null,[s("String 硬编码规范：如果项目已经适配了多语种，则严禁写死在 Java 代码或者布局文件中，如果没有这块需求的话，也建议将 String 资源定义在 "),n("code",null,"string.xml"),s(" 文件，此项不强制要求，大家根据实际情况而定。")])],-1),K=n("li",null,[n("p",null,[s("Color 硬编码规范：在没有使用夜间模式的情况下，允许大部分 Color 值直接定义在布局文件中，但是如果某个色值引用得比较多（例如主题强调色、默认背景色等），需要抽取到 "),n("code",null,"color.xml"),s(" 文件中。")])],-1),H={href:"https://github.com/wildma/ScreenAdaptation",target:"_blank",rel:"noopener noreferrer"},Y=n("li",null,[n("p",null,[s("Style 样式规范：对于一些常用并且样式比较统一的控件，例如 "),n("strong",null,"Button"),s("、"),n("strong",null,"EditText"),s(" 等，我们对这些控件的样式进行抽取到 "),n("code",null,"style.xml"),s(" 文件中来，避免属性重复定义。")])],-1),U=e(`<h2 id="版本名和版本码规范" tabindex="-1"><a class="header-anchor" href="#版本名和版本码规范" aria-hidden="true">#</a> 版本名和版本码规范</h2><ul><li><p>版本名应该由三段整数组成</p><ul><li><p>第一段：代表大版本号，如果出现 UI 大改版，或者项目出现大重构时 +1</p></li><li><p>第二段：代表需求版本号，一般双周发一次版，每个迭代周期 +1</p></li><li><p>第三段：代表小版本号，发版之后出现 Bug，需要发版修复时 +1</p></li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>versionName &#39;4.8.0&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>另外版本码应当和版本名保持一定的关联性，例如：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>versionName &#39;4.12.1&#39;
versionCode 41201
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这样的好处在于：版本名越高，版本码也会变大，不仅能方便记忆，还能帮助我们更好地管理和升级版本，在一定程度上能避免<strong>高版本名低版本码</strong>的 apk 能被<strong>低版本名高版本码</strong>的 apk 覆盖安装的情况。</li></ul><h2 id="git-版本管理规范" tabindex="-1"><a class="header-anchor" href="#git-版本管理规范" aria-hidden="true">#</a> Git 版本管理规范</h2><ul><li><p>提交规范：在提交代码时请进行 CodeReview（可以是自己也可以是别人），并且确保代码是自测通过的才能进行提交。另外有一点需要注意：提交之前不能先 Pull 代码，这样方式可行但是不规范。</p></li><li><p>多分支规范：在多人协作开发中，我们应该用一个分支代表一个需求，这样做的好处是，在开发需求的过程中，一旦需求被砍，需求分支只要不合入主分支中就不会有太大的影响。另外一个需要注意的点就是分支合并的时机，时机应当在测试完毕后合入，由于分支合并有先后顺序，所以可能会导致代码在没有合并之前没有问题，在合并后出现了问题，所以我们应该约定一个封板时间（一般为上线或者灰度前两三天），在此期间对整个迭代的需求进行回归测试，不允许存在 Bug 之外的修改，例如需求变动修改，若非紧急变动，请勿轻易修改，一旦修改了，则应当将上线或者灰度的时间进行顺延，这样可以有效降低线上事故发生的概率。</p></li><li><p>分支管理规范：分支一多会产生一些问题，那就是怎么管理这些分支，这个问题其实要从分支名称下手，由于分支是没有层级概念的，但是在一些版本管理软件上面（例如 <code>Sourcetree</code>），可以通过给分支的名称加 <code>/</code> 来建立层级，所以我们在给分支命名的时候，要遵循这种格式的命名，那么问题来了如何建立分支的层级？</p><ul><li><p>如果是 <code>需求主分支</code>，请以 <code>版本名</code> + <code>/</code> + <code>feature-branch</code> 的格式来命名，例如 <code>v5.2.0/feature-branch</code></p></li><li><p>如果是 <code>需求功能点分支</code>，请以 <code>版本名</code> + <code>/</code> + <code>feature</code> + <code>需求名称</code> 的格式来命名，例如 <code>v5.2.0/feature-push-message</code></p></li><li><p>如果是 <code>Bug 修复分支</code>，请以 <code>版本名</code> + <code>/</code> + <code>bugfix</code> + <code>Bug 名称</code> 的格式来命名，例如 <code>v5.2.0/bugfix-launch-crash</code></p></li></ul></li><li><p>它们之间的合并顺序应当为：<code>需求功能点分支</code> 或者 <code>Bug 修复分支</code> 自测没有问题了合并到 <code>需求主分支</code>，下一个版本的 <code>需求主分支</code> 应该基于上一个版本的 <code>需求主分支</code> 的代码开分支，还有在代码灰度完成，正式上线之后，还应当给某个提交点打版本标签（俗称打版本 tag），标记这个版本的代码在此处提交点发版，方便后续追溯问题。</p></li><li><p>这个时候大家可能有疑问了，上个版本有 Bug，紧急发了修复版本 <code>5.1.1</code>，但是 <code>5.2.0</code>（基于 <code>5.1.0</code>）已经开始迭代了，那么 <code>5.1.1</code> 应该在什么时机合入？答：在发完 <code>5.1.1</code> 版本后应该将代码及时合入 <code>5.2.0</code> 分支，避免后续出现遗留。</p></li><li><p>分支依赖冲突处理：在多分支开发中，总是避免不了一种情况，那就是需求之间存在依赖关系的问题，面对这种问题最好的处理方式是：</p><ul><li><p>如果功能 A 依赖功能 B 的代码，而开发是同步进行的，则在分支 A 上面开发完功能 A 后，再合并一下分支 B 的功能 B 的代码，将分支 A 的功能补充完整再进行提测。</p></li><li><p>如果功能 A 和功能 B 的功能之间是强依赖关系，那么比较优的解决方案是用同一个分支开发功能 A 和功能 B，当然这只是建议，最终还是要根据实际情况来判断要不要那么做。</p></li></ul></li></ul>`,8);function z(J,Q){const a=o("ExternalLinkIcon");return l(),c("div",null,[u,n("ul",null,[r,n("li",null,[n("p",null,[d,s(" 和 "),k,s("，在能满足使用的情况下，优先选用 "),v,s("，因为这样可以"),n("a",m,[s("减少一些编译时间"),t(a)]),s("。")])]),g,n("li",null,[n("p",null,[s("每个小组成员应当安装"),n("a",b,[s("阿里巴巴代码约束插件"),t(a)]),s("，并及时地对插件所提示的"),y,s("进行处理或者抑制警告。")])]),n("li",null,[n("p",null,[s("应用图标应该放在 "),h,s(" 目录下，其他图片资源应当放到 "),w,s(" 目录下，具体原因可以看"),n("a",x,[s("谷歌官方文档"),t(a)]),s("对这两个文件夹给出的介绍：")])])]),n("table",null,[q,n("tbody",null,[n("tr",null,[_,n("td",f,[s("位图文件（"),E,s("、"),A,s("、"),B,s("、"),j,s("）或编译为以下可绘制对象资源子类型的 XML 文件：位图文件九宫格（可调整大小的位图）状态列表形状动画可绘制对象其他可绘制对象请参阅 "),n("a",C,[s("Drawable 资源"),t(a)]),s("。")])]),n("tr",null,[S,n("td",F,[s("适用于不同启动器图标密度的可绘制对象文件。如需了解有关使用 "),T,s(" 文件夹管理启动器图标的详细信息，请参阅"),n("a",V,[s("管理项目概览"),t(a)]),s("。")])])])]),D,n("ul",null,[n("li",null,[s("不能根据设计图给定的宽高把 "),L,s(" 或者 "),I,s(" 的宽高定死，而是通过 "),P,s(" 和 "),O,s(" 的方式来调整 View 的宽高，因为在不同手机上面字体大小不一致，在字体显示比较小的手机上面会显示正常，但是在字体显示比较大的平板上面文字上半部分极有可能会出现被裁剪的情况，所以我们不能把宽高定死，而是通过 "),R,s(" 来调整到控件的大小。不过需要注意的是，"),n("a",N,[s("TextView 有自带的文字间距"),t(a)]),s("，我们在拿设计图给定的 "),X,s("值时，需要拿设计图给定的值适当减去这一部分值（一般大概是在 "),M,s("）。")])]),G,n("ul",null,[W,K,n("li",null,[n("p",null,[s("Dimens 硬编码规范：允许写死在 Java 代码或者布局文件中，但是如果使用了"),n("a",H,[s("通配符方案"),t(a)]),s("对屏幕进行适配，那么则不能直接写死。")])]),Y]),U])}const Z=p(i,[["render",z],["__file","Androiddaimaguifanwendang.html.vue"]]);export{Z as default};
