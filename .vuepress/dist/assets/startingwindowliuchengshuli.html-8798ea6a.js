import{_ as t,r as p,o as e,c as o,b as a,d as n,e as c,a as i}from"./app-e8f85126.js";const l={},u=i(`<h2 id="startingwindow介绍" tabindex="-1"><a class="header-anchor" href="#startingwindow介绍" aria-hidden="true">#</a> startingwindow介绍</h2><p>在activity真正显示之前，可能要处理大量耗时任务，如进程创建，资源加载，窗口绘制等。所以在窗口的过渡动画完成之后，可能应用还没有完成页面的绘制，我们需要一个页面来等待真正的activity显示。或者说窗口过渡的动画使用什么素材？</p><p>startingwindow的存在就是为了解决这样的问题，它是应用启动时窗口的一个过渡</p><h3 id="startingwindow的组成" tabindex="-1"><a class="header-anchor" href="#startingwindow的组成" aria-hidden="true">#</a> startingwindow的组成</h3><p>和activity的窗口一样，Startingwindow也是又windowState和surface构成。窗口类型时<code>TYPE_APPLICATION_STARTING</code>，startingwindow类型有三种</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//不启动startingwindow，常见于应用内的activity切换</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">STARTING_WINDOW_TYPE_NONE</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">//快照启动窗口，显示的内容为最近一次的可见内容的快照。使用场景如task从后台到前台的切换，屏幕解锁。</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">STARTING_WINDOW_TYPE_SNAPSHOT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">//闪屏启动窗口，显示的内容时空白的窗口，背景和应用的主题有关。使用场景如应用冷启动</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">STARTING_WINDOW_TYPE_SPLASH_SCREEN</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="startingwindow的框架" tabindex="-1"><a class="header-anchor" href="#startingwindow的框架" aria-hidden="true">#</a> startingwindow的框架</h2><h3 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构" aria-hidden="true">#</a> 数据结构</h3><p><strong>系统侧</strong></p><ul><li><p><strong>Task</strong></p><p>存放task的activityRecord的容器，也是处理activityRecord生命周期的主要参与者。startingwindow的启动流程起点就是task.startActivityLocked()<br> (注：Android12之后的版本已经没有ActivityStack这个类，ActivityStack和Task统一由Task表示,因此为task.startActivityLocked())</p></li><li><p><strong>ActivityRecord</strong></p><p>系统进程中的Activity，也就是窗口容器，activity窗口和启动窗口都是它的child，因此启动窗口的添加和移除都是由ActivityRecord负责。</p></li><li><p><strong>WindowState</strong></p><p>系统进程中的窗口，在窗口管理系统中时空指页面大小位置等属性的基本单元。startingwindow启动中回创建一个TYPE_APPLICATION_STARTING窗口类型的WindowState</p></li><li><p><strong>StartingData</strong></p><p>抽象了startingwindow的数据模型，负责构造startingsurface</p></li><li><p><strong>SplashScreenStartingData</strong></p><p>闪屏类型启动窗口的startingData实现，封装了闪屏类型启动窗口所需要的数据，如theme，icon，windowflags等等，这些数据来源于ActivityRecord。</p></li><li><p><strong>SnapshotStartingData</strong></p><p>快照类型启动窗口的startingData实现，持有了TaskSnapshot</p></li><li><p><strong>StartingSurfaceController</strong></p><p>由TaskOrganizer.java和TaskOrganizerController.java打通从系统框架到wmshell的通路，从而与wmshell侧的StartingWindowController互交</p></li></ul><p><strong>wmshell侧</strong></p><ul><li><p><strong>StartingWindowController</strong> startingwindow的添加和移除最终的调用都在这里</p></li><li><p><strong>StartingSurfaceDrawer</strong></p><p>startingwindow的添加和移除的实现</p></li></ul><h3 id="代码编译" tabindex="-1"><a class="header-anchor" href="#代码编译" aria-hidden="true">#</a> 代码编译</h3><p>wmshell侧的代码修改<code>make SystemUI</code>编译即可</p><p><code>adb push SystemUI.apk /system_ext/priv-app/SystemUI</code></p><h3 id="流程简述" tabindex="-1"><a class="header-anchor" href="#流程简述" aria-hidden="true">#</a> 流程简述</h3><p>Startingwindow的创建时机在Activity的启动时。前面提到Activity的启动是需要一个空白页或者截图页面过渡的，所以在系统进程收到的Activity的启动请求时，根据不同的场景分配不同的启动窗口类型，绘制启动窗口</p><p>startingwindow的移除时机在activity的绘制完成之后，当Activity完成绘制之后，Startingwindow的使命页结束了，所以移除。<br><img src="https://raw.githubusercontent.com/shug666/image/main/imagesb61d37a9a9f782a9febe700ce83b9c55.png" alt="在这里插入图片描述"></p><p>startingwindow的创建与移除主要是通过StartingWindowController的create和remove实现的。</p><p>在Launcher启动App场景下，startingwindow的启动入口是ActivityStarter.startActivityLocked()或者Task.startActivityLocked()，移除入口是WindowManagerService.finishDrawing()</p><p>在recents启动APP、屏幕解锁场景，startingwindow的启动和移除入口是其他通道，但内部实现一致。</p><h3 id="添加流程" tabindex="-1"><a class="header-anchor" href="#添加流程" aria-hidden="true">#</a> 添加流程</h3><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesd094d577fb8e2a29ce3f62ba596e21a6.png" alt="在这里插入图片描述"></p><h3 id="移除流程" tabindex="-1"><a class="header-anchor" href="#移除流程" aria-hidden="true">#</a> 移除流程</h3><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesb204d2cc7f7dc2bf37e5686972f771b4.png" alt="在这里插入图片描述"></p><h2 id="startingwindow的添加" tabindex="-1"><a class="header-anchor" href="#startingwindow的添加" aria-hidden="true">#</a> startingwindow的添加</h2><h3 id="前置流程" tabindex="-1"><a class="header-anchor" href="#前置流程" aria-hidden="true">#</a> 前置流程</h3><p><strong>1.启动或者切换到另一个界面，ATMS会执行startActivity()函数</strong><br> 关键代码：ActivityTaskManagerService.java中的startActivityAsUser方法返回值。ActivityStartController.java的obtainStarter方法，返回的ActivityStarter对象。即实际调用了ActivityStarter的execute方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">startActivityAsUser</span><span class="token punctuation">(</span><span class="token class-name">IApplicationThread</span> caller<span class="token punctuation">,</span> <span class="token class-name">String</span> callingPackage<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> callingFeatureId<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">,</span> <span class="token class-name">String</span> resolvedType<span class="token punctuation">,</span>
            <span class="token class-name">IBinder</span> resultTo<span class="token punctuation">,</span> <span class="token class-name">String</span> resultWho<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> startFlags<span class="token punctuation">,</span>
            <span class="token class-name">ProfilerInfo</span> profilerInfo<span class="token punctuation">,</span> <span class="token class-name">Bundle</span> bOptions<span class="token punctuation">,</span> <span class="token keyword">int</span> userId<span class="token punctuation">,</span> <span class="token keyword">boolean</span> validateIncomingUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token comment">// TODO: Switch to user app stacks here.</span>
        <span class="token keyword">return</span> <span class="token function">getActivityStartController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">obtainStarter</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> <span class="token string">&quot;startActivityAsUser&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setCaller</span><span class="token punctuation">(</span>caller<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setCallingPackage</span><span class="token punctuation">(</span>callingPackage<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setCallingFeatureId</span><span class="token punctuation">(</span>callingFeatureId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setResolvedType</span><span class="token punctuation">(</span>resolvedType<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setResultTo</span><span class="token punctuation">(</span>resultTo<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setResultWho</span><span class="token punctuation">(</span>resultWho<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setRequestCode</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setStartFlags</span><span class="token punctuation">(</span>startFlags<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setProfilerInfo</span><span class="token punctuation">(</span>profilerInfo<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setActivityOptions</span><span class="token punctuation">(</span>bOptions<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ActivityStarter.java后续方法调用链</p><p><code>execute() -&gt; executeRequest() -&gt; startActivityUnchecked() -&gt; startActivityInner() -&gt; startActivityLocked()</code></p><p>startActivityInner中分两步走</p><p>调用resumeFocusedTasksTopActivities()走Activity启动流程</p><p>调用startActivityLocked()走启动窗口流程</p><p>我们这里只关注启动窗口的流程</p><p><strong>2.系统会把activity添加到对应的task中，并调用activityRecord的showStartingWindow(),通知显示startingwindow</strong></p><p>ActivityStarter.java中的startActivityLocked()调用的是Task.java中的startActivityLocked()</p><p>该方法中有一个关键变量boolean doShow = true;这个doShow指是否执行ActivityRecord.showStartingWindow方法，在某些场景下会被置为false</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">void</span> <span class="token function">startActivityLocked</span><span class="token punctuation">(</span><span class="token class-name">ActivityRecord</span> r<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Task</span> topTask<span class="token punctuation">,</span> <span class="token keyword">boolean</span> newTask<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> isTaskSwitch<span class="token punctuation">,</span> <span class="token class-name">ActivityOptions</span> options<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ActivityRecord</span> sourceRecord<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token keyword">boolean</span> doShow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>newTask<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Even though this activity is starting fresh, we still need</span>
                <span class="token comment">// to reset it to make sure we apply affinities to move any</span>
                <span class="token comment">// existing activities from other tasks in to it.</span>
                <span class="token comment">// If the caller has requested that the target task be</span>
                <span class="token comment">// reset, then do so.</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">FLAG_ACTIVITY_RESET_TASK_IF_NEEDED</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">resetTaskIfNeeded</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    doShow <span class="token operator">=</span> <span class="token function">topRunningNonDelayedActivityLocked</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">==</span> r<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span><span class="token function">getAnimationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">==</span> <span class="token class-name">ActivityOptions</span><span class="token punctuation">.</span><span class="token constant">ANIM_SCENE_TRANSITION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                doShow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>mLaunchTaskBehind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Don&#39;t do a starting window for mLaunchTaskBehind. More importantly make sure we</span>
                <span class="token comment">// tell WindowManager that r is visible even though it is at the back of the root</span>
                <span class="token comment">// task.</span>
                r<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">ensureActivitiesVisible</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token constant">PRESERVE_WINDOWS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Go ahead to execute app transition for this activity since the app transition</span>
                <span class="token comment">// will not be triggered through the resume channel.</span>
                mDisplayContent<span class="token punctuation">.</span><span class="token function">executeAppTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">SHOW_APP_STARTING_PREVIEW</span> <span class="token operator">&amp;&amp;</span> doShow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Figure out if we are transitioning from another activity that is</span>
                <span class="token comment">// &quot;has the same starting icon&quot; as the next one.  This allows the</span>
                <span class="token comment">// window manager to keep the previous window it had previously</span>
                <span class="token comment">// created, if it still had one.</span>
                <span class="token class-name">Task</span> baseTask <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>baseTask<span class="token punctuation">.</span><span class="token function">isEmbedded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If the task is embedded in a task fragment, there may have an existing</span>
                    <span class="token comment">// starting window in the parent task. This allows the embedded activities</span>
                    <span class="token comment">// to share the starting window and make sure that the window can have top</span>
                    <span class="token comment">// z-order by transferring to the top activity.</span>
                    baseTask <span class="token operator">=</span> baseTask<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asTaskFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">final</span> <span class="token class-name">ActivityRecord</span> prev <span class="token operator">=</span> baseTask<span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span>
                        a <span class="token operator">-&gt;</span> a<span class="token punctuation">.</span>mStartingData <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span><span class="token function">showToCurrentUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                mWmService<span class="token punctuation">.</span>mStartingSurfaceController<span class="token punctuation">.</span><span class="token function">showStartingWindow</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> prev<span class="token punctuation">,</span> newTask<span class="token punctuation">,</span>
                        isTaskSwitch<span class="token punctuation">,</span> sourceRecord<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用StartingSurfaceController的showStartingWindow()</p><p><code>mWmService.mStartingSurfaceController.showStartingWindow(r, prev, newTask,isTaskSwitch, sourceRecord);</code><br> 实际实现是在ActivityRecord中</p><p>ActivityRecord.java#showStartingWindow()</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">showStartingWindow</span><span class="token punctuation">(</span><span class="token class-name">ActivityRecord</span> prev<span class="token punctuation">,</span> <span class="token keyword">boolean</span> newTask<span class="token punctuation">,</span> <span class="token keyword">boolean</span> taskSwitch<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> processRunning<span class="token punctuation">,</span> <span class="token keyword">boolean</span> startActivity<span class="token punctuation">,</span> <span class="token class-name">ActivityRecord</span> sourceRecord<span class="token punctuation">,</span>
            <span class="token class-name">ActivityOptions</span> candidateOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mTaskOverlay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// We don&#39;t show starting window for overlay activities.</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token class-name">ActivityOptions</span> startOptions <span class="token operator">=</span> candidateOptions <span class="token operator">!=</span> <span class="token keyword">null</span>
                <span class="token operator">?</span> candidateOptions <span class="token operator">:</span> mPendingOptions<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>startOptions <span class="token operator">!=</span> <span class="token keyword">null</span>
                <span class="token operator">&amp;&amp;</span> startOptions<span class="token punctuation">.</span><span class="token function">getAnimationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ActivityOptions</span><span class="token punctuation">.</span><span class="token constant">ANIM_SCENE_TRANSITION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Don&#39;t show starting window when using shared element transition.</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> <span class="token keyword">int</span> splashScreenTheme <span class="token operator">=</span> startActivity <span class="token operator">?</span> <span class="token function">getSplashscreenTheme</span><span class="token punctuation">(</span>startOptions<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> resolvedTheme <span class="token operator">=</span> <span class="token function">evaluateStartingWindowTheme</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> packageName<span class="token punctuation">,</span> theme<span class="token punctuation">,</span>
                splashScreenTheme<span class="token punctuation">)</span><span class="token punctuation">;</span>

        mSplashScreenStyleSolidColor <span class="token operator">=</span> <span class="token function">shouldUseSolidColorSplashScreen</span><span class="token punctuation">(</span>sourceRecord<span class="token punctuation">,</span> startActivity<span class="token punctuation">,</span>
                startOptions<span class="token punctuation">,</span> resolvedTheme<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">boolean</span> activityCreated <span class="token operator">=</span>
                mState<span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token constant">STARTED</span><span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mState<span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token constant">STOPPED</span><span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// If this activity is just created and all activities below are finish, treat this</span>
        <span class="token comment">// scenario as warm launch.</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> newSingleActivity <span class="token operator">=</span> <span class="token operator">!</span>newTask <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>activityCreated
                <span class="token operator">&amp;&amp;</span> task<span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token operator">!</span>r<span class="token punctuation">.</span>finishing <span class="token operator">&amp;&amp;</span> r <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">boolean</span> scheduled <span class="token operator">=</span> <span class="token function">addStartingWindow</span><span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> resolvedTheme<span class="token punctuation">,</span>
                prev<span class="token punctuation">,</span> newTask <span class="token operator">||</span> newSingleActivity<span class="token punctuation">,</span> taskSwitch<span class="token punctuation">,</span> processRunning<span class="token punctuation">,</span>
                <span class="token function">allowTaskSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activityCreated<span class="token punctuation">,</span> mSplashScreenStyleSolidColor<span class="token punctuation">,</span> allDrawn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG_STARTING_WINDOW_VERBOSE</span> <span class="token operator">&amp;&amp;</span> scheduled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Scheduled starting window for &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键代码：</p><p><code>final int resolvedTheme = evaluateStartingWindowTheme(prev, packageName, theme,splashScreenTheme);</code></p><p>这个方法调用了validateStartingWindowTheme方法，判断启动窗口的几种不添加场景</p><p>windowIsTranslucent ----透明窗口，应用设了透明属性，空Activity等(应用侧有属性配置)<br> 应用侧设置透明属性</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>APPTheme<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@android:style/Test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android:windowDisablePreview<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>windowIsFloating ----浮窗相关场景</p><p>windowShowWallpaper ----带wallpaper属性，比如桌面，锁屏等等</p><p>windowDisableStarting ----主动禁用startingwindow，应用主动禁用启动窗口(应用侧有属性配置)<br> 应用侧配置禁用启动窗口</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>APPTheme<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@android:style/Test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android:windowDisablePreview<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上四个参数任意一个为true则不添加启动窗口，这里主要针对的是冷启动的Splash Screen的添加，热启动不受窗口属性的影响</p><p>添加startingwindow的调用</p><p><code>final boolean scheduled = addStartingWindow(packageName, resolvedTheme,prev, newTask || newSingleActivity, taskSwitch, processRunning,allowTaskSnapshot(), activityCreated,mSplashScreenStyleSolidColor, allDrawn);</code></p><p>以上是T的代码，S的有所不同</p><p>但最终都是让ActivityRecord把各种activity相关属性传入到了addstartingwindow，为了就是让startingwindow在显示上尽可能的和实际显示的activity相似</p><p><strong>3.核心方法，判断是否需要添加startingwindow已及其类型</strong></p><p>ActivityRecord.java#addStartingWindow</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> <span class="token function">addStartingWindow</span><span class="token punctuation">(</span><span class="token class-name">String</span> pkg<span class="token punctuation">,</span> <span class="token keyword">int</span> resolvedTheme<span class="token punctuation">,</span> <span class="token class-name">ActivityRecord</span> from<span class="token punctuation">,</span> <span class="token keyword">boolean</span> newTask<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> taskSwitch<span class="token punctuation">,</span> <span class="token keyword">boolean</span> processRunning<span class="token punctuation">,</span> <span class="token keyword">boolean</span> allowTaskSnapshot<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> activityCreated<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isSimple<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> activityAllDrawn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// If the display is frozen, we won&#39;t do anything until the actual window is</span>
        <span class="token comment">// displayed so there is no reason to put in the starting window.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">okToDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mStartingData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> <span class="token class-name">WindowState</span> mainWin <span class="token operator">=</span> <span class="token function">findMainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mainWin <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mainWin<span class="token punctuation">.</span>mWinAnimator<span class="token punctuation">.</span><span class="token function">getShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// App already has a visible window...why would you want a starting window?</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> <span class="token class-name">TaskSnapshot</span> snapshot <span class="token operator">=</span>
                mWmService<span class="token punctuation">.</span>mTaskSnapshotController<span class="token punctuation">.</span><span class="token function">getSnapshot</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>mTaskId<span class="token punctuation">,</span> task<span class="token punctuation">.</span>mUserId<span class="token punctuation">,</span>
                        <span class="token boolean">false</span> <span class="token comment">/* restoreFromDisk */</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment">/* isLowResolution */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> type <span class="token operator">=</span> <span class="token function">getStartingWindowType</span><span class="token punctuation">(</span>newTask<span class="token punctuation">,</span> taskSwitch<span class="token punctuation">,</span> processRunning<span class="token punctuation">,</span>
                allowTaskSnapshot<span class="token punctuation">,</span> activityCreated<span class="token punctuation">,</span> activityAllDrawn<span class="token punctuation">,</span> snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//TODO(191787740) Remove for T+</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> useLegacy <span class="token operator">=</span> type <span class="token operator">==</span> <span class="token constant">STARTING_WINDOW_TYPE_SPLASH_SCREEN</span>
                <span class="token operator">&amp;&amp;</span> mWmService<span class="token punctuation">.</span>mStartingSurfaceController<span class="token punctuation">.</span><span class="token function">isExceptionApp</span><span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> mTargetSdk<span class="token punctuation">,</span>
                    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                        <span class="token class-name">ActivityInfo</span> activityInfo <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">resolveActivityInfo</span><span class="token punctuation">(</span>
                                mAtmService<span class="token punctuation">.</span>mContext<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">GET_META_DATA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> activityInfo <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> activityInfo<span class="token punctuation">.</span>applicationInfo <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">int</span> typeParameter <span class="token operator">=</span> <span class="token class-name">StartingSurfaceController</span>
                <span class="token punctuation">.</span><span class="token function">makeStartingWindowTypeParameter</span><span class="token punctuation">(</span>newTask<span class="token punctuation">,</span> taskSwitch<span class="token punctuation">,</span> processRunning<span class="token punctuation">,</span>
                        allowTaskSnapshot<span class="token punctuation">,</span> activityCreated<span class="token punctuation">,</span> isSimple<span class="token punctuation">,</span> useLegacy<span class="token punctuation">,</span> activityAllDrawn<span class="token punctuation">,</span>
                        type<span class="token punctuation">,</span> packageName<span class="token punctuation">,</span> mUserId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token constant">STARTING_WINDOW_TYPE_SNAPSHOT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isActivityTypeHome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// The snapshot of home is only used once because it won&#39;t be updated while screen</span>
                <span class="token comment">// is on (see {@link TaskSnapshotController#screenTurningOff}).</span>
                mWmService<span class="token punctuation">.</span>mTaskSnapshotController<span class="token punctuation">.</span><span class="token function">removeSnapshotCache</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>mTaskId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mDisplayContent<span class="token punctuation">.</span>mAppTransition<span class="token punctuation">.</span><span class="token function">getTransitFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token operator">&amp;</span> <span class="token class-name">WindowManager</span><span class="token punctuation">.</span><span class="token constant">TRANSIT_FLAG_KEYGUARD_GOING_AWAY_NO_ANIMATION</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Only use snapshot of home as starting window when unlocking directly.</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token function">createSnapshot</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">,</span> typeParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Original theme can be 0 if developer doesn&#39;t request any theme. So if resolved theme is 0</span>
        <span class="token comment">// but original theme is not 0, means this package doesn&#39;t want a starting window.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resolvedTheme <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> theme <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>from <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">transferStartingWindow</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// There is no existing starting window, and we don&#39;t want to create a splash screen, so</span>
        <span class="token comment">// that&#39;s it!</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!=</span> <span class="token constant">STARTING_WINDOW_TYPE_SPLASH_SCREEN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Creating SplashScreenStartingData&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mStartingData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SplashScreenStartingData</span><span class="token punctuation">(</span>mWmService<span class="token punctuation">,</span> resolvedTheme<span class="token punctuation">,</span> typeParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">scheduleAddStartingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过获取startingwindow类型来添加启动窗口</p><p><code>final int type = getStartingWindowType(newTask, taskSwitch, processRunning,allowTaskSnapshot, activityCreated, activityAllDrawn, snapshot);</code></p><p>该方法用来判断startingwindow窗口的类型:splash、snapshot、none</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getStartingWindowType</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> newTask<span class="token punctuation">,</span> <span class="token keyword">boolean</span> taskSwitch<span class="token punctuation">,</span> <span class="token keyword">boolean</span> processRunning<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> allowTaskSnapshot<span class="token punctuation">,</span> <span class="token keyword">boolean</span> activityCreated<span class="token punctuation">,</span> <span class="token keyword">boolean</span> activityAllDrawn<span class="token punctuation">,</span>
            <span class="token class-name">TaskSnapshot</span> snapshot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// A special case that a new activity is launching to an existing task which is moving to</span>
        <span class="token comment">// front. If the launching activity is the one that started the task, it could be a</span>
        <span class="token comment">// trampoline that will be always created and finished immediately. Then give a chance to</span>
        <span class="token comment">// see if the snapshot is usable for the current running activity so the transition will</span>
        <span class="token comment">// look smoother, instead of showing a splash screen on the second launch.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newTask <span class="token operator">&amp;&amp;</span> taskSwitch <span class="token operator">&amp;&amp;</span> processRunning <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>activityCreated <span class="token operator">&amp;&amp;</span> task<span class="token punctuation">.</span>intent <span class="token operator">!=</span> <span class="token keyword">null</span>
                <span class="token operator">&amp;&amp;</span> mActivityComponent<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">ActivityRecord</span> topAttached <span class="token operator">=</span> task<span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token class-name">ActivityRecord</span><span class="token operator">::</span><span class="token function">attachedToProcess</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>topAttached <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>topAttached<span class="token punctuation">.</span><span class="token function">isSnapshotCompatible</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">)</span>
                        <span class="token comment">// This trampoline must be the same rotation.</span>
                        <span class="token operator">&amp;&amp;</span> mDisplayContent<span class="token punctuation">.</span><span class="token function">getDisplayRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rotationForOrientation</span><span class="token punctuation">(</span>mOrientation<span class="token punctuation">,</span>
                                mDisplayContent<span class="token punctuation">.</span><span class="token function">getRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> snapshot<span class="token punctuation">.</span><span class="token function">getRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token constant">STARTING_WINDOW_TYPE_SNAPSHOT</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// No usable snapshot. And a splash screen may also be weird because an existing</span>
                <span class="token comment">// activity may be shown right after the trampoline is finished.</span>
                <span class="token keyword">return</span> <span class="token constant">STARTING_WINDOW_TYPE_NONE</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> isActivityHome <span class="token operator">=</span> <span class="token function">isActivityTypeHome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newTask <span class="token operator">||</span> <span class="token operator">!</span>processRunning <span class="token operator">||</span> <span class="token punctuation">(</span>taskSwitch <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>activityCreated<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isActivityHome<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant">STARTING_WINDOW_TYPE_SPLASH_SCREEN</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>taskSwitch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>allowTaskSnapshot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSnapshotCompatible</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token constant">STARTING_WINDOW_TYPE_SNAPSHOT</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isActivityHome<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token constant">STARTING_WINDOW_TYPE_SPLASH_SCREEN</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activityAllDrawn <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isActivityHome<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token constant">STARTING_WINDOW_TYPE_SPLASH_SCREEN</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token constant">STARTING_WINDOW_TYPE_NONE</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
	<span class="token keyword">boolean</span> <span class="token function">isSnapshotCompatible</span><span class="token punctuation">(</span><span class="token class-name">TaskSnapshot</span> snapshot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>snapshot <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>snapshot<span class="token punctuation">.</span><span class="token function">getTopActivityComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>mActivityComponent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Obsoleted snapshot.</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> rotation <span class="token operator">=</span> mDisplayContent<span class="token punctuation">.</span><span class="token function">rotationForActivityInDifferentOrientation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> currentRotation <span class="token operator">=</span> task<span class="token punctuation">.</span><span class="token function">getWindowConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> targetRotation <span class="token operator">=</span> rotation <span class="token operator">!=</span> <span class="token constant">ROTATION_UNDEFINED</span>
                <span class="token comment">// The display may rotate according to the orientation of this activity.</span>
                <span class="token operator">?</span> rotation
                <span class="token comment">// The activity won&#39;t change display orientation.</span>
                <span class="token operator">:</span> currentRotation<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>snapshot<span class="token punctuation">.</span><span class="token function">getRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> targetRotation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token class-name">Rect</span> taskBounds <span class="token operator">=</span> task<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> w <span class="token operator">=</span> taskBounds<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> h <span class="token operator">=</span> taskBounds<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Point</span> taskSize <span class="token operator">=</span> snapshot<span class="token punctuation">.</span><span class="token function">getTaskSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>currentRotation <span class="token operator">-</span> targetRotation<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Flip the size if the activity will show in 90 degree difference.</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> t <span class="token operator">=</span> w<span class="token punctuation">;</span>
            w <span class="token operator">=</span> h<span class="token punctuation">;</span>
            h <span class="token operator">=</span> t<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Task size might be changed with the same rotation such as on a foldable device.</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> taskSize<span class="token punctuation">.</span>x <span class="token operator">/</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>taskSize<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> w <span class="token operator">/</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0.01f</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键参数：newTask, taskSwitch, processRunning, allowTaskSnapshot, activityCreated, snapshot</p><p>1）newTask、进程未启动、冷启动、切换task且新创建activity时，获得type为splash screen</p><ul><li>新起一个task</li><li>冷启动应用</li><li>task切换且新建activity</li></ul><p>代码层面 Splash Screen需满足的条件</p><p>前置条件：!isActivityTypeHome() --非Launcher桌面</p><p>newTask --新的task</p><p>!processRunning --进程不存在</p><p>taskSwitch &amp;&amp; !activityCreated --task切换 且 Activity未创建</p><p>2）切换task且允许snapshot时，尝试获取type为snapshot(判断isSnapshotCompatible是否满足，是指activity的屏幕方向和截图的屏幕方向是否一致，如果不一致自然不能使用截图作为启动窗口)</p><ul><li>非splash场景、且task切换</li></ul><p>代码层面 SnapshotStartWindow需满足的条件</p><p>taskSwitch &amp;&amp; allowTaskSnapshot – task切换 且 allowTaskSnapshot为true</p><p>allowTaskSnapshot --非浮窗模式 且 newIntents为空才能满足此条件</p><p>类型讲完了，我们继续看看addStartingWindow的后续</p><p>1）如果是snapshot类型，则执行createSnapshot，创建startingwindow窗口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token constant">STARTING_WINDOW_TYPE_SNAPSHOT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isActivityTypeHome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
		<span class="token punctuation">}</span>
	
		<span class="token keyword">return</span> <span class="token function">createSnapshot</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">,</span> typeParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">createSnapshot</span><span class="token punctuation">(</span><span class="token class-name">TaskSnapshot</span> snapshot<span class="token punctuation">,</span> <span class="token keyword">int</span> typeParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>snapshot <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Creating SnapshotStartingData&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mStartingData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SnapshotStartingData</span><span class="token punctuation">(</span>mWmService<span class="token punctuation">,</span> snapshot<span class="token punctuation">,</span> typeParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">forAllLeafTaskFragments</span><span class="token punctuation">(</span><span class="token class-name">TaskFragment</span><span class="token operator">::</span><span class="token function">isEmbedded</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Associate with the task so if this activity is resized by task fragment later, the</span>
            <span class="token comment">// starting window can keep the same bounds as the task.</span>
            <span class="token function">associateStartingDataWithTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">scheduleAddStartingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mStartingData = new SnapshotStartingData(mWmService, snapshot, typeParams);</code><br> 在保存Snapshot的StartingData之后，异步添加启动窗口<code>scheduleAddStartingWindow()</code></p><p>2）创建Splash类型的startingwindow</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mStartingData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SplashScreenStartingData</span><span class="token punctuation">(</span>mWmService<span class="token punctuation">,</span> resolvedTheme<span class="token punctuation">,</span> typeParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">scheduleAddStartingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>同样的在保存SplashScreen的StartingData之后，异步添加启动窗口，这是为了不让启动窗口的绘制阻塞activity的启动</p><p>3）type为none，即不创建startingwindow（此场景常见于应用内的activity切换）</p><p>4.执行scheduleAddStartingWindow()函数，添加startingwindow。它会把消息mAddStartingWindow发送到android.anim线程中处理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">scheduleAddStartingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mAddStartingWindow<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">AddStartingWindow</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Can be accessed without holding the global lock</span>
            <span class="token keyword">final</span> <span class="token class-name">StartingData</span> startingData<span class="token punctuation">;</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mWmService<span class="token punctuation">.</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// There can only be one adding request, silly caller!</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>mStartingData <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Animation has been canceled... do nothing.</span>
                    <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span>
                            <span class="token string">&quot;startingData was nulled out before handling&quot;</span>
                                    <span class="token operator">+</span> <span class="token string">&quot; mAddStartingWindow: %s&quot;</span><span class="token punctuation">,</span> <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                startingData <span class="token operator">=</span> mStartingData<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Add starting %s: startingData=%s&quot;</span><span class="token punctuation">,</span>
                    <span class="token keyword">this</span><span class="token punctuation">,</span> startingData<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">StartingSurfaceController<span class="token punctuation">.</span>StartingSurface</span> surface <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                surface <span class="token operator">=</span> startingData<span class="token punctuation">.</span><span class="token function">createStartingSurface</span><span class="token punctuation">(</span><span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Exception when adding starting window&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>surface <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">boolean</span> abort <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mWmService<span class="token punctuation">.</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If the window was successfully added, then we need to remove it.</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mStartingData <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Aborted starting %s: startingData=%s&quot;</span><span class="token punctuation">,</span>
                                <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> mStartingData<span class="token punctuation">)</span><span class="token punctuation">;</span>

                        mStartingWindow <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        mStartingData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        abort <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        mStartingSurface <span class="token operator">=</span> surface<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>abort<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span>
                                <span class="token string">&quot;Added starting %s: startingWindow=%s startingView=%s&quot;</span><span class="token punctuation">,</span>
                                <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> mStartingWindow<span class="token punctuation">,</span> mStartingSurface<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>abort<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    surface<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token comment">/* prepareAnimation */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Surface returned was null: %s&quot;</span><span class="token punctuation">,</span>
                        <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AddStartingWindow</span> mAddStartingWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AddStartingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mAddStartingWindow是AddStartingWindow创建的对象，其实现了Runnable接口<br> 创建startingwindow<code>surface = startingData.createStartingSurface(ActivityRecord.this);</code><br> 如果当前是splash类型，那么会执行SplashScreenStartingData的createStartingSurface()，创建startingwindow；如果是snapshot类型，则执行SnapshotStartingData的createStartingSurface(),创建startingwindow。（startingData为SplashScreenStartingData和SnapshotStartingData父类，根据前说的获取的类型来创建相应的startingwindow）</p><h3 id="创建splash类型的startingwindow" tabindex="-1"><a class="header-anchor" href="#创建splash类型的startingwindow" aria-hidden="true">#</a> 创建splash类型的startingwindow</h3><p>ActivityRecord.java</p><p>AddStartingWindow复写run方法调用了</p><p>surface = startingData.createStartingSurface(ActivityRecord.this);</p><p>调用链</p><p>SplashScreenStartingData.java#createStartingSurface</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesf77c3d07c10ece86593aa1f8b4e57799.png" alt="在这里插入图片描述"><br> StartingSurfaceController.java#createSplashScreenStartingSurface</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesb05c029f9f0e28b90075d454ec613b59.png" alt="在这里插入图片描述"><br> 通过TaskOrganizerController.java最终调用到wmshell中的StartingWindowController.java的addStartingWindow<br><strong>wmshell流程开始</strong></p><p>StartingWindowController.java</p><p>addStartingWindow</p><p>StartingSurfaceDrawer.java</p><p><strong>addSplashScreenStartingWindow</strong></p><p>1.createContentView</p><p>SplashscreenContentDrawer.java</p><p>createContentView -&gt; makeSplashScreenContentView</p><p>2.addWindow</p><p>调用<code>mWindowManagerGlobal.addView(view, params, display, null /* parentWindow */, context.getUserId());</code><br> 窗口添加流程</p><p>WindowManagerGlobal.java</p><p>addView.java</p><p>ViewRootImpl</p><p>setView -&gt;addToDisplayAsUser</p><p>Session.java</p><p>addToDisplayAsUser</p><p>WindowManagerService.java</p><p>addWindow</p><p>添加启动窗口</p><p>ActivityRecord.java</p><p>attachStartingWindow</p><h3 id="创建snapshot类型的startingwindow" tabindex="-1"><a class="header-anchor" href="#创建snapshot类型的startingwindow" aria-hidden="true">#</a> 创建snapshot类型的startingwindow</h3><p>ActivityRecord.java</p><p>addstartingwindow方法中调用createSnapshot</p><p>mStartingData = new SnapshotStartingData(mWmService, snapshot, typeParams);</p><p>调用链</p><p>SnapshotStartingData.java#createStartingSurface</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images6781868baf411318d85036d45ac9dcba.png" alt="在这里插入图片描述"><br> StartingSurfaceController.java#createTaskSnapshotSurface</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images56b2be9d9caafcab24378fe4e97d12c3.png" alt="在这里插入图片描述"><br> 通过TaskOrganizerController.java最终调用到wmshell中的StartingWindowController.java的addStartingWindow</p><p><strong>wmshell流程开始</strong></p><p>StartingWindowController.java</p><p>addStartingWindow</p><p>StartingSurfaceDrawer.java</p><p>makeTaskSnapshotWindow -&gt; create</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images67c727a22bf6b447144db8ec67acdbca.png" alt="在这里插入图片描述">TaskSnapshotWindow.java</p><p>create</p><p><code>final int res = session.addToDisplay(window, layoutParams, View.GONE, displayId, info.requestedVisibilities, tmpInputChannel, tmpInsetsState, tmpControls);</code></p><p>窗口添加流程</p><p>Session.java</p><p>addToDisplayAsUser</p><p>WindowManagerService.java</p><p>addWindow</p><p>添加启动窗口</p><p>ActivityRecord.java</p><p>attachStartingWindow</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>两种不同类型的启动窗口最终都会调用到StartingWindowController.java的addStartingWindow，只是传入参数不同，后面会根据类型不同调用不同的方法</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images9d3a127f4df34e28b743ae107a07b824.png" alt="在这里插入图片描述"><br> StartingSurfaceDrawer.java中调用不同的方法</p><p>最终都会调用用到ActivityRecord attachStartingWindow</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">void</span> <span class="token function">attachStartingWindow</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">WindowState</span> startingWindow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        startingWindow<span class="token punctuation">.</span>mStartingData <span class="token operator">=</span> mStartingData<span class="token punctuation">;</span>
        mStartingWindow <span class="token operator">=</span> startingWindow<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mStartingData <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mStartingData<span class="token punctuation">.</span>mAssociatedTask <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">attachStartingSurfaceToAssociatedTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="startingwindow的移除" tabindex="-1"><a class="header-anchor" href="#startingwindow的移除" aria-hidden="true">#</a> startingwindow的移除</h2><h3 id="前置流程-1" tabindex="-1"><a class="header-anchor" href="#前置流程-1" aria-hidden="true">#</a> 前置流程</h3><p>1、应用界面绘制完成，ViewRootImpl的finishDrawing(),去通知wms</p><p>ViewRootImpl.java</p><p>reportDrawFinished -&gt; finishDrawing</p><p>关键代码</p><p><code>mWindowSession.finishDrawing(mWindow, mSurfaceChangedTransaction, seqId);</code></p><p>2、wms接收到应用绘制完成的消息后，调用requestTraversal()请求刷新窗口</p><p>WindowManagerService.java</p><p>finishDrawingWindow -&gt; requestTraversal</p><p>关键代码</p><p><code>mWindowPlacerLocked.requestTraversal();</code></p><p>3、窗口刷新过程中，会调用mApplySurfaceChangesTransaction</p><p>WindowSurfacePlacer.java</p><p>requestTraversal()-&gt;performSurfacePlacement()</p><p>关键代码</p><p><code>mService.mAnimationHandler.post(mPerformSurfacePlacement);</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">Traverser</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mService<span class="token punctuation">.</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">performSurfacePlacement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Traverser</span> mPerformSurfacePlacement <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Traverser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>performSurfacePlacement()-&gt;performSurfacePlacementLoop()</p><p>关键代码</p><p><code>mService.mRoot.performSurfacePlacement();</code></p><p>RootWindowContainer.java</p><p>performSurfacePlacement() -&gt; performSurfacePlacementNoTrace() -&gt; applySurfaceChangesTransaction()</p><p>DisplayContent.java</p><p>applySurfaceChangesTransaction()-&gt;commitFinishDrawingLocked()</p><p>关键代码</p><p><code>forAllWindows(mApplySurfaceChangesTransaction, true /* traverseTopToBottom */);</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WindowState</span><span class="token punctuation">&gt;</span></span> mApplySurfaceChangesTransaction <span class="token operator">=</span> w <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token comment">// Moved from updateWindowsAndWallpaperLocked().</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>mHasSurface<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Take care of the window being ready to display.</span>
            <span class="token keyword">final</span> <span class="token keyword">boolean</span> committed <span class="token operator">=</span> winAnimator<span class="token punctuation">.</span><span class="token function">commitFinishDrawingLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、窗口绘制完成后，接着调用winAnimator的commitFinishDrawingLocked(),状态值mDrawState改为READY_TO_SHOW,准备显示</p><p>WindowStateAnimator.java</p><p>commitFinishDrawingLocked() -&gt; performShowLocked()</p><p>关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">boolean</span> <span class="token function">commitFinishDrawingLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        mDrawState <span class="token operator">=</span> <span class="token constant">READY_TO_SHOW</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ActivityRecord</span> activity <span class="token operator">=</span> mWin<span class="token punctuation">.</span>mActivityRecord<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>activity <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> activity<span class="token punctuation">.</span><span class="token function">canShowWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> mWin<span class="token punctuation">.</span>mAttrs<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token constant">TYPE_APPLICATION_STARTING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> mWin<span class="token punctuation">.</span><span class="token function">performShowLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5、如果当前是非startingwindow类型的窗口，则调用函数onFirstWindowDrawn()，开始移除startingwindow窗口。因为这个时候主界面已经绘制完成，不在需要显示startingwindow</p><p>WindowState.java</p><p>performShowLocked() -&gt; onFirstWindowDrawn()</p><p>关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token keyword">boolean</span> <span class="token function">performShowLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> drawState <span class="token operator">=</span> mWinAnimator<span class="token punctuation">.</span>mDrawState<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>drawState <span class="token operator">==</span> <span class="token constant">HAS_DRAWN</span> <span class="token operator">||</span> drawState <span class="token operator">==</span> <span class="token constant">READY_TO_SHOW</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mActivityRecord <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mAttrs<span class="token punctuation">.</span>type <span class="token operator">!=</span> <span class="token constant">TYPE_APPLICATION_STARTING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mActivityRecord<span class="token punctuation">.</span><span class="token function">onFirstWindowDrawn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                mActivityRecord<span class="token punctuation">.</span><span class="token function">onStartingWindowDrawn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        mWinAnimator<span class="token punctuation">.</span>mDrawState <span class="token operator">=</span> <span class="token constant">HAS_DRAWN</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ActivityRecord.java</p><p>onFirstWindowDrawn -&gt; removeStartingWindow，这里开始区分有无退出动画</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images3a6959c76e9d8ff26a179957125f3adb.png" alt="在这里插入图片描述"><br> 如果有startingwindow退出动画则会多走transferSplashScreenIfNeeded的流程，该流程仅限于冷启动</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesc8c81150d055dd0ba05420de026e8ca9.png" alt="在这里插入图片描述"><br> 从代码中可以看出mHandleExitSplashScreen变量决定是否有启动动画，跟踪代码可以发现，该变量的值取决于应用是否设置退出动画<code>splashScreen.setOnExitAnimationListener(this::onSplashScreenExit);</code></p><h3 id="退出动画流程-仅限冷启动" tabindex="-1"><a class="header-anchor" href="#退出动画流程-仅限冷启动" aria-hidden="true">#</a> 退出动画流程（仅限冷启动）</h3><p>以ActivityRecord#removeStartingWindow为起点</p><p>ActivityRecord.java</p><p>removeStartingWindow-&gt;transferSplashScreenIfNeeded-&gt;requestCopySplashScreen</p><p>通过TaskOrganizerController.java最终调用到wmshell中的</p><p>ShellTaskOrganizer.java</p><p>copySplashScreenView</p><p>StartingWindowController.java</p><p>copySplashScreenView</p><p>StartingSurfaceDrawer.java</p><p>copySplashScreenView</p><p>调用<code>ActivityTaskManager.getInstance().onSplashScreenViewCopyFinished(taskId, parcelable);</code>，回到system_server进程</p><p>ActivityTaskManagerService.java</p><p>onSplashScreenViewCopyFinished</p><p>ActivityRecord.java</p><p>onCopySplashScreenFinish</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mAtmService<span class="token punctuation">.</span><span class="token function">getLifecycleManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scheduleTransaction</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">getThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span>
        <span class="token class-name">TransferSplashScreenViewStateItem</span><span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span>parcelable<span class="token punctuation">,</span>
                windowAnimationLeash<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用到应用进程</p><p>TransferSplashScreenViewStateItem.java</p><p>execute</p><p>ActivityThread.java</p><p>handleAttachSplashScreenView-&gt;createSplashScreen-&gt;syncTransferSplashscreenViewTransaction-&gt;reportSplashscreenViewShown</p><p>ActivityClient.java</p><p>reportSplashScreenAttached</p><p>ActivityClientController.java</p><p>splashScreenAttached</p><p>ActivityThread.java</p><p>splashScreenAttachedLocked-&gt;onSplashScreenAttachComplete-&gt;removeStartingWindowAnimation</p><p>继续往下走，移除启动窗口</p><h3 id="无退出动画流程" tabindex="-1"><a class="header-anchor" href="#无退出动画流程" aria-hidden="true">#</a> 无退出动画流程</h3><p>ActivityRecord.java</p><p>removeStartingWindowAnimation-&gt;remove</p><p>StartingSurfaceController.java</p><p>remove-&gt;removeStartingWindow</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesd2eecec8788f0dd05de6a99ea10392ba.png" alt="在这里插入图片描述"></p><p>通过TaskOrganizerController.java最终调用到wmshell中的StartingWindowController.java中removeStartingWindow</p><p>StartingWindowController.java</p><p>removeStartingWindow</p><p>StartingSurfaceDrawer.java</p><p>removeStartingWindow -&gt; removeWindowSynced</p><p>6、在removeWindowSynced()中根据当前的startingwindow的类型，选择移除方式</p><h3 id="splash-screen类型移除" tabindex="-1"><a class="header-anchor" href="#splash-screen类型移除" aria-hidden="true">#</a> splash screen类型移除</h3><p><img src="https://raw.githubusercontent.com/shug666/image/main/images582726e461f45c859d328e074b0cc26b.png" alt="在这里插入图片描述"><br> 移除splash类型的startingwindow</p><p>StartingSurfaceDrawer.java</p><p>removeWindowSynced-&gt;removeWindowInner</p><p>调用<code>mWindowManagerGlobal.removeView(decorView, false /* immediate */);</code>移除</p><p>WindowManagerGlobal.java</p><p>removeView</p><h3 id="snapshot类型移除" tabindex="-1"><a class="header-anchor" href="#snapshot类型移除" aria-hidden="true">#</a> snapshot类型移除</h3><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesa2576e614cb78b4b804ab3c5f41a172c.png" alt="在这里插入图片描述"><br> 移除snapshot类型的startingwindow</p><p>StartingSurfaceDrawer.java</p><p>removeWindowSynced-&gt;scheduleRemove</p><p>TaskSnapshotWindow.java</p><p>scheduleRemove-&gt;removeImmediately</p><p>调用<code>mSession.remove(mWindow);</code>移除</p><p>WindowManagerService.java</p><p>removeWindow</p><h3 id="总结-1" tabindex="-1"><a class="header-anchor" href="#总结-1" aria-hidden="true">#</a> 总结</h3><p>startingwindow有无退出渐变动画（仅限冷启动），依赖mHandleExitSplashScreen值，该值取决于应用是否设置退出动画<code>splashScreen.setOnExitAnimationListener(this::onSplashScreenExit);</code></p><p>两种不同的移除方式最终会从removeWindowSynced方法中选择当前的调用</p><h2 id="startingwindow去除启动大图标" tabindex="-1"><a class="header-anchor" href="#startingwindow去除启动大图标" aria-hidden="true">#</a> startingwindow去除启动大图标</h2><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h3><p>去掉启动窗口的大图标显示，如果应用有定制则保留其启动页面</p><h3 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h3><p>在SplashScreen添加流程中，会通过SplashscreenContentDrawer中调用</p><p>createContentView-&gt; makeSplashScreenContentView创建SplashScreen图，在makeSplashScreenContentView方法中通过getWindowAttrs获取窗口属性</p><h3 id="修改" tabindex="-1"><a class="header-anchor" href="#修改" aria-hidden="true">#</a> 修改</h3><p>添加下面这行代码</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images1c201be724bd223508f34a512d346fe9.png" alt="在这里插入图片描述">通过windowSplashScreenAnimatedIcon属性，来获取当前启动页</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>attrs<span class="token punctuation">.</span>mSplashScreenIcon <span class="token operator">=</span> <span class="token function">safeReturnAttrDefault</span><span class="token punctuation">(</span><span class="token punctuation">(</span>def<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> typedArray<span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>
					<span class="token class-name">R</span><span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>Window_windowSplashScreenAnimatedIcon<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果有定制，则该属性不为空</p><p><code>attrs.mSplashScreenIcon = new ColorDrawable(Color.TRANSPARENT);</code></p><h2 id="学习过程中遇到的问题" tabindex="-1"><a class="header-anchor" href="#学习过程中遇到的问题" aria-hidden="true">#</a> 学习过程中遇到的问题</h2><h3 id="关于启动窗口添加addstartingwindow中线程" tabindex="-1"><a class="header-anchor" href="#关于启动窗口添加addstartingwindow中线程" aria-hidden="true">#</a> 关于启动窗口添加AddStartingWindow中线程</h3><p>在ActivityRecord.java中</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">AddStartingWindow</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Can be accessed without holding the global lock</span>
            <span class="token keyword">final</span> <span class="token class-name">StartingData</span> startingData<span class="token punctuation">;</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mWmService<span class="token punctuation">.</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// There can only be one adding request, silly caller!</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>mStartingData <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Animation has been canceled... do nothing.</span>
                    <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span>
                            <span class="token string">&quot;startingData was nulled out before handling&quot;</span>
                                    <span class="token operator">+</span> <span class="token string">&quot; mAddStartingWindow: %s&quot;</span><span class="token punctuation">,</span> <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                startingData <span class="token operator">=</span> mStartingData<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Add starting %s: startingData=%s&quot;</span><span class="token punctuation">,</span>
                    <span class="token keyword">this</span><span class="token punctuation">,</span> startingData<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">StartingSurfaceController<span class="token punctuation">.</span>StartingSurface</span> surface <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                surface <span class="token operator">=</span> startingData<span class="token punctuation">.</span><span class="token function">createStartingSurface</span><span class="token punctuation">(</span><span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Exception when adding starting window&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>surface <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">boolean</span> abort <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mWmService<span class="token punctuation">.</span>mGlobalLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If the window was successfully added, then we need to remove it.</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mStartingData <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Aborted starting %s: startingData=%s&quot;</span><span class="token punctuation">,</span>
                                <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> mStartingData<span class="token punctuation">)</span><span class="token punctuation">;</span>

                        mStartingWindow <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        mStartingData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        abort <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        mStartingSurface <span class="token operator">=</span> surface<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>abort<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span>
                                <span class="token string">&quot;Added starting %s: startingWindow=%s startingView=%s&quot;</span><span class="token punctuation">,</span>
                                <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> mStartingWindow<span class="token punctuation">,</span> mStartingSurface<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>abort<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    surface<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token comment">/* prepareAnimation */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_STARTING_WINDOW</span><span class="token punctuation">,</span> <span class="token string">&quot;Surface returned was null: %s&quot;</span><span class="token punctuation">,</span>
                        <span class="token class-name">ActivityRecord</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>abort参数代表什么？</p><p>正常情况下，snapshot值，会进来这个地方，证明已经有了可以创建startingwindow中的startingView（代码中变量是startingSurface），等addWindow成功后才会为mStartingWindow 赋值</p><p>WMS中调用attachStartingWindow</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagescfd8f26ebaf47c2419b1942b1d095f31.png" alt="在这里插入图片描述"><br> 该方法在ActivityRecord.java中实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">void</span> <span class="token function">attachStartingWindow</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">WindowState</span> startingWindow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        startingWindow<span class="token punctuation">.</span>mStartingData <span class="token operator">=</span> mStartingData<span class="token punctuation">;</span>
        mStartingWindow <span class="token operator">=</span> startingWindow<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mStartingData <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mStartingData<span class="token punctuation">.</span>mAssociatedTask <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">attachStartingSurfaceToAssociatedTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回到前面<strong>AddStartingWindow的run方法</strong>中<code>synchronized (mWmService.mGlobalLock)</code>可能会出现等锁时间长的异常情况，这时如果mStartingData为空了，就代表添加启动窗口失败，它就要移除前面创建的surface对像，即<code>surface.remove(false /* prepareAnimation */);</code></p><h3 id="移除启动窗口调用差异" tabindex="-1"><a class="header-anchor" href="#移除启动窗口调用差异" aria-hidden="true">#</a> 移除启动窗口调用差异</h3><p><strong>splash screen</strong></p><p><img src="https://raw.githubusercontent.com/shug666/image/main/images791ccd25a73c5e047ab2cd8a476df5c4.png" alt="在这里插入图片描述"><br><strong>snapshot</strong></p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesf6c1c2e3f516585fed290efee2967ce2.png" alt="在这里插入图片描述"><br> splash screen是通过removeView的方式移除，而snapshot是通过removeWindow方式移除</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesa0d0163c14199f8eeeefbbbbb33bebb9.png" alt="在这里插入图片描述"><br> 从代码中可以看出splash screen是通过构建view的方式创建，所以removeView</p><p><img src="https://raw.githubusercontent.com/shug666/image/main/imagesbb8294408837e18b0eec8fd891e40db6.png" alt="在这里插入图片描述"><br> 而这里可以看出snapshot是直接将截图添加到了window中，所以removeWindow</p><h2 id="问题分析处理" tabindex="-1"><a class="header-anchor" href="#问题分析处理" aria-hidden="true">#</a> 问题分析处理</h2><p>1、温启动应用时启动慢/白屏</p><p>应用保活机制影响：APP被后台查杀，发起添加startingwindow的Activity变了，对应的Activity的主题里没有启动窗口配置项，所以默认获取了系统的白屏启动窗口。</p><p>以淘宝为例，温启动场景下淘宝的Welcome activty被重新创建了，当点击应用桌面图标打开淘宝时：Welcome不会再去创建，直接创建了TBMainActivity，新创建的这个activity没有startingwindow相关的配置，所以用了系统默认的startingwindow，因此显示了白屏。<br> 按照谷歌当前的业务逻辑，为温启动强制添加splash screen：个别主界面和启动页界面不一致的保活应用可能会出现温启动白屏现象。getStartingWindowType中修改<br><img src="https://raw.githubusercontent.com/shug666/image/main/images54cf0720a2e5ec2e473febc2576e926e.png" alt="在这里插入图片描述"><br> 添加判断条件如果snapshot 不为空则，把startingwindow改为空，即不显示启动窗口<br><code>if(snapshot != null) return STARTING_WINDOW_TYPE_NONE;</code></p><p>2、startingwindow引起的定屏问题<br> 启动应用过程中添加了startingwindow，应用界面未绘制完成造成startingwindow未移除：<br> 这是因为应用启动出现了异常，可能是应用发生了ANR，或者应用的生命周期未走完。属于应用问题，需要处理。</p><p>3、屏幕解锁后低概率出现短暂黑屏<br> 可以dump activiy看，如果在只有一个main窗口的情况下，mNumInterestingWindows为2，正常应该是1</p><p>在ActivityRecord.updateDrawnWindowStates中判断如果是StartingWindow类型的窗口不加入interestingwindow的统计，现有的 w != mStartingWindow可能拦不住这个，有可能mStaringWindow跟w不是同一个实例，就可能导致StartingWindow类型的窗口被统计进去。这里的mStartringWindow是在启动窗口创建最后调用attachStartingWindow时赋值的。<br><img src="https://i-blog.csdnimg.cn/blog_migrate/84b90d08238d07f37a500797f962f067.png" alt="在这里插入图片描述"><br> 添加启动窗口类型判断<code>w.mAttrs.type != TYPE_APPLICATION_STARTING</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/1305e960c6b5b6b573118cce7bac0529.png" alt="在这里插入图片描述"><br> 4、wmshell crash导致黑屏<br> 根据堆栈打印信息，通过try/catch捕获异常即可。</p>`,283),r={href:"https://blog.csdn.net/yimelancholy/article/details/130232980",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=p("ExternalLinkIcon");return e(),o("div",null,[u,a("p",null,[n("本文转自 "),a("a",r,[n("https://blog.csdn.net/yimelancholy/article/details/130232980"),c(s)]),n("，如有侵权，请联系删除。")])])}const w=t(l,[["render",k],["__file","startingwindowliuchengshuli.html.vue"]]);export{w as default};
