import{_ as e,r as p,o as t,c as o,b as s,d as n,e as c,a as i}from"./app-e8f85126.js";const l={},u=i(`<h2 id="过滤ams启动信息" tabindex="-1"><a class="header-anchor" href="#过滤ams启动信息" aria-hidden="true">#</a> 过滤AMS启动信息</h2><p>最近在帮忙定位一个问题，涉及到某个应用自动启动了，为了确定是谁调用的，使用如下的日志进行查看（注：为了简单考虑，下面的启动者为launcher）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>pre_release<span class="token operator">|</span>✔<span class="token punctuation">)</span> % adb logcat <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&quot;ActivityManager: START&quot;</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>always
I ActivityManager: START u0 <span class="token punctuation">{</span>act<span class="token operator">=</span>android.intent.action.MAIN
<span class="token assign-left variable">cat</span><span class="token operator">=</span><span class="token punctuation">[</span>android.intent.category.<span class="token environment constant">HOME</span><span class="token punctuation">]</span> <span class="token assign-left variable">flg</span><span class="token operator">=</span>0x10000000 <span class="token assign-left variable">hwFlg</span><span class="token operator">=</span>0x10
<span class="token assign-left variable">cmp</span><span class="token operator">=</span>com.huawei.android.launcher/.unihome.UniHomeLauncher <span class="token punctuation">(</span>has extras<span class="token punctuation">)</span><span class="token punctuation">}</span> from uid <span class="token number">10070</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们看最后看到这个<code>from uid 10070</code>，嗯，基本定位到了是这个uid的应用启动了。</p><h2 id="根据uid确认应用" tabindex="-1"><a class="header-anchor" href="#根据uid确认应用" aria-hidden="true">#</a> 根据UID确认应用</h2><h3 id="android调试时查询" tabindex="-1"><a class="header-anchor" href="#android调试时查询" aria-hidden="true">#</a> android调试时查询</h3><ol><li><p>当启动camera的时候，ActivityManager的log如下，uid显示10138</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>02-26 <span class="token number">14</span>:02:32.115 <span class="token number">1965</span> <span class="token number">2066</span> I ActivityManager: START u0 <span class="token punctuation">{</span>act<span class="token operator">=</span>android.media.action.STILL_IMAGE_CAMERA <span class="token assign-left variable">flg</span><span class="token operator">=</span>0x14000000 <span class="token assign-left variable">cmp</span><span class="token operator">=</span>com.android.camera/.Camera<span class="token punctuation">}</span> from uid <span class="token number">10138</span> on display <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>那么10138到底是哪个应用呢，我们可以通过拉取packages.list文件进行查看<code>adb pull /data/system/packages.list</code></p></li><li><p>拉出packages.list文件后查看发现如下<code>com.android.systemui 10138 0 /data/user_de/0/com.android.systemui</code></p><p>所以是systemUI启动的camera。</p></li></ol><h3 id="android代码里获取" tabindex="-1"><a class="header-anchor" href="#android代码里获取" aria-hidden="true">#</a> android代码里获取</h3><ol><li><p><code>int callingUid = Binder.getCallingUid();</code></p></li><li><p><code>String packageName = snapshotComputer().getNameForUid(callingUid);</code></p><p><em>（注：uid是应用的调用id，android的沙盒机制产生的。一般每个应用的uid不一样、也有可能一样比如都是Process.SYSTEM_UID，uid和gid可以从data/user/0/中ls-l 看到）</em></p></li></ol><h2 id="uid的生成" tabindex="-1"><a class="header-anchor" href="#uid的生成" aria-hidden="true">#</a> UID的生成</h2><p>确定uid不能说明问题，我们至少需要确定是哪个应用，我们尝试使用下面的命令过滤进程有关数据</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">10070</span>
没有任何数据输出
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然而一无所获。</p><p>当然前面说了，示例的启动者是launcher，那我们过滤一下launcher</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> launcher
u0_a70        <span class="token number">2207</span>   <span class="token number">620</span> <span class="token number">4979992</span> <span class="token number">156312</span> <span class="token number">0</span>                   <span class="token number">0</span> S com.huawei.android.launcher
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们发现了u0_a70和10070貌似有一些关联（至少都含有70）</p><p>于是我们使用下面的命令确定id</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell <span class="token function">id</span> u0_a70
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">10070</span><span class="token punctuation">(</span>u0_a70<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">10070</span><span class="token punctuation">(</span>u0_a70<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">10070</span><span class="token punctuation">(</span>u0_a70<span class="token punctuation">)</span>, <span class="token assign-left variable">context</span><span class="token operator">=</span>u:r:shell:s0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>果然，u0_a70和10070 是有关联的</p><p>u0_a70 的含义</p><p>u0 默认的手机第一个用户（可以通过设置里面的多用户新增和切换）</p><p>a 代表app</p><p>70 代表着第70个应用</p><p>转换公式</p><p>简单而言，对应的公式是这样</p><p>u0_a70 = “u0_” + “a” + (uid(这里是10070) – FIRST_APPLICATION_UID(固定值10000))</p><p>具体复杂的转换，请参考这段代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * Generate a text representation of the uid, breaking out its individual
     * components -- user, app, isolated, etc.
     * <span class="token keyword">@hide</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">formatUid</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> sb<span class="token punctuation">,</span> <span class="token keyword">int</span> uid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uid <span class="token operator">&lt;</span> <span class="token class-name">Process</span><span class="token punctuation">.</span><span class="token constant">FIRST_APPLICATION_UID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;u&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">getUserId</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> appId <span class="token operator">=</span> <span class="token function">getAppId</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isIsolated</span><span class="token punctuation">(</span>appId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>appId <span class="token operator">&gt;</span> <span class="token class-name">Process</span><span class="token punctuation">.</span><span class="token constant">FIRST_ISOLATED_UID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>appId <span class="token operator">-</span> <span class="token class-name">Process</span><span class="token punctuation">.</span><span class="token constant">FIRST_ISOLATED_UID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;ai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>appId <span class="token operator">-</span> <span class="token class-name">Process</span><span class="token punctuation">.</span><span class="token constant">FIRST_APP_ZYGOTE_ISOLATED_UID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>appId <span class="token operator">&gt;=</span> <span class="token class-name">Process</span><span class="token punctuation">.</span><span class="token constant">FIRST_APPLICATION_UID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>appId <span class="token operator">-</span> <span class="token class-name">Process</span><span class="token punctuation">.</span><span class="token constant">FIRST_APPLICATION_UID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>appId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部分常量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token doc-comment comment">/**
     * Defines the start of a range of UIDs (and GIDs), going from this
     * number to <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">LAST_APPLICATION_UID</span></span><span class="token punctuation">}</span> that are reserved for assigning
     * to applications.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">FIRST_APPLICATION_UID</span> <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * Last of application-specific UIDs starting at
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">FIRST_APPLICATION_UID</span></span><span class="token punctuation">}</span>.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">LAST_APPLICATION_UID</span> <span class="token operator">=</span> <span class="token number">19999</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * First uid used for fully isolated sandboxed processes (with no permissions of their own)
     * <span class="token keyword">@hide</span>
     */</span>
    <span class="token annotation punctuation">@UnsupportedAppUsage</span>
    <span class="token annotation punctuation">@TestApi</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">FIRST_ISOLATED_UID</span> <span class="token operator">=</span> <span class="token number">99000</span><span class="token punctuation">;</span>
     <span class="token doc-comment comment">/**
     * First uid used for fully isolated sandboxed processes spawned from an app zygote
     * <span class="token keyword">@hide</span>
     */</span>
    <span class="token annotation punctuation">@TestApi</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">FIRST_APP_ZYGOTE_ISOLATED_UID</span> <span class="token operator">=</span> <span class="token number">90000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),d={href:"https://www.jianshu.com/p/be03b2e1b979",target:"_blank",rel:"noopener noreferrer"};function r(k,v){const a=p("ExternalLinkIcon");return t(),o("div",null,[u,s("p",null,[n("本文转自 "),s("a",d,[n("https://www.jianshu.com/p/be03b2e1b979"),c(a)]),n("，如有侵权，请联系删除。")])])}const b=e(l,[["render",r],["__file","Activityyoushuiqidong_genjuUIDquedingyingyong.html.vue"]]);export{b as default};
