import{_ as e,r as i,o as t,c as l,b as a,d as n,e as o,a as p}from"./app-f541e591.js";const c={},r=p(`<p>makefile文件控制整个工程的编译规则，比如指定需要生成哪些目标文件，指明生成这些目标文件依赖哪些源文件，指明生成的目标文件放在哪个文件夹下等等。而make就是一个命令工具，可以解析makefile文件中的指令的一个命令工具。</p><p>android.mk也是一样的功能，只不过它是android编译环境下的一种特殊的“makefile”文件, 它是经过了android编译系统处理的。android.mk文件最终还是要被android编译系统层层解析，转化为make命令能够读懂的格式，从而调用gcc编译器进行编译。</p><h2 id="_1、-在-android-mk里打印信息" tabindex="-1"><a class="header-anchor" href="#_1、-在-android-mk里打印信息" aria-hidden="true">#</a> 1、 在 Android.mk里打印信息：</h2><div class="language-makefile line-numbers-mode" data-ext="makefile"><pre class="language-makefile"><code><span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">info</span> string<span class="token punctuation">)</span> <span class="token comment">#1.打印正常输入信息</span>

<span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">warning</span> string<span class="token punctuation">)</span> <span class="token comment">#2.打印警告信息</span>

<span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">error</span> string<span class="token punctuation">)</span> <span class="token comment">#3.打印错误信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>以上三种打印方式使用的注意事项：</strong></p><ol><li><p>各个打印方式的string里都可以带上变量；</p></li><li><p>如果遇到error打印，将会停止编译进程。</p></li><li><p>的打印带有 warning 标志，info 打印不带有任何标志。</p></li></ol><h2 id="_2、-举例说明各个打印函数的方法" tabindex="-1"><a class="header-anchor" href="#_2、-举例说明各个打印函数的方法" aria-hidden="true">#</a> 2、 举例说明各个打印函数的方法</h2><p>以下以packages/apps/Music/Android.mk为例，内容如下：</p><div class="language-makefile line-numbers-mode" data-ext="makefile"><pre class="language-makefile"><code>LOCAL_PATH<span class="token operator">:=</span> <span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">call</span> my-dir<span class="token punctuation">)</span>

<span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">warning</span> <span class="token string">&quot;Warning Just for Test LOCAL_PATH is $(LOCAL_PATH)&quot;</span><span class="token punctuation">)</span>
<span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">info</span> <span class="token string">&quot;Info Just for Test LOCAL_PATH is $(LOCAL_PATH)&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">include</span> <span class="token variable">$</span><span class="token punctuation">(</span>CLEAR_VARS<span class="token punctuation">)</span> LOCAL_MODULE_TAGS <span class="token operator">:=</span> optional
LOCAL_SRC_FILES <span class="token operator">:=</span> <span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">call</span> all-java-files-under, src<span class="token punctuation">)</span> \\
src/com/android/music/IMediaPlaybackService.aidl
LOCAL_PACKAGE_NAME <span class="token operator">:=</span> Music
LOCAL_SDK_VERSION <span class="token operator">:=</span> current
LOCAL_CERTIFICATE <span class="token operator">:=</span> platform
LOCAL_PROGUARD_FLAG_FILES <span class="token operator">:=</span> proguard.flags

<span class="token keyword">include</span> <span class="token variable">$</span><span class="token punctuation">(</span>BUILD_PACKAGE<span class="token punctuation">)</span>

<span class="token comment"># Use the folloing include to make our test apk.</span>

<span class="token keyword">include</span> <span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">call</span> all-makefiles-under,<span class="token variable">$</span><span class="token punctuation">(</span>LOCAL_PATH<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),d={href:"https://blog.csdn.net/weixin_44008788/article/details/127575769",target:"_blank",rel:"noopener noreferrer"};function u(k,m){const s=i("ExternalLinkIcon");return t(),l("div",null,[r,a("p",null,[n("本文转自 "),a("a",d,[n("https://blog.csdn.net/weixin_44008788/article/details/127575769"),o(s)]),n("，如有侵权，请联系删除。")])])}const _=e(c,[["render",u],["__file","Android-mkdayinshuchufangfa.html.vue"]]);export{_ as default};
