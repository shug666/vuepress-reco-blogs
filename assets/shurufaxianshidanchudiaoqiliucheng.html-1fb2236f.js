import{_ as p,r as e,o,c,b as n,d as s,e as t,a as i}from"./app-e8f85126.js";const u={},l=i(`<p>Android输入法显示方式大概分为两种：用户手动点击输入框和应用程序设置了输入法自动显示 ，本文基于Android9.x来分析</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><h3 id="_1-viewclicked流程" tabindex="-1"><a class="header-anchor" href="#_1-viewclicked流程" aria-hidden="true">#</a> 1 :viewClicked流程</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>   1.1 viewClicked
   1.2 checkFocus
   1.3 startInputInner
   1.4 startInputOrWindowGainedFocus
   1.5 startInputLocked
   1.6 startInputUncheckedLocked
   1.7 attachNewInputLocked
   1.7.1 处理返回的结果
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-showsoftinput流程" tabindex="-1"><a class="header-anchor" href="#_2-showsoftinput流程" aria-hidden="true">#</a> 2:showSoftInput流程</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>   2.1 showSoftInput
   2.2 IMMS#showSoftInput
   2.3 showCurrentInputLocked
   2.4 IMS$InputMethodImpl$showSoftInput
   2.5 dispatchOnShowInputRequested
   2.6 IMS$showWindow
   2.7 showWindowInner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-从用户点击输入框开始" tabindex="-1"><a class="header-anchor" href="#_2-从用户点击输入框开始" aria-hidden="true">#</a> 2:从用户点击输入框开始</h2><p>EditText本身是TextView的子类，触摸事件的起点在TextView的onTouchEvent方法中</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span>touchIsFinished <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">isTextEditable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> textIsSelectable<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Show the IME, except when selecting in read-only text.</span>
                <span class="token keyword">final</span> <span class="token class-name">InputMethodManager</span> imm <span class="token operator">=</span> <span class="token class-name">InputMethodManager</span><span class="token punctuation">.</span><span class="token function">peekInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">viewClicked</span><span class="token punctuation">(</span>imm<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTextEditable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mEditor<span class="token punctuation">.</span>mShowSoftInputOnFocus <span class="token operator">&amp;&amp;</span> imm <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    imm<span class="token punctuation">.</span><span class="token function">showSoftInput</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// The above condition ensures that the mEditor is not null</span>
                mEditor<span class="token punctuation">.</span><span class="token function">onTouchUpEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
                handled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-viewclicked" tabindex="-1"><a class="header-anchor" href="#_2-1-viewclicked" aria-hidden="true">#</a> 2.1:viewClicked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">viewClicked</span><span class="token punctuation">(</span><span class="token class-name">InputMethodManager</span> imm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>imm <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            imm<span class="token punctuation">.</span><span class="token function">viewClicked</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-inputmethodmanager-viewclicked" tabindex="-1"><a class="header-anchor" href="#_2-2-inputmethodmanager-viewclicked" aria-hidden="true">#</a> 2:2:InputMethodManager::viewClicked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">viewClicked</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> focusChanged <span class="token operator">=</span> mServedView <span class="token operator">!=</span> mNextServedView<span class="token punctuation">;</span>
        <span class="token function">checkFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mH<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mServedView <span class="token operator">!=</span> view <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mServedView <span class="token operator">==</span> <span class="token keyword">null</span>
                    <span class="token operator">||</span> <span class="token operator">!</span>mServedView<span class="token punctuation">.</span><span class="token function">checkInputConnectionProxy</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">||</span> mCurrentTextBoxAttribute <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> mCurMethod <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onViewClicked: &quot;</span> <span class="token operator">+</span> focusChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
                mCurMethod<span class="token punctuation">.</span><span class="token function">viewClicked</span><span class="token punctuation">(</span>focusChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;IME died: &quot;</span> <span class="token operator">+</span> mCurId<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mCurMethod代表的是一个binder代理对象，对应的是<br> IInputMethodSessionWrapper</p><h3 id="_2-3-iinputmethodsessionwrapper-viewclicked" tabindex="-1"><a class="header-anchor" href="#_2-3-iinputmethodsessionwrapper-viewclicked" aria-hidden="true">#</a> 2.3:IInputMethodSessionWrapper::viewClicked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">viewClicked</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> focusChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mCaller<span class="token punctuation">.</span><span class="token function">executeOrSendMessage</span><span class="token punctuation">(</span>
                mCaller<span class="token punctuation">.</span><span class="token function">obtainMessageI</span><span class="token punctuation">(</span><span class="token constant">DO_VIEW_CLICKED</span><span class="token punctuation">,</span> focusChanged <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token keyword">case</span> <span class="token constant">DO_VIEW_CLICKED</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                mInputMethodSession<span class="token punctuation">.</span><span class="token function">viewClicked</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>arg1 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>InputMethodSession对应的是一个接口，其实现类为AbstractInputMethodSessionImpl，AbstractInputMethodSessionImpl本身是一个抽象类，InputMethodSessionImpl有继承它，所以最终调用的是InputMethodSessionImpl的viewClicked</p><h3 id="_2-4-inputmethodsessionimpl-viewclicked" tabindex="-1"><a class="header-anchor" href="#_2-4-inputmethodsessionimpl-viewclicked" aria-hidden="true">#</a> 2.4::InputMethodSessionImpl::viewClicked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">viewClicked</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> focusChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">InputMethodService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onViewClicked</span><span class="token punctuation">(</span>focusChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-inputmethodservice-onviewclicked" tabindex="-1"><a class="header-anchor" href="#_2-5-inputmethodservice-onviewclicked" aria-hidden="true">#</a> 2.5:InputMethodService::onViewClicked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onViewClicked</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> focusChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Intentionally empty</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-textview-checkfocus" tabindex="-1"><a class="header-anchor" href="#_2-6-textview-checkfocus" aria-hidden="true">#</a> 2.6:TextView::checkFocus</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkFocusNoStartInput</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">startInputInner</span><span class="token punctuation">(</span><span class="token class-name">InputMethodClient</span><span class="token punctuation">.</span><span class="token constant">START_INPUT_REASON_CHECK_FOCUS</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-7-startinputinner" tabindex="-1"><a class="header-anchor" href="#_2-7-startinputinner" aria-hidden="true">#</a> 2.7:startInputInner</h3><p>这个方法主要是和输入法服务建立连接以及绑定</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;START INPUT: view=&quot;</span> <span class="token operator">+</span> <span class="token function">dumpViewInfo</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ic=&quot;</span>
                        <span class="token operator">+</span> ic <span class="token operator">+</span> <span class="token string">&quot; tba=&quot;</span> <span class="token operator">+</span> tba <span class="token operator">+</span> <span class="token string">&quot; controlFlags=#&quot;</span>
                        <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>controlFlags<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token class-name">InputBindResult</span> res <span class="token operator">=</span> mService<span class="token punctuation">.</span><span class="token function">startInputOrWindowGainedFocus</span><span class="token punctuation">(</span>
                        startInputReason<span class="token punctuation">,</span> mClient<span class="token punctuation">,</span> windowGainingFocus<span class="token punctuation">,</span> controlFlags<span class="token punctuation">,</span> softInputMode<span class="token punctuation">,</span>
                        windowFlags<span class="token punctuation">,</span> tba<span class="token punctuation">,</span> servedContext<span class="token punctuation">,</span> missingMethodFlags<span class="token punctuation">,</span>
                        view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>targetSdkVersion<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Starting input: Bind result=&quot;</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">wtf</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;startInputOrWindowGainedFocus must not return&quot;</span>
                            <span class="token operator">+</span> <span class="token string">&quot; null. startInputReason=&quot;</span>
                            <span class="token operator">+</span> <span class="token class-name">InputMethodClient</span><span class="token punctuation">.</span><span class="token function">getStartInputReason</span><span class="token punctuation">(</span>startInputReason<span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">&quot; editorInfo=&quot;</span> <span class="token operator">+</span> tba
                            <span class="token operator">+</span> <span class="token string">&quot; controlFlags=#&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>controlFlags<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>id <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setInputChannelLocked</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mBindSequence <span class="token operator">=</span> res<span class="token punctuation">.</span>sequence<span class="token punctuation">;</span>
                    mCurMethod <span class="token operator">=</span> res<span class="token punctuation">.</span>method<span class="token punctuation">;</span>
                    mCurId <span class="token operator">=</span> res<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
                    mNextUserActionNotificationSequenceNumber <span class="token operator">=</span>
                            res<span class="token punctuation">.</span>userActionNotificationSequenceNumber<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>channel <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>channel <span class="token operator">!=</span> mCurChannel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    res<span class="token punctuation">.</span>channel<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token class-name">InputBindResult<span class="token punctuation">.</span>ResultCode</span><span class="token punctuation">.</span><span class="token constant">ERROR_NOT_IME_TARGET_WINDOW</span><span class="token operator">:</span>
                        mRestartOnNextWindowFocus <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurMethod <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mCompletions <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        mCurMethod<span class="token punctuation">.</span><span class="token function">displayCompletions</span><span class="token punctuation">(</span>mCompletions<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;IME died: &quot;</span> <span class="token operator">+</span> mCurId<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mService表示的是Imms在客户端的代理对象</p><h3 id="_2-8-imms-startinputorwindowgainedfocus" tabindex="-1"><a class="header-anchor" href="#_2-8-imms-startinputorwindowgainedfocus" aria-hidden="true">#</a> 2.8:IMMS::startInputOrWindowGainedFocus</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token keyword">final</span> <span class="token class-name">InputBindResult</span> result<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>windowToken <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token function">windowGainedFocus</span><span class="token punctuation">(</span>startInputReason<span class="token punctuation">,</span> client<span class="token punctuation">,</span> windowToken<span class="token punctuation">,</span> controlFlags<span class="token punctuation">,</span>
                    softInputMode<span class="token punctuation">,</span> windowFlags<span class="token punctuation">,</span> attribute<span class="token punctuation">,</span> inputContext<span class="token punctuation">,</span> missingMethods<span class="token punctuation">,</span>
                    unverifiedTargetSdkVersion<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token function">startInput</span><span class="token punctuation">(</span>startInputReason<span class="token punctuation">,</span> client<span class="token punctuation">,</span> inputContext<span class="token punctuation">,</span> missingMethods<span class="token punctuation">,</span> attribute<span class="token punctuation">,</span>
                    controlFlags<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// This must never happen, but just in case.</span>
            <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">wtf</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;InputBindResult is @NonNull. startInputReason=&quot;</span>
                    <span class="token operator">+</span> <span class="token class-name">InputMethodClient</span><span class="token punctuation">.</span><span class="token function">getStartInputReason</span><span class="token punctuation">(</span>startInputReason<span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&quot; windowFlags=#&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>windowFlags<span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&quot; editorInfo=&quot;</span> <span class="token operator">+</span> attribute<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">InputBindResult</span><span class="token punctuation">.</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>windowToken这个地方不为null，代码逻辑执行的是windowToken</p><h3 id="_2-9-windowgainedfocus" tabindex="-1"><a class="header-anchor" href="#_2-9-windowgainedfocus" aria-hidden="true">#</a> 2.9:windowGainedFocus</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>             <span class="token class-name">ClientState</span> cs <span class="token operator">=</span> mClients<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">asBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token comment">//在窗口添加的时候会创建一个会话session,在会话创建的时候添加的</span>
             <span class="token comment">//   if (mService.mInputMethodManager != null) {</span>
            <span class="token comment">//     mService.mInputMethodManager.addClient(client, inputContext,</span>
             <span class="token comment">//    mUid, mPid);</span>
            <span class="token comment">//Session.java的构造方法中</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                client<span class="token punctuation">.</span><span class="token function">setUsingInputMethod</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>cs <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-&gt;</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;unknown client &quot;</span>
                            <span class="token operator">+</span> client<span class="token punctuation">.</span><span class="token function">asBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mIWindowManager<span class="token punctuation">.</span><span class="token function">inputMethodClientHasFocus</span><span class="token punctuation">(</span>cs<span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token class-name">InputBindResult</span><span class="token punctuation">.</span><span class="token constant">NOT_IME_TARGET_WINDOW</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>calledFromValidUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">hideCurrentInputLocked</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token class-name">InputBindResult</span><span class="token punctuation">.</span><span class="token constant">INVALID_USER</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurFocusedWindow <span class="token operator">==</span> windowToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>attribute <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">startInputUncheckedLocked</span><span class="token punctuation">(</span>cs<span class="token punctuation">,</span> inputContext<span class="token punctuation">,</span> missingMethods<span class="token punctuation">,</span>
                                attribute<span class="token punctuation">,</span> controlFlags<span class="token punctuation">,</span> startInputReason<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InputBindResult</span><span class="token punctuation">(</span>
                            <span class="token class-name">InputBindResult<span class="token punctuation">.</span>ResultCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS_REPORT_WINDOW_FOCUS_ONLY</span><span class="token punctuation">,</span>
                            <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-10-startinputuncheckedlocked" tabindex="-1"><a class="header-anchor" href="#_2-10-startinputuncheckedlocked" aria-hidden="true">#</a> 2.10:startInputUncheckedLocked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurId <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mCurId<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>mCurMethodId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cs<span class="token punctuation">.</span>curSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">attachNewInputLocked</span><span class="token punctuation">(</span>startInputReason<span class="token punctuation">,</span>
<span class="token punctuation">(</span>controlFlags<span class="token operator">&amp;</span><span class="token class-name">InputMethodManager</span><span class="token punctuation">.</span><span class="token constant">CONTROL_START_INITIAL</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mHaveConnection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurMethod <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">requestClientSessionLocked</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InputBindResult</span><span class="token punctuation">(</span>                <span class="token class-name">InputBindResult<span class="token punctuation">.</span>ResultCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS_WAITING_IME_SESSION</span><span class="token punctuation">,</span>
                            <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> mCurId<span class="token punctuation">,</span> mCurSeq<span class="token punctuation">,</span>
                            mCurUserActionNotificationSequenceNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token operator">&lt;</span> <span class="token punctuation">(</span>mLastBindTime<span class="token operator">+</span><span class="token constant">TIME_TO_RECONNECT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InputBindResult</span><span class="token punctuation">(</span>                      <span class="token class-name">InputBindResult<span class="token punctuation">.</span>ResultCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS_WAITING_IME_BINDING</span><span class="token punctuation">,</span>
                            <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> mCurId<span class="token punctuation">,</span> mCurSeq<span class="token punctuation">,</span>
                            mCurUserActionNotificationSequenceNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token class-name">EventLog</span><span class="token punctuation">.</span><span class="token function">writeEvent</span><span class="token punctuation">(</span><span class="token class-name">EventLogTags</span><span class="token punctuation">.</span><span class="token constant">IMF_FORCE_RECONNECT_IME</span><span class="token punctuation">,</span>
                            mCurMethodId<span class="token punctuation">,</span> <span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>mLastBindTime<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">startInputInnerLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-11-attachnewinputlocked" tabindex="-1"><a class="header-anchor" href="#_2-11-attachnewinputlocked" aria-hidden="true">#</a> 2.11:attachNewInputLocked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">final</span> <span class="token class-name">SessionState</span> session <span class="token operator">=</span> mCurClient<span class="token punctuation">.</span>curSession<span class="token punctuation">;</span>
        <span class="token function">executeOrSendMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span>method<span class="token punctuation">,</span> mCaller<span class="token punctuation">.</span><span class="token function">obtainMessageIIOOOO</span><span class="token punctuation">(</span>
                <span class="token constant">MSG_START_INPUT</span><span class="token punctuation">,</span> mCurInputContextMissingMethods<span class="token punctuation">,</span> initial <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token comment">/* restarting */</span><span class="token punctuation">,</span>
                startInputToken<span class="token punctuation">,</span> session<span class="token punctuation">,</span> mCurInputContext<span class="token punctuation">,</span> mCurAttribute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mShowRequested<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-&gt;</span>此时mShowRequested为<span class="token boolean">false</span>
            <span class="token function">showCurrentInputLocked</span><span class="token punctuation">(</span><span class="token function">getAppShowFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InputBindResult</span><span class="token punctuation">(</span><span class="token class-name">InputBindResult<span class="token punctuation">.</span>ResultCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS_WITH_IME_SESSION</span><span class="token punctuation">,</span>
                session<span class="token punctuation">.</span>session<span class="token punctuation">,</span> <span class="token punctuation">(</span>session<span class="token punctuation">.</span>channel <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> session<span class="token punctuation">.</span>channel<span class="token punctuation">.</span><span class="token function">dup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                mCurId<span class="token punctuation">,</span> mCurSeq<span class="token punctuation">,</span> mCurUserActionNotificationSequenceNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一部分主要是应用程序app和输入法服务IMMS建立连接</p><h2 id="_3-应用程序请求输入法显示" tabindex="-1"><a class="header-anchor" href="#_3-应用程序请求输入法显示" aria-hidden="true">#</a> 3:应用程序请求输入法显示</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span>touchIsFinished <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">isTextEditable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> textIsSelectable<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Show the IME, except when selecting in read-only text.</span>
                <span class="token keyword">final</span> <span class="token class-name">InputMethodManager</span> imm <span class="token operator">=</span> <span class="token class-name">InputMethodManager</span><span class="token punctuation">.</span><span class="token function">peekInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">viewClicked</span><span class="token punctuation">(</span>imm<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTextEditable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mEditor<span class="token punctuation">.</span>mShowSoftInputOnFocus <span class="token operator">&amp;&amp;</span> imm <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    imm<span class="token punctuation">.</span><span class="token function">showSoftInput</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// The above condition ensures that the mEditor is not null</span>
                mEditor<span class="token punctuation">.</span><span class="token function">onTouchUpEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
                handled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-showsoftinput" tabindex="-1"><a class="header-anchor" href="#_3-1-showsoftinput" aria-hidden="true">#</a> 3.1:showSoftInput</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">showSoftInput</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token class-name">ResultReceiver</span> resultReceiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mH<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mServedView <span class="token operator">!=</span> view <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mServedView <span class="token operator">==</span> <span class="token keyword">null</span>
                    <span class="token operator">||</span> <span class="token operator">!</span>mServedView<span class="token punctuation">.</span><span class="token function">checkInputConnectionProxy</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> mService<span class="token punctuation">.</span><span class="token function">showSoftInput</span><span class="token punctuation">(</span>mClient<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> resultReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">&gt;</span>请求输入法服务来显示showSoftInput
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> e<span class="token punctuation">.</span><span class="token function">rethrowFromSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-imms-showsoftinput" tabindex="-1"><a class="header-anchor" href="#_3-2-imms-showsoftinput" aria-hidden="true">#</a> 3:2:IMMS::showSoftInput</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mMethodMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurClient <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> client <span class="token operator">==</span> <span class="token keyword">null</span>
                        <span class="token operator">||</span> mCurClient<span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">asBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> client<span class="token punctuation">.</span><span class="token function">asBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mIWindowManager<span class="token punctuation">.</span><span class="token function">inputMethodClientHasFocus</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token function">showCurrentInputLocked</span><span class="token punctuation">(</span>flags<span class="token punctuation">,</span> resultReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">Binder</span><span class="token punctuation">.</span><span class="token function">restoreCallingIdentity</span><span class="token punctuation">(</span>ident<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-showcurrentinputlocked" tabindex="-1"><a class="header-anchor" href="#_3-3-showcurrentinputlocked" aria-hidden="true">#</a> 3:3:showCurrentInputLocked</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">boolean</span> res <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurMethod <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">executeOrSendMessage</span><span class="token punctuation">(</span>mCurMethod<span class="token punctuation">,</span> mCaller<span class="token punctuation">.</span><span class="token function">obtainMessageIOO</span><span class="token punctuation">(</span>
                    <span class="token constant">MSG_SHOW_SOFT_INPUT</span><span class="token punctuation">,</span> <span class="token function">getImeShowFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mCurMethod<span class="token punctuation">,</span>
                    resultReceiver<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mInputShown <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mHaveConnection <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mVisibleBound<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">bindCurrentInputMethodServiceLocked</span><span class="token punctuation">(</span>
                        mCurIntent<span class="token punctuation">,</span> mVisibleConnection<span class="token punctuation">,</span> <span class="token constant">IME_VISIBLE_BIND_FLAGS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                mVisibleBound <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            res <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mHaveConnection <span class="token operator">&amp;&amp;</span> <span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>mLastBindTime<span class="token operator">+</span><span class="token constant">TIME_TO_RECONNECT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token class-name">EventLog</span><span class="token punctuation">.</span><span class="token function">writeEvent</span><span class="token punctuation">(</span><span class="token class-name">EventLogTags</span><span class="token punctuation">.</span><span class="token constant">IMF_FORCE_RECONNECT_IME</span><span class="token punctuation">,</span> mCurMethodId<span class="token punctuation">,</span>
                    <span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>mLastBindTime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Force disconnect/connect to the IME in showCurrentInputLocked()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mContext<span class="token punctuation">.</span><span class="token function">unbindService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">bindCurrentInputMethodServiceLocked</span><span class="token punctuation">(</span>mCurIntent<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">IME_CONNECTION_BIND_FLAGS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-msg-show-soft-input消息处理" tabindex="-1"><a class="header-anchor" href="#_3-4-msg-show-soft-input消息处理" aria-hidden="true">#</a> 3.4::MSG_SHOW_SOFT_INPUT消息处理</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token keyword">case</span> <span class="token constant">MSG_SHOW_SOFT_INPUT</span><span class="token operator">:</span>
                args <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SomeArgs</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token class-name">Slog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Calling &quot;</span> <span class="token operator">+</span> args<span class="token punctuation">.</span>arg1 <span class="token operator">+</span> <span class="token string">&quot;.showSoftInput(&quot;</span>
                            <span class="token operator">+</span> msg<span class="token punctuation">.</span>arg1 <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> args<span class="token punctuation">.</span>arg2 <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">IInputMethod</span><span class="token punctuation">)</span>args<span class="token punctuation">.</span>arg1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">showSoftInput</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>arg1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">ResultReceiver</span><span class="token punctuation">)</span>args<span class="token punctuation">.</span>arg2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
                args<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>((IInputMethod)args.arg1)代表的是arg2</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Message</span> <span class="token function">obtainMessageIOO</span><span class="token punctuation">(</span><span class="token keyword">int</span> what<span class="token punctuation">,</span> <span class="token keyword">int</span> arg1<span class="token punctuation">,</span> <span class="token class-name">Object</span> arg2<span class="token punctuation">,</span> <span class="token class-name">Object</span> arg3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SomeArgs</span> args <span class="token operator">=</span> <span class="token class-name">SomeArgs</span><span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> arg2<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> arg3<span class="token punctuation">;</span>
        <span class="token keyword">return</span> mH<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span>what<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>arg2代表是IInputMethod mCurMethod;是一个binder代理对象，表示的是输入法在IMMS的代理对象，通过这个对象我们可以访问输入法进程里面的方法</p><h3 id="_3-5-iinputmethodwrapper-showsoftinput" tabindex="-1"><a class="header-anchor" href="#_3-5-iinputmethodwrapper-showsoftinput" aria-hidden="true">#</a> 3.5:IInputMethodWrapper::showSoftInput</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showSoftInput</span><span class="token punctuation">(</span><span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token class-name">ResultReceiver</span> resultReceiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
mCaller<span class="token punctuation">.</span><span class="token function">executeOrSendMessage</span><span class="token punctuation">(</span>mCaller<span class="token punctuation">.</span><span class="token function">obtainMessageIO</span><span class="token punctuation">(</span><span class="token constant">DO_SHOW_SOFT_INPUT</span><span class="token punctuation">,</span>
                flags<span class="token punctuation">,</span> resultReceiver<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token comment">//最终调用的是inputMethod的showSoftInput，inputMethod是InputMethod,InputMethod是一个接口，需要找到其实现类</span>
    <span class="token keyword">case</span> <span class="token constant">DO_SHOW_SOFT_INPUT</span><span class="token operator">:</span>
       inputMethod<span class="token punctuation">.</span><span class="token function">showSoftInput</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>arg1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">ResultReceiver</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-inputmethodservic-inputmethodimpl-java" tabindex="-1"><a class="header-anchor" href="#_3-6-inputmethodservic-inputmethodimpl-java" aria-hidden="true">#</a> 3.6:InputMethodServic.InputMethodImpl.java</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showSoftInput</span><span class="token punctuation">(</span><span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token class-name">ResultReceiver</span> resultReceiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> wasVis <span class="token operator">=</span> <span class="token function">isInputViewShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dispatchOnShowInputRequested</span><span class="token punctuation">(</span>flags<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token function">showWindow</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">&gt;</span>显示输入法窗口
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BadTokenException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token function">clearInsetOfPreviousIme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mImm<span class="token punctuation">.</span><span class="token function">setImeWindowStatus</span><span class="token punctuation">(</span>mToken<span class="token punctuation">,</span> mStartInputToken<span class="token punctuation">,</span>
                    <span class="token function">mapToImeWindowStatus</span><span class="token punctuation">(</span><span class="token function">isInputViewShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mBackDisposition<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>resultReceiver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                resultReceiver<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>wasVis <span class="token operator">!=</span> <span class="token function">isInputViewShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token operator">?</span> <span class="token class-name">InputMethodManager</span><span class="token punctuation">.</span><span class="token constant">RESULT_SHOWN</span>
                        <span class="token operator">:</span> <span class="token punctuation">(</span>wasVis <span class="token operator">?</span> <span class="token class-name">InputMethodManager</span><span class="token punctuation">.</span><span class="token constant">RESULT_UNCHANGED_SHOWN</span>
                                <span class="token operator">:</span> <span class="token class-name">InputMethodManager</span><span class="token punctuation">.</span><span class="token constant">RESULT_UNCHANGED_HIDDEN</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>InputMethodService是输入法服务，工作在输入法应用的进程中</p><h3 id="_3-7-showwindow" tabindex="-1"><a class="header-anchor" href="#_3-7-showwindow" aria-hidden="true">#</a> 3.7:showWindow</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mWindowWasVisible <span class="token operator">=</span> mWindowVisible<span class="token punctuation">;</span>
            mInShowWindow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">showWindowInner</span><span class="token punctuation">(</span>showInput<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BadTokenException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mWindowVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            mWindowAdded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// TODO: Is it OK to set true when we get BadTokenException?</span>
            mWindowWasVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            mInShowWindow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-8-showwindowinner" tabindex="-1"><a class="header-anchor" href="#_3-8-showwindowinner" aria-hidden="true">#</a> 3.8:showWindowInner</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">void</span> <span class="token function">showWindowInner</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> showInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> doShowInput <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> previousImeWindowStatus <span class="token operator">=</span>
                <span class="token punctuation">(</span>mWindowVisible <span class="token operator">?</span> <span class="token constant">IME_ACTIVE</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token function">isInputViewShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token constant">IME_VISIBLE</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mWindowVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mShowInputRequested <span class="token operator">&amp;&amp;</span> mInputStarted <span class="token operator">&amp;&amp;</span> showInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            doShowInput <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            mShowInputRequested <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">updateFullscreenMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">updateInputViewShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mWindowAdded <span class="token operator">||</span> <span class="token operator">!</span>mWindowCreated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mWindowAdded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            mWindowCreated <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">View</span> v <span class="token operator">=</span> <span class="token function">onCreateCandidatesView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setCandidatesView</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mShowInputRequested<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mInputViewStarted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;CALL: onStartInputView&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                mInputViewStarted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token function">onStartInputView</span><span class="token punctuation">(</span>mInputEditorInfo<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mCandidatesViewStarted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;CALL: onStartCandidatesView&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCandidatesViewStarted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">onStartCandidatesView</span><span class="token punctuation">(</span>mInputEditorInfo<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>doShowInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">startExtractingText</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> nextImeWindowStatus <span class="token operator">=</span> <span class="token function">mapToImeWindowStatus</span><span class="token punctuation">(</span><span class="token function">isInputViewShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>previousImeWindowStatus <span class="token operator">!=</span> nextImeWindowStatus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mImm<span class="token punctuation">.</span><span class="token function">setImeWindowStatus</span><span class="token punctuation">(</span>mToken<span class="token punctuation">,</span> mStartInputToken<span class="token punctuation">,</span> nextImeWindowStatus<span class="token punctuation">,</span>
                    mBackDisposition<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>previousImeWindowStatus <span class="token operator">&amp;</span> <span class="token constant">IME_ACTIVE</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;showWindow: showing!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">onWindowShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mWindow<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">&gt;</span>输入法窗口是一个对话框
            mShouldClearInsetOfPreviousIme <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终输入法窗口被显示出来</p>`,60),k={href:"https://www.jianshu.com/p/730a290e4144",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.jianshu.com/p/126e6c43f150",target:"_blank",rel:"noopener noreferrer"};function d(v,m){const a=e("ExternalLinkIcon");return o(),c("div",null,[l,n("p",null,[n("a",k,[s("Android输入法IMMS服务启动流程(2)(systemRunning)"),t(a)])]),n("p",null,[s("本文转自 "),n("a",r,[s("https://www.jianshu.com/p/126e6c43f150"),t(a)]),s("，如有侵权，请联系删除。")])])}const w=p(u,[["render",d],["__file","shurufaxianshidanchudiaoqiliucheng.html.vue"]]);export{w as default};
