import{_ as e,r as o,o as t,c as l,b as s,d as n,e as p,a as c}from"./app-e8f85126.js";const r={},i=c(`<p>我们在做Android APP开发时，多多少少需要打印Log，伴随着Log的打印就有一个打印开关是否允许打印Log，本文要讲的就是这个打印开关Log.isLoggable的使用和源码解析。</p><h3 id="debug方法比较" tabindex="-1"><a class="header-anchor" href="#debug方法比较" aria-hidden="true">#</a> <strong>DEBUG方法比较</strong></h3><p>当我们在做APP开发时，需要设置调试开关打印Log，下面我列举出3种方法：</p><ul><li>方法一：直接赋值</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token constant">DEBUG</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方法二：设置BuildConfig.DEBUG的值</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token constant">DEBUG</span> <span class="token operator">=</span> <span class="token class-name">BuildConfig</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span>；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>方法三：设置Log.isLoggable的值</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token constant">DEBUG</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span>；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然这里可能还有很多别的设置方法，由于个人局限就没有写了。下面我们来看看上面3种方法各自的特点：</p><ul><li><p>方法一比较直观明了，可以清楚的知道是否允许打印Log。</p></li><li><p>方法二和编译模式绑定，如果是release版的就不会打印Log，如果是debug版的话就会打印Log。</p></li><li><p>方法三通过设置property属性来打印Log</p></li></ul><p>从他们的特点来看我们知道，第一种和第二种方法我们至少需要编译两个版本的软件用于发布和调试。</p><p>第三种方法我们只需要编译一个版本既可以。在我们需要查看Log的时候，通过设置property即可查看Log。下面来详细介绍下Log.isLoggable的使用。</p><h3 id="log-isloggable的使用姿势" tabindex="-1"><a class="header-anchor" href="#log-isloggable的使用姿势" aria-hidden="true">#</a> <strong>Log.isLoggable的使用姿势</strong></h3><ul><li>步骤一：</li></ul><p>MainActivity.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TAG</span> <span class="token operator">=</span> <span class="token string">&quot;Main&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token constant">DEBUG</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onCreate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>步骤二：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell setprop log.tag.Main D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者<br> 修改/data/local.prop文件(该方法不一定有效，根据不同的系统，可能不会去读取local.prop文件)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">log.tag.Main</span><span class="token operator">=</span>D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注：这里的TAG要加上log.tag.做前缀</p><ul><li>步骤三：</li></ul><p>退出APP，重新进入，即可打印Log（注：这里之所以要退出APP是因为我们定义的DEBUG是全局的，所以需要重新赋值）。</p><p>当然你们也可以设置成局部变量，这样就不需要重新进入了,这样就可以免除第三步。</p><h3 id="log-isloggable实战" tabindex="-1"><a class="header-anchor" href="#log-isloggable实战" aria-hidden="true">#</a> <strong>Log.isLoggable实战</strong></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token keyword">implements</span> <span class="token class-name">OnClickListener</span> <span class="token punctuation">{</span>

    <span class="token comment">//各个Log级别定义的值，级别越高值越大</span>
    <span class="token comment">/*
        public static final int VERBOSE = 2;
        public static final int DEBUG = 3;
        public static final int INFO = 4;
        public static final int WARN = 5;
        public static final int ERROR = 6;
        public static final int ASSERT = 7;
    */</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TAG</span> <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//定义全局的Log开关</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">VERBOSE</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">VERBOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">DEBUG</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">INFO</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">WARN</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">WARN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">ERROR</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">ASSERT</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">ASSERT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">SUPPRESS</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_verbose<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 更新loggable值
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//局部的Log开关</span>
        <span class="token constant">VERBOSE</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">VERBOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">DEBUG</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">INFO</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">WARN</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">WARN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">ERROR</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">ASSERT</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token constant">ASSERT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">SUPPRESS</span> <span class="token operator">=</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_verbose<span class="token operator">:</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;------------------start------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">VERBOSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;verbose log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;debug log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">INFO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;info log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">WARN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;warn log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">ERROR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;error log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">ASSERT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;assert log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">SUPPRESS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;suppress log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;------------------end------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码我们已经将所有的Log开关都定义了，并设置了相应的打印信息。下面我们来看下其相关的打印日志。<br> 1.没有做任何操作时的Log</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">06.436</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">06.436</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> info log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">06.436</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> warn log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">06.436</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> error log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">06.436</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">assert</span> log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">06.436</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.设置adb shell setprop log.tag.Hello V</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.102</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.102</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> verbose log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.102</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> debug log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.102</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> info log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.102</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> warn log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.102</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> error log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.102</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">assert</span> log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">49.103</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.设置adb shell setprop log.tag.Hello D</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">39</span><span class="token operator">:</span><span class="token number">42.593</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">39</span><span class="token operator">:</span><span class="token number">42.593</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> debug log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">39</span><span class="token operator">:</span><span class="token number">42.593</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> info log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">39</span><span class="token operator">:</span><span class="token number">42.593</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> warn log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">39</span><span class="token operator">:</span><span class="token number">42.593</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> error log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">39</span><span class="token operator">:</span><span class="token number">42.593</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">assert</span> log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">39</span><span class="token operator">:</span><span class="token number">42.593</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.设置adb shell setprop log.tag.Hello I</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">21.949</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">21.949</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> info log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">21.949</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> warn log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">21.949</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> error log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">21.949</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">assert</span> log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">21.949</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.设置adb shell setprop log.tag.Hello W</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">26.370</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">26.370</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> warn log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">26.370</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> error log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">26.370</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">assert</span> log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">26.370</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6.设置adb shell setprop log.tag.Hello E</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">58.954</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">58.954</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> error log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">58.954</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">assert</span> log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">58.954</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7.设置adb shell setprop log.tag.Hello A</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">42</span><span class="token operator">:</span><span class="token number">56.747</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">42</span><span class="token operator">:</span><span class="token number">56.748</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">assert</span> log
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">42</span><span class="token operator">:</span><span class="token number">56.748</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>8.设置adb shell setprop log.tag.Hello S</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">46.563</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>start<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token number">06</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">46.563</span><span class="token operator">:</span> <span class="token class-name">D</span><span class="token operator">/</span><span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token number">2651</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>end<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上面的Log信息可以分析到，我们通过adb shell setprop设置相应的级别和代码中Log.isLoggable设置的级别比较，当Log.isLoggable设置的级别大于或等于setprop设置的级别时，Log开关即打开，就可以打印Log了。同时，我们设置的S级别的Log，怎么样都不会打印Log。我们没有setprop任何Log级别时，默认打印的是设置Info级别的Log，从这里我们也可以知道，在实际代码Log开关定义中，最好设置成DEBUG级别，这样就可以通过setprop来设置是否需要打印Log。</p><h3 id="frameworks中的模块使用log-isloggable" tabindex="-1"><a class="header-anchor" href="#frameworks中的模块使用log-isloggable" aria-hidden="true">#</a> <strong>frameworks中的模块使用Log.isLoggable</strong></h3><p>当APP使用Log.isLoggable并定义为全局变量时，我们可以setprop后重启app打印相关的Log。那frameworks中如果有Log.isLoggable要怎么打印呢？只需要执行下面3步即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell setprop log.tag.<span class="token operator">&lt;</span>TAG<span class="token operator">&gt;</span> D
adb shell stop
adb shell start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>adb shell stop会杀掉zygote进程以及所有由zygote孵化而来的子进程。adb shell start则会重启zygote进程，再由zygote进程启动其它Android核心进程。当zygote重新启动时，会重新加载framework相关资源，而此时属性已经设置。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> <strong>总结</strong></h3><p>通过上面的实战分析，我们在做Log开关的时候，采用Log.isLoggable的方式，最好使用DEBUG级别这样我们就可以控制Log的打印了。同时,需要注意的是setprop设置Log级别的方法是一次性的，即如果机器重启后，就不会生效了。如果要想永久生效，就可以把属性值写入prop文件中。</p><h3 id="log-isloggable源码分析" tabindex="-1"><a class="header-anchor" href="#log-isloggable源码分析" aria-hidden="true">#</a> <strong>Log.isLoggable源码分析</strong></h3><p>首先，来看看Log.java中isLoggable的实现。通过源码我们可以知道isLoggable是一个JNI方法是通过CPP实现的。但是这里也有比较详细的注释。如果英文比较好的同学可以看下英文注解，这里就不细说了，直接看CPP源码。</p><p>frameworks/base/core/java/android/util/Log.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Priority constant for the println method; use Log.v.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">VERBOSE</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Priority constant for the println method; use Log.d.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEBUG</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Priority constant for the println method; use Log.i.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">INFO</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Priority constant for the println method; use Log.w.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">WARN</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Priority constant for the println method; use Log.e.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ERROR</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Priority constant for the println method.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ASSERT</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Checks to see whether or not a log for the specified tag is loggable at the specified level.
     *
     *  The default level of any tag is set to INFO. This means that any level above and including
     *  INFO will be logged. Before you make any calls to a logging method you should check to see
     *  if your tag should be logged. You can change the default level by setting a system property:
     *      &#39;setprop log.tag.<span class="token entity named-entity" title="&lt;">&amp;lt;</span>YOUR_LOG_TAG&gt; <span class="token entity named-entity" title="&lt;">&amp;lt;</span>LEVEL&gt;&#39;
     *  Where level is either VERBOSE, DEBUG, INFO, WARN, ERROR, ASSERT, or SUPPRESS. SUPPRESS will
     *  turn off all logging for your tag. You can also create a local.prop file that with the
     *  following in it:
     *      &#39;log.tag.<span class="token entity named-entity" title="&lt;">&amp;lt;</span>YOUR_LOG_TAG&gt;=<span class="token entity named-entity" title="&lt;">&amp;lt;</span>LEVEL&gt;&#39;
     *  and place that in /data/local.prop.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">tag</span> The tag to check.
     * <span class="token keyword">@param</span> <span class="token parameter">level</span> The level to check.
     * <span class="token keyword">@return</span> Whether or not that this is allowed to be logged.
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> is thrown if the tag.length() &gt; 23.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isLoggable</span><span class="token punctuation">(</span><span class="token class-name">String</span> tag<span class="token punctuation">,</span> <span class="token keyword">int</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>frameworks/rs/rsCompatibilityLib.h</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PROPERTY_KEY_MAX</span> <span class="token expression"><span class="token number">32</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>frameworks/base/core/jni/android_util_Log.cpp</p><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="language-c++"><code>#define LOG_NAMESPACE &quot;log.tag.&quot;

/*
 * JNI registration.
 */
static JNINativeMethod gMethods[] = {
    /* name, signature, funcPtr */
    { &quot;isLoggable&quot;,      &quot;(Ljava/lang/String;I)Z&quot;, (void*) android_util_Log_isLoggable },
    { &quot;println_native&quot;,  &quot;(IILjava/lang/String;Ljava/lang/String;)I&quot;, (void*) android_util_Log_println_native },
};

struct levels_t {
    jint verbose;
    jint debug;
    jint info;
    jint warn;
    jint error;
    jint assert;
};
static levels_t levels;

static int toLevel(const char* value)
{
    //根据首字符的值设置相应的log级别，注意首字符要大写
    switch (value[0]) {
        case &#39;V&#39;: return levels.verbose;
        case &#39;D&#39;: return levels.debug;
        case &#39;I&#39;: return levels.info;
        case &#39;W&#39;: return levels.warn;
        case &#39;E&#39;: return levels.error;
        case &#39;A&#39;: return levels.assert;
        case &#39;S&#39;: return -1; // SUPPRESS
    }

    //如果都没有配备到上面的字符，就返回一个默认的info级别
    return levels.info;
}

static jboolean isLoggable(const char* tag, jint level) {
    String8 key;
    //将log.tag.&lt;tag&gt;连接起来成一个字符串
    key.append(LOG_NAMESPACE);
    key.append(tag);

    char buf[PROPERTY_VALUE_MAX];
    //获取这个字符串属性的值，如果没有获取到值就给其赋空值
    if (property_get(key.string(), buf, &quot;&quot;) &lt;= 0) {
        buf[0] = &#39;\\0&#39;;
    }

    int logLevel = toLevel(buf);
    //这个里可以看出，代码设置的级别不小于通过属性获取的级别就会返回true了。
    return logLevel &gt;= 0 &amp;&amp; level &gt;= logLevel;
}

static jboolean android_util_Log_isLoggable(JNIEnv* env, jobject clazz, jstring tag, jint level)
{
    if (tag == NULL) {
        return false;
    }

    const char* chars = env-&gt;GetStringUTFChars(tag, NULL);
    if (!chars) {
        return false;
    }

    jboolean result = false;
    //判断log.tag.&lt;tag&gt;的长度是否大于32，如果大于32就报异常，所以我们给tag设置字符串的时候不要过长
    if ((strlen(chars)+sizeof(LOG_NAMESPACE)) &gt; PROPERTY_KEY_MAX) {
        char buf2[200];
        snprintf(buf2, sizeof(buf2), &quot;Log tag \\&quot;%s\\&quot; exceeds limit of %zu characters\\n&quot;,
                chars, PROPERTY_KEY_MAX - sizeof(LOG_NAMESPACE));

        jniThrowException(env, &quot;java/lang/IllegalArgumentException&quot;, buf2);
    } else {
        //真正处理逻辑的地方
        result = isLoggable(chars, level);
    }

    env-&gt;ReleaseStringUTFChars(tag, chars);
    return result;
}

int register_android_util_Log(JNIEnv* env)
{
    jclass clazz = env-&gt;FindClass(&quot;android/util/Log&quot;);

    if (clazz == NULL) {
        ALOGE(&quot;Can&#39;t find android/util/Log&quot;);
        return -1;
    }

    //通过反射获取Log.java上对应的值
    levels.verbose = env-&gt;GetStaticIntField(clazz, env-&gt;GetStaticFieldID(clazz, &quot;VERBOSE&quot;, &quot;I&quot;));
    levels.debug = env-&gt;GetStaticIntField(clazz, env-&gt;GetStaticFieldID(clazz, &quot;DEBUG&quot;, &quot;I&quot;));
    levels.info = env-&gt;GetStaticIntField(clazz, env-&gt;GetStaticFieldID(clazz, &quot;INFO&quot;, &quot;I&quot;));
    levels.warn = env-&gt;GetStaticIntField(clazz, env-&gt;GetStaticFieldID(clazz, &quot;WARN&quot;, &quot;I&quot;));
    levels.error = env-&gt;GetStaticIntField(clazz, env-&gt;GetStaticFieldID(clazz, &quot;ERROR&quot;, &quot;I&quot;));
    levels.assert = env-&gt;GetStaticIntField(clazz, env-&gt;GetStaticFieldID(clazz, &quot;ASSERT&quot;, &quot;I&quot;));

    return AndroidRuntime::registerNativeMethods(env, &quot;android/util/Log&quot;, gMethods, NELEM(gMethods));
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我已列出了重点部分的注解，相信大部分朋友都能看懂。它最重要的部分就是static jboolean isLoggable(const char* tag, jint level)这个函数了。这个函数里面会去获取与tag相关property的Log级别，并与代码设置的Log级别比较返回相应的true还是false。</p><h3 id="property的加载源码分析" tabindex="-1"><a class="header-anchor" href="#property的加载源码分析" aria-hidden="true">#</a> <strong>property的加载源码分析</strong></h3><p>下面重点分析下property_get方法获取对应的属性值时，我们可以设置property值的方法。</p><p>一种方法是adb shell setprop，这种方法灵活方便，但是生命周期有限，机器设备重启即无效。</p><p>另一种方法就是将属性写入prop文件中，这种方法就可以永久生效。下面我们通过源码来分析下这种方法都有哪些prop文件可以写入。</p><p>bionic/libc/include/sys/_system_properties.h</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PROP_PATH_RAMDISK_DEFAULT</span>  <span class="token string">&quot;/default.prop&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PROP_PATH_SYSTEM_BUILD</span>     <span class="token string">&quot;/system/build.prop&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PROP_PATH_SYSTEM_DEFAULT</span>   <span class="token string">&quot;/system/default.prop&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PROP_PATH_VENDOR_BUILD</span>     <span class="token string">&quot;/vendor/build.prop&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PROP_PATH_LOCAL_OVERRIDE</span>   <span class="token string">&quot;/data/local.prop&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PROP_PATH_FACTORY</span>          <span class="token string">&quot;/factory/factory.prop&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Android系统在加载init.rc文件后会去解析各个prop文件。</p><p>system/core/init/property_service.c</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">load_all_props</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//加载/system/build.prop属性文件</span>
    <span class="token function">load_properties_from_file</span><span class="token punctuation">(</span>PROP_PATH_SYSTEM_BUILD<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//加载/system/default.prop属性文件</span>
    <span class="token function">load_properties_from_file</span><span class="token punctuation">(</span>PROP_PATH_SYSTEM_DEFAULT<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//加载/vendor/build.prop属性文件</span>
    <span class="token function">load_properties_from_file</span><span class="token punctuation">(</span>PROP_PATH_VENDOR_BUILD<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//加载/factory/factory.prop属性文件</span>
    <span class="token function">load_properties_from_file</span><span class="token punctuation">(</span>PROP_PATH_FACTORY<span class="token punctuation">,</span> <span class="token string">&quot;ro.*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//加载/data/local.prop属性文件</span>
    <span class="token function">load_override_properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/* Read persistent properties after all default values have been loaded. */</span>
    <span class="token function">load_persistent_properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">load_override_properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">ALLOW_LOCAL_PROP_OVERRIDE</span></span>
    <span class="token keyword">char</span> debuggable<span class="token punctuation">[</span>PROP_VALUE_MAX<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>

    ret <span class="token operator">=</span> <span class="token function">property_get</span><span class="token punctuation">(</span><span class="token string">&quot;ro.debuggable&quot;</span><span class="token punctuation">,</span> debuggable<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//加载/data/local.prop属性文件有两个判断条件。1.定义了ALLOW_LOCAL_PROP_OVERRIDE，2.ro.debuggable=1</span>
    <span class="token comment">//只有满足这两个条件才会去加载/data/local.prop属性文件</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>debuggable<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">load_properties_from_file</span><span class="token punctuation">(</span>PROP_PATH_LOCAL_OVERRIDE<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* ALLOW_LOCAL_PROP_OVERRIDE */</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上面的源码我们知道系统会去加载各个prop文件，但通常上面加载的prop文件不一定全部都有，但是/system/build.prop一定会有。同时，如果我们去改/data/local.prop文件不一定会生效，因为系统不一定会去加载这个文件。因为它有两个判断条件需要满足，当然这只是我从5.1的系统分析，不同的系统会有差别。以实际系统为准。</p><h3 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> <strong>参考文章</strong></h3>`,70),k={href:"http://blog.csdn.net/yihongyuelan/article/details/46409389",target:"_blank",rel:"noopener noreferrer"},u={href:"http://blog.csdn.net/yihongyuelan/article/details/46413207",target:"_blank",rel:"noopener noreferrer"},d={href:"https://my.oschina.net/youranhongcha/blog/389640",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/QQxiaoqiang1573/article/details/72870825",target:"_blank",rel:"noopener noreferrer"};function v(b,g){const a=o("ExternalLinkIcon");return t(),l("div",null,[i,s("p",null,[s("a",k,[n("Android 5.0 如何正确启用isLoggable(一)__使用详解"),p(a)])]),s("p",null,[s("a",u,[n("Android 5.0 如何正确启用isLoggable(二)__原理分析"),p(a)])]),s("p",null,[s("a",d,[n("深入讲解Android Property机制"),p(a)])]),s("p",null,[n("本文转自 "),s("a",m,[n("https://blog.csdn.net/QQxiaoqiang1573/article/details/72870825"),p(a)]),n("，如有侵权，请联系删除。")])])}const L=e(r,[["render",v],["__file","Log-isLoggablezhengquedeshiyongzishi.html.vue"]]);export{L as default};
