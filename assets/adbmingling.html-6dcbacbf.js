import{_ as t,r as i,o as l,c as r,b as a,d as s,e,a as d}from"./app-e8f85126.js";const p={},c=d(`<h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><h3 id="连接指定的ip地址-端口" tabindex="-1"><a class="header-anchor" href="#连接指定的ip地址-端口" aria-hidden="true">#</a> 连接指定的IP地址（端口）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb connect <span class="token operator">&lt;</span>host<span class="token operator">&gt;</span><span class="token punctuation">[</span>:<span class="token operator">&lt;</span>port<span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看当前连接设备" tabindex="-1"><a class="header-anchor" href="#查看当前连接设备" aria-hidden="true">#</a> 查看当前连接设备：</h3><ul><li>查看当前连接设备：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb devices
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果发现多个设备：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb <span class="token parameter variable">-s</span> 设备号 其他指令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>断开连接</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb disconnect <span class="token punctuation">[</span><span class="token operator">&lt;</span>host<span class="token operator">&gt;</span><span class="token punctuation">[</span>:<span class="token operator">&lt;</span>port<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装apk文件" tabindex="-1"><a class="header-anchor" href="#安装apk文件" aria-hidden="true">#</a> 安装apk文件：</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb <span class="token function">install</span> xxx.apk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>此安装方式，如果已经存在，无法安装； 推荐使用<strong>覆盖安装：</strong></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb install -r xxx.apk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="卸载app" tabindex="-1"><a class="header-anchor" href="#卸载app" aria-hidden="true">#</a> 卸载App:</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb uninstall com.zhy.app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果想要保留数据，则：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb uninstall -k com.zhy.app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="传递文件" tabindex="-1"><a class="header-anchor" href="#传递文件" aria-hidden="true">#</a> 传递文件：</h3><ul><li>往手机SDCard传递文件：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb push 文件名 手机端SDCard路径

例如：adb push 帅照.jpg  /sdcard/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从手机端下载文件：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb pull /sdcard/xxx.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看日志" tabindex="-1"><a class="header-anchor" href="#查看日志" aria-hidden="true">#</a> 查看日志</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>logcat <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>filterspecs<span class="token punctuation">]</span>
options:
	<span class="token parameter variable">-s</span>				设置输出日志的标签, 只显示该标签的日志<span class="token punctuation">;</span>
	<span class="token parameter variable">-f</span>	<span class="token operator">&lt;</span>filename<span class="token operator">&gt;</span>	将日志输出到文件, 默认输出到标准输出流中<span class="token punctuation">;</span>
	<span class="token parameter variable">-r</span>	<span class="token punctuation">[</span><span class="token operator">&lt;</span>kbytes<span class="token operator">&gt;</span><span class="token punctuation">]</span>	按照每千字节输出日志, 需要 <span class="token parameter variable">-f</span> 参数<span class="token punctuation">;</span>
	<span class="token parameter variable">-n</span>	<span class="token operator">&lt;</span>count<span class="token operator">&gt;</span>		设置日志输出的最大数目, 需要 <span class="token parameter variable">-r</span> 参数<span class="token punctuation">;</span>
	<span class="token parameter variable">-v</span>	<span class="token operator">&lt;</span>format<span class="token operator">&gt;</span>	设置日志的输出格式, 注意只能设置一项<span class="token punctuation">;</span>
	<span class="token parameter variable">-c</span>				清空所有的日志缓存信息<span class="token punctuation">;</span>
	<span class="token parameter variable">-d</span>				将缓存的日志输出到屏幕上并退出, 并且不会阻塞<span class="token punctuation">;</span>
	<span class="token parameter variable">-t</span>	<span class="token operator">&lt;</span>count<span class="token operator">&gt;</span>		输出最近的几行日志, 输出完退出, 不阻塞<span class="token punctuation">;</span>
	<span class="token parameter variable">-g</span>				查看日志缓冲区信息<span class="token punctuation">;</span>
	<span class="token parameter variable">-b</span>	<span class="token operator">&lt;</span>buffer<span class="token operator">&gt;</span>	加载一个日志缓冲区, 默认是 main<span class="token punctuation">;</span>
	<span class="token parameter variable">-B</span>				以二进制形式输出日志<span class="token punctuation">;</span>
	
filterspecs:
	<span class="token operator">&lt;</span>tag<span class="token operator">&gt;</span><span class="token punctuation">[</span>:priority<span class="token punctuation">]</span>  标签:日志等级, 默认的日志过滤项是 *:I <span class="token punctuation">;</span>
    V 	<span class="token builtin class-name">:</span> 	Verbose <span class="token punctuation">(</span>明细<span class="token punctuation">)</span><span class="token punctuation">;</span>
    D 	<span class="token builtin class-name">:</span>	Debug <span class="token punctuation">(</span>调试<span class="token punctuation">)</span><span class="token punctuation">;</span>
    I 	<span class="token builtin class-name">:</span> 	Info <span class="token punctuation">(</span>信息<span class="token punctuation">)</span><span class="token punctuation">;</span>
    W 	<span class="token builtin class-name">:</span> 	Warn <span class="token punctuation">(</span>警告<span class="token punctuation">)</span><span class="token punctuation">;</span>
    E 	<span class="token builtin class-name">:</span> 	Error <span class="token punctuation">(</span>错误<span class="token punctuation">)</span><span class="token punctuation">;</span>
    F 	<span class="token builtin class-name">:</span> 	Fatal <span class="token punctuation">(</span>严重错误<span class="token punctuation">)</span><span class="token punctuation">;</span>
    S 	<span class="token builtin class-name">:</span> 	Silent<span class="token punctuation">(</span>Super all output<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pm命令" tabindex="-1"><a class="header-anchor" href="#pm命令" aria-hidden="true">#</a> pm命令</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm list packages：显示所有已经安装的apk包名
pm list packages -f：显示所有已安装的apk包名及相应的apk的路径
pm install apk名称：安装 apk  此命令需要先将文件拷贝到设备的/data/local/tmp/下再进行安装
pm install -r apk 名称：强制安装，安装过的会覆盖
pm uninstall 包名：卸载apk
pm path 包名：通过包名反查apk所在路径
pm clear com.example.packagename 注：该命令清除掉APP的缓存，还能把APP的数据给清空。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="am命令" tabindex="-1"><a class="header-anchor" href="#am命令" aria-hidden="true">#</a> am命令</h3><p>命令列表：</p><table><thead><tr><th>命令</th><th>功能</th><th>实现方法</th></tr></thead><tbody><tr><td>am start [options]</td><td>启动Activity</td><td>startActivityAsUser</td></tr><tr><td>am startservice</td><td>启动Service</td><td>startService</td></tr><tr><td>am stopservice</td><td>停止Service</td><td>stopService</td></tr><tr><td>am broadcast</td><td>发送广播</td><td>broadcastIntent</td></tr><tr><td>am restart</td><td>重启</td><td>restart</td></tr><tr><td>am dumpheap [pid] [file]</td><td>进程pid的堆信息输出到file</td><td>dumpheap</td></tr><tr><td>am send-trim-memory [pid] [level]</td><td>收紧进程的内存</td><td>setProcessMemoryTrimLevel</td></tr><tr><td>am kill [PACKAGE]</td><td>杀指定后台进程</td><td>killBackgroundProcesses</td></tr><tr><td>am kill-all</td><td>杀所有后台进程</td><td>killAllBackgroundProcesses</td></tr><tr><td>am force-stop [PACKAGE]</td><td>强杀进程</td><td>forceStopPackage</td></tr><tr><td>am hang</td><td>系统卡住</td><td>hang</td></tr><tr><td>am monitor</td><td>监控</td><td>MyActivityController.run</td></tr></tbody></table><h3 id="intent" tabindex="-1"><a class="header-anchor" href="#intent" aria-hidden="true">#</a> Intent</h3><p>Intent的参数和flags较多，为了方便，这里分为3种类型参数，常用参数，Extra参数，Flags参数</p><h4 id="常用参数" tabindex="-1"><a class="header-anchor" href="#常用参数" aria-hidden="true">#</a> 常用参数</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>-a <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ACTION</span><span class="token punctuation">&gt;</span></span>: 指定Intent action， 实现原理Intent.setAction()；
-n <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>COMPONENT</span><span class="token punctuation">&gt;</span></span>: 指定组件名，格式为{包名}/.{主Activity名}，实现原理Intent.setComponent(）；
-d <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DATA_URI</span><span class="token punctuation">&gt;</span></span>: 指定Intent data URI
-t <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MIME_TYPE</span><span class="token punctuation">&gt;</span></span>: 指定Intent MIME Type
-c <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CATEGORY</span><span class="token punctuation">&gt;</span></span> [-c <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CATEGORY</span><span class="token punctuation">&gt;</span></span>] ...]:指定Intent category，实现原理Intent.addCategory()
-p <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PACKAGE</span><span class="token punctuation">&gt;</span></span>: 指定包名，实现原理Intent.setPackage();
-f <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FLAGS</span><span class="token punctuation">&gt;</span></span>: 添加flags，实现原理Intent.setFlags(int )，紧接着的参数必须是int型；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>am start <span class="token parameter variable">-a</span> android.intent.action.VIEW
am start <span class="token parameter variable">-n</span> mobi.infolife.ezweather.locker.locker_2/.LockerActivity
am start <span class="token parameter variable">-d</span> content://contacts/people/1
am start <span class="token parameter variable">-t</span> image/png
am start <span class="token parameter variable">-c</span> android.intent.category.APP_CONTACTS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="extra参数" tabindex="-1"><a class="header-anchor" href="#extra参数" aria-hidden="true">#</a> Extra参数</h4><p><strong>(1). 基本类型</strong></p><table><thead><tr><th>参数</th><th>-e/-es</th><th>-esn</th><th>-ez</th><th>-ei</th><th>-el</th><th>-ef</th><th>-eu</th></tr></thead><tbody><tr><td>类型</td><td>String</td><td>(String)</td><td>boolean</td><td>int</td><td>long</td><td>float</td><td>uri</td></tr></tbody></table><p>参数es是Extra String首字母简称，实例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>am start <span class="token parameter variable">-n</span> com.cnr.tlive/.MainActivity <span class="token parameter variable">-es</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>(2). 数组类型</strong></p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">-esa</th><th style="text-align:center;">-eia</th><th style="text-align:center;">-ela</th><th style="text-align:center;">-efa</th></tr></thead><tbody><tr><td style="text-align:center;">数组类型</td><td style="text-align:center;">String[]</td><td style="text-align:center;">int[]</td><td style="text-align:center;">long[]</td><td style="text-align:center;">float[]</td></tr></tbody></table><p>参数eia，是Extra int array首字母简称，多个value值之间以逗号隔开，实例：</p><div class="language-undefined line-numbers-mode" data-ext="undefined"><pre class="language-undefined"><code>am start -n com.cnr.tlive/com.cnr.tlive.activity.MainActivity -ela day 1,2,3,4,5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>(3). ArrayList类型</strong></p><table><thead><tr><th>参数</th><th>-esal</th><th>-eial</th><th>-elal</th><th>-efal</th></tr></thead><tbody><tr><td>List类型</td><td>String</td><td>int</td><td>long</td><td>float</td></tr></tbody></table><p>参数efal，是Extra float Array List首字母简称，多个value值之间以逗号隔开，实例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>am start <span class="token parameter variable">-n</span> com.cnr.tlive.activity.MainActivity <span class="token parameter variable">-efal</span> nums <span class="token number">1.2</span>,2.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>am start 包名/完整Activity路径
如果启动带有参数，则使用**-e**标签，比如有一个SecondActivity，需要传入一个agrus_name参数，如：
am start com.example.crime/com.example.crime.SecondActivity <span class="token parameter variable">-e</span> argus_name QiuShui

am start <span class="token parameter variable">-a</span> android.intent.action.VIEW <span class="token parameter variable">-d</span> http://www.baidu.com：打开百度网页

am boardcast <span class="token parameter variable">-a</span> com.smz.myboardcast	发送一个广播（-a表示动作）
am broadcast <span class="token parameter variable">-a</span> <span class="token string">&quot;broadcastactionfilter&quot;</span> <span class="token parameter variable">-e</span> name zhy  带参

am startservice com.ctv.newfactorytest/.FactoryTestService：启动一个服务
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>启动带的参数一般是Key-value形式，这里的key是argus_name,Value是QiuShui.</li><li>除了默认启动的activity外，打开其他的activity时，需要在清单文件中添加<strong>android:exported=&quot;true&quot;属性。</strong></li><li>要启动一个隐式的Intent，也就是说需要传入action等参数，在ADB调试桥中可以得知Intent的参数规范，比如**-a<strong>表示</strong>action**,<strong>-c</strong>表示<strong>category</strong>,<strong>-d</strong>表示<strong>data_uri</strong>, <strong>-e</strong>表示添加额外Key-Value信息。</li></ul></blockquote><p><strong>service list</strong>来查看dumpsys能提供查询信息的服务</p><p>dumpsys window w | grep name：查看当前Activity;</p><p>使用dumpsys package 包名 查看指定包的信息，其中就有包名和完整Activity路径</p><h3 id="setprop、getprop命令" tabindex="-1"><a class="header-anchor" href="#setprop、getprop命令" aria-hidden="true">#</a> setprop、getprop命令</h3><p>设置、获取系统property变量值</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell getprop		获取所有系统属性
adb shell getprop ro.product.board
adb shell setprop dalvik.vm.heapgrowthlimit 128m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="settings命令" tabindex="-1"><a class="header-anchor" href="#settings命令" aria-hidden="true">#</a> settings命令</h3><p>使用这个命令可以对settings数据库进行增删改查，其中**“namespace”**是system、secure或者global其中之一。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>settings list <span class="token operator">&lt;</span>namespace<span class="token operator">&gt;</span>		查看system、secure或者global表的全部值。

settings get <span class="token operator">&lt;</span>namespace<span class="token operator">&gt;</span> key	查看指定key对应的值

settings put <span class="token operator">&lt;</span>namespace<span class="token operator">&gt;</span> key	添加/修改指定key的值

settings delete <span class="token operator">&lt;</span>namespace<span class="token operator">&gt;</span> key		删除指定key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wm命令" tabindex="-1"><a class="header-anchor" href="#wm命令" aria-hidden="true">#</a> wm命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>wm size <span class="token punctuation">[</span>reset<span class="token operator">|</span>WxH<span class="token operator">|</span>WdpxHdp<span class="token punctuation">]</span>		不指定参数时是查看屏幕宽高。指定参数后即是设置（重设）屏幕宽高。

wm density <span class="token punctuation">[</span>reset<span class="token operator">|</span>DENSITY<span class="token punctuation">]</span>		不指定参数时是查看屏幕密度。指定参数后即是设置（重设）密度。

wm overscan <span class="token operator">&lt;</span>reset<span class="token operator">|</span>LEFT,TOP,RIGHT,BOTTOM<span class="token operator">&gt;</span>		设置overcan区域
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Overscan（过扫描）是一种独特的调整画面显示效果的方法，常见于老式电视机。它是通过裁剪画面外边缘的方式，将所需显示的内容填满整个电视屏幕，以达到全屏显示的要求。</p></blockquote><h3 id="content命令" tabindex="-1"><a class="header-anchor" href="#content命令" aria-hidden="true">#</a> content命令</h3><p>Content Provider增删改查:</p><div class="language-sqlite line-numbers-mode" data-ext="sqlite"><pre class="language-sqlite"><code>在secure表中添加一条记录:
INSERT INTO secure (&#39;name&#39;,&#39;value&#39;) VALUES(&#39;test&#39;,&#39;hello&#39;)

content insert --uri content://settings/secure --bind name:s:test --bind value:s:hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sqlite line-numbers-mode" data-ext="sqlite"><pre class="language-sqlite"><code>在secure表中删除一条记录:
DELETE FROM secure WHERE name=&#39;test&#39;

content delete --uri content://settings/secure --where &quot;name=&#39;test&#39;&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sqlite line-numbers-mode" data-ext="sqlite"><pre class="language-sqlite"><code>在secure表中更新一条记录:
UPDATE secure SET value=&#39;hello&#39; WHERE name=&#39;test&#39;

content update --uri content://settings/secure --bind value:s:hello --where &quot;name=&#39;test&#39;&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sqlite line-numbers-mode" data-ext="sqlite"><pre class="language-sqlite"><code>在secure表中查询
SELECT name,value FROM secure WHERE name=&#39;test&#39; ORDER BY name DESC

content query --uri content://settings/secure --projection name:value --where &quot;name=&#39;test&#39;&quot; --sort &quot;name DESC&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>字段类型:
	b – boolean 
	s – String
	i – int
	l – long
	f – float
	d – double
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sqlite3命令" tabindex="-1"><a class="header-anchor" href="#sqlite3命令" aria-hidden="true">#</a> sqlite3命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>.database			显示数据库信息，包括数据库所在位置
.table<span class="token operator">|</span>.tables		显示表名称
.schema <span class="token punctuation">[</span>TABLE<span class="token punctuation">]</span>		查看建表语句
.header on<span class="token operator">|</span>off		是/否显示表头
.mode csv<span class="token operator">|</span><span class="token function">column</span><span class="token operator">|</span>insert<span class="token operator">|</span>line<span class="token operator">|</span>list<span class="token operator">|</span>tabs<span class="token operator">|</span>tcl		改变输出格式
.quit<span class="token operator">|</span>.exit			退出
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="input命令" tabindex="-1"><a class="header-anchor" href="#input命令" aria-hidden="true">#</a> input命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>input text <span class="token operator">&lt;</span>TEXT<span class="token operator">&gt;</span>				模拟输入文本信息
input keyevent <span class="token operator">&lt;</span>KEYCODE<span class="token operator">|</span>NAME<span class="token operator">&gt;</span>	模拟按键事件
input tap <span class="token operator">&lt;</span>X<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>Y<span class="token operator">&gt;</span>				模拟点击<span class="token punctuation">(</span>X,Y<span class="token punctuation">)</span>
input swipe <span class="token operator">&lt;</span>X<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>Y<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>X<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token operator">&lt;</span>Y<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">[</span>TIME<span class="token punctuation">]</span>		模拟滑动事件，从<span class="token punctuation">(</span>X1,Y1<span class="token punctuation">)</span>到<span class="token punctuation">(</span>X2,Y2<span class="token punctuation">)</span>（时长为TIME）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="屏幕截图" tabindex="-1"><a class="header-anchor" href="#屏幕截图" aria-hidden="true">#</a> 屏幕截图：</h3><ul><li>可以使用screencap命令来进行手机屏幕截图，例如：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell screencap /sdcard/screen.png
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="录制视频" tabindex="-1"><a class="header-anchor" href="#录制视频" aria-hidden="true">#</a> 录制视频：</h3><p>可以使用screenrecord[options] filename命令来录制屏幕视频，例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb shell screenrecord /sdcard/demo.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>adb start-server</p><p>​ 打开ADB服务进程</p><p>adb kill-server</p><p>​ 结束ADB服务进程</p><p>adb [-s [specific device] shell</p><p>​ 进入命令行模式</p><h2 id="部分问题解决" tabindex="-1"><a class="header-anchor" href="#部分问题解决" aria-hidden="true">#</a> 部分问题解决</h2><h3 id="_1-拒绝连接" tabindex="-1"><a class="header-anchor" href="#_1-拒绝连接" aria-hidden="true">#</a> 1.拒绝连接</h3><p>当使用cmd进行连接电视的时候，可能会出现连接失败。 输入adb connect 172.16.2.253，结果连接失败， 提示由于目标计算机积极拒绝，无法连接， 解决办法，在CRT中输入命令settings put global adb_enabled 1 再进行连接，即可成功。</p><h3 id="_2-通过apk报名列出包的信息-然后启动activity" tabindex="-1"><a class="header-anchor" href="#_2-通过apk报名列出包的信息-然后启动activity" aria-hidden="true">#</a> 2.通过apk报名列出包的信息，然后启动Activity</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pm list package <span class="token comment">#列出全部的包名,在这些包名中找出和apk相似的包 如 com.demo.hmi.onstarservices.tbox</span>
dumpsys package com.demo.hmi.onstarservices.tbox <span class="token comment">#列出包的信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中有如下一行,可知要启动的package和activity</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>am start com.demo.hmi.onstarservices.tbox/.MainActivity
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,94),o={href:"https://blog.csdn.net/qq_39969226/article/details/87897863?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166113364816782184610975%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166113364816782184610975&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-87897863-null-null.142%5Ev42%5Epc_rank_34_1,185%5Ev2%5Econtrol&utm_term=adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4&spm=1018.2226.3001.4187",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.jianshu.com/p/2802683923e0",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const n=i("ExternalLinkIcon");return l(),r("div",null,[c,a("p",null,[a("a",o,[s("ADB常用命令及其用法大全"),e(n)])]),a("p",null,[a("a",u,[s("am,pm,dumpsys 命令用法"),e(n)])])])}const g=t(p,[["render",v],["__file","adbmingling.html.vue"]]);export{g as default};
