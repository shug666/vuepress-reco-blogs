import{_ as t,r as p,o as e,c as o,b as s,d as n,e as c,a as l}from"./app-e8f85126.js";const i={},u=l(`<h2 id="_1-protolog如何动态打开" tabindex="-1"><a class="header-anchor" href="#_1-protolog如何动态打开" aria-hidden="true">#</a> 1. ProtoLog如何动态打开</h2><p>类似源码里面的 <code>ProtoLog.v</code>，在<code>userdebug</code>版本可以动态打开</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">WM_DEBUG_ORIENTATION</span><span class="token punctuation">,</span> <span class="token string">&quot;Orientation continue waiting for draw in %s&quot;</span><span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体可以参考<code>frameworks/base/tools/protologtool/README.md</code><br> 如类似下面的<code>ProtoLog</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ProtoLog</span><span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token class-name">ProtoLogGroup</span><span class="token punctuation">.</span><span class="token constant">GROUP_NAME</span><span class="token punctuation">,</span> <span class="token string">&quot;Format string %d %s&quot;</span><span class="token punctuation">,</span> value1<span class="token punctuation">,</span> value2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将会给<code>ProtoLogTool</code>转换成</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ProtoLogImpl</span><span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token constant">GROUP_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">int</span> protoLogParam0 <span class="token operator">=</span> value1<span class="token punctuation">;</span>
<span class="token class-name">String</span> protoLogParam1 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>value2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ProtoLogImpl</span><span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token class-name">ProtoLogGroup</span><span class="token punctuation">.</span><span class="token constant">GROUP_NAME</span><span class="token punctuation">,</span> <span class="token number">123456</span><span class="token punctuation">,</span> <span class="token number">0b0100</span><span class="token punctuation">,</span> <span class="token string">&quot;Format string %d %s or null&quot;</span><span class="token punctuation">,</span> protoLogParam0<span class="token punctuation">,</span> protoLogParam1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ps: 它有两种log形式：</p><p><strong>第一种写入到db中</strong></p><p>举例</p><p><code>adb shell</code></p><p><code>$ cmd window logging enable WM_DEBUG_ORIENTATION</code></p><p><code>$ cmd window logging start</code></p><p>开始log的输出</p><p><code>=&gt;Start logging to /data/misc/wmtrace/wm_log.pb.</code></p><p><code>$ cmd window logging stop</code></p><p>停止log的输出</p><p><code>Stop logging to /data/misc/wmtrace/wm_log.pb. Waiting for log to flush. Log written to /data/misc/wmtrace/wm_log.pb.</code></p><p><strong>第二种输出到logcat</strong></p><p>举例：</p><p>这个是直接保存在logcat中</p><p><code>$ cmd window logging enable-text WM_DEBUG_ORIENTATION</code></p><p>使用logcat就可以直接看得到日志输出</p><p><code>$ adb logcat -b all | egrep -i Orientation</code></p><h3 id="重要的窗口相关打印" tabindex="-1"><a class="header-anchor" href="#重要的窗口相关打印" aria-hidden="true">#</a> 重要的窗口相关打印</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell wm logging enable-text WM_DEBUG_RECENTS_ANIMATIONS WM_DEBUG_ADD_REMOVE WM_DEBUG_APP_TRANSITIONS WM_SHOW_TRANSACTIONS WM_DEBUG_STATES WM_DEBUG_RESIZE WM_DEBUG_WINDOW_ORGANIZER WM_DEBUG_SYNC_ENGINE WM_DEBUG_WINDOW_TRANSITIONS WM_DEBUG_CONFIGURATION WM_DEBUG_ORIENTATION WM_DEBUG_SCREEN_ON WM_DEBUG_IME WM_DEBUG_STARTING_WINDOW WM_ERROR WM_DEBUG_WALLPAPER WM_DEBUG_TASKS WM_DEBUG_WINDOW_INSETS WM_DEBUG_ANIM WM_DEBUG_DRAW WM_DEBUG_WINDOW_TRANSITIONS_MIN
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="wmshell" tabindex="-1"><a class="header-anchor" href="#wmshell" aria-hidden="true">#</a> wmshell</h3><p><strong>wmshell的log比较特殊，其在SystemUI进程</strong>，如果我们直接运行<code>adb shell wm logging enable-text WM_SHELL_TASK_ORG</code>会报错，打印如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Loaded <span class="token number">749</span> log definitions from /system/etc/protolog.conf.json.gz
No IProtoLogGroup named WM_SHELL_TASK_ORG
Not handled, please use <span class="token variable"><span class="token variable">\`</span>adb shell dumpsys activity <span class="token function">service</span> SystemUIService WMShell<span class="token variable">\`</span></span> <span class="token keyword">if</span> you are looking <span class="token keyword">for</span> <span class="token for-or-select variable">ProtoLog</span> <span class="token keyword">in</span> WMShell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据提示我们打开log</p><p><code>adb shell dumpsys activity service SystemUIService WMShell protolog enable WM_SHELL_TASK_ORG</code></p><h2 id="_2-ams-wms等日志的动态打开" tabindex="-1"><a class="header-anchor" href="#_2-ams-wms等日志的动态打开" aria-hidden="true">#</a> 2. ams wms等日志的动态打开</h2><hr><p>默认源码不支持这类动态日志，需要我们自己加入代码</p><p>用反射拿到带<code>DEBUG_</code>的一些调试变量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields_am <span class="token operator">=</span> <span class="token class-name">ActivityManagerDebugConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields_atm <span class="token operator">=</span> <span class="token class-name">ActivityTaskManagerDebugConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields_thread <span class="token operator">=</span> <span class="token class-name">ActivityThread</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> <span class="token class-name">WindowManagerDebugConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fieldsPolicy <span class="token operator">=</span> <span class="token class-name">PhoneWindowManager</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找到<code>DEBUG_</code>相关的变量，类似于<code>ActivityThread.DEBUG_BROADCAST</code>、<code>ActivityManagerDebugConfig.DEBUG_BROADCAST</code>，并将其默认值记录下来，此处是先放入<code>debugValue</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> bitLocation <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> debugValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fields_thread<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fieldName <span class="token operator">=</span> fields_thread<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldName <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;DEBUG_&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> fieldName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;localLOGV&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            fields_thread<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fields_thread<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                debugValue <span class="token operator">=</span> <span class="token punctuation">(</span>debugValue <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bitLocation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//取得原来每个调试变量DEBUG_原有值，注意long数组溢出，一般都是够的</span>
            <span class="token punctuation">}</span>
            bitLocation<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span>  e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pw<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;enableAmsLog exception4:&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用触发，可以参考原生的 <code>adb shell dumpsys activity p</code></p><p>自己设置一个 <code>adb shell dumpsys debuglog amslog enable DEBUG_BROADCAST</code>进行参数识别，由于除了系统进程，部分还和app进程相关，保存设置到自定义的系统属性里面<code>persist.sys.debug.ams.log</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fields_thread<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fieldName <span class="token operator">=</span> fields_thread<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldName <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;DEBUG_&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> fieldName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;localLOGV&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>setAll <span class="token operator">||</span> fieldName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//cmd就是DEBUG_ABC，或者all(匹配all后设置setAll = true)</span>
                isChange <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                fields_thread<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                fields_thread<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> isEnable<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//如果传进来的参数是enable，则isEnable = true; disable，则isEnable = false</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>isEnable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    debugValue <span class="token operator">=</span> <span class="token punctuation">(</span>debugValue <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bitLocation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据设定值改变原有调试开关</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    debugValue <span class="token operator">=</span> <span class="token punctuation">(</span>debugValue <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bitLocation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                pw<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;  ActivityThread.%s = %b&quot;</span><span class="token punctuation">,</span> fieldName<span class="token punctuation">,</span> fields_thread<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>setAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            bitLocation<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span>  e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pw<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;enable exception:&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//将debug开关用系统属性保存起来</span>
<span class="token class-name">String</span> debugHexValue <span class="token operator">=</span> <span class="token string">&quot;0x&quot;</span> <span class="token operator">+</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>debugValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SystemProperties</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;persist.sys.debug.ams.log&quot;</span><span class="token punctuation">,</span> debugHexValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遍历<code>mLruProcesses</code>分发到<code>android</code>的每个进程里面去</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//参考伪代码</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> mLruProcesses<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ProcessRecord</span> r <span class="token operator">=</span> mLruProcesses<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>thread <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        r<span class="token punctuation">.</span>thread<span class="token punctuation">.</span><span class="token function">updateDebugLog</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//frameworks/base/core/java/android/app/ActivityThread.java</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">updateDebugLog</span><span class="token punctuation">(</span><span class="token keyword">int</span> func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">DebugLogManager</span><span class="token punctuation">.</span><span class="token function">updateDebugLog</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//新建一个DebugLogManager</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">updateDebugLog</span><span class="token punctuation">(</span><span class="token keyword">int</span> func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> fieldName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> bitLocation <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> setDebugValue <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">FUNC_ACTIVITY_LOG</span><span class="token operator">:</span>
                setDebugValue <span class="token operator">=</span> <span class="token class-name">SystemProperties</span><span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span><span class="token string">&quot;persist.sys.debug.ams.log&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将上面设置的debugValue取出来</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>setDebugValue <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    fields <span class="token operator">=</span> <span class="token class-name">ActivityThread</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    bitLocation <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        fieldName <span class="token operator">=</span> fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldName <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token comment">//按照原有顺序一个个设置进去</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;DEBUG_&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> fieldName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;localLOGV&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>setDebugValue <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bitLocation<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            bitLocation<span class="token operator">++</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似于<code>ActivityThread.DEBUG_BROADCAST</code>、<code>ActivityManagerDebugConfig.DEBUG_BROADCAST</code>的动态设置将不是问题</p>`,44),k={href:"https://blog.csdn.net/yun_hen/article/details/119895320",target:"_blank",rel:"noopener noreferrer"};function r(d,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[n("本文转自 "),s("a",k,[n("https://blog.csdn.net/yun_hen/article/details/119895320"),c(a)]),n("，如有侵权，请联系删除。")])])}const b=t(i,[["render",r],["__file","ProtoLogdongtaidakai.html.vue"]]);export{b as default};
