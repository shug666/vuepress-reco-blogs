import{_ as n,o as s,c as a,a as e}from"./app-e8f85126.js";const t={},p=e(`<h2 id="一、-概述" tabindex="-1"><a class="header-anchor" href="#一、-概述" aria-hidden="true">#</a> 一、 概述</h2><p>在Android启动之后，我们通常需要根据自己的一些需要来设置一些符合我们使用习惯的属性。</p><p>例如:来电铃声、锁屏时间、日期格式等等。而这些属性的设置通常是有Settings为入口，通过SettingsProvider来进行的。SettingsProvider也是所有系统设置的管理者。</p><p>在M(Android5.0)版本之前，SettingsProvider中系统设置是存储在settings.db数据库中；但是在L(Android6.0)之后，SettingsProvider中系统设置改为由xml存储在data分区。</p><p>为什么要从settings.db改为xml存储？</p><p>原因：</p><p>1、这次修改涉及到了global,secure,system 三个表；并且实现方式从之前的数据库，改为异步性能更加优良的xml。</p><p>2、这次修改主要是基于性能的考量(写入一条耗时从400ms降低为10ms)，同时也能够使得保存数据的过程更加可信。</p><p>3、实际上，得保存数据的过程更加可信这一条并不是问题的关键，写入失败的情况不仅非常罕见，而且上层应用修改SettingsProvider设置都是通过</p><p>SettingsProvider来实现的。所以当上层APP下次再次启动的时候，并不知道数据写入失败。</p><p>4、改变SettingsProvider的实现方式(从db改为xml以及相应逻辑)，可以有效的防止某些恶意APP监听某些设置选项，进而频繁的进行操作。</p><p>5、每个用户都有自己的一份SettingsProvider设置xml文档。通常位于/data/system/users/userid/</p><p>6、控制APP针对SettingsProvider的写入(合法性的判断)</p><p>7、控制SettingsProvider的大小(数据量大小，占用内存大小,etc.)</p><p>其实主要原因就是因为性能、安全两个原因。</p><p>使用adb shell进入data分区中可以看到：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PS C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>MAZHUANG<span class="token operator">&gt;</span> adb shell
xet509:/ <span class="token comment"># cd /data/system/users/0</span>
xet509:/data/system/users/0 <span class="token comment"># ls -l</span>
total <span class="token number">3108</span>
-rw------- <span class="token number">1</span> system system   <span class="token number">12962</span> <span class="token number">2021</span>-12-07 07:02 settings_global.xml
-rw------- <span class="token number">1</span> system system   <span class="token number">11804</span> <span class="token number">2021</span>-12-05 <span class="token number">14</span>:16 settings_secure.xml
-rw------- <span class="token number">1</span> system system    <span class="token number">6448</span> <span class="token number">2021</span>-12-04 <span class="token number">17</span>:54 settings_system.xml
xet509:/data/system/users/0 <span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中settings_global.xml 、settings_secure.xml 、settings_system.xml 、即对应/frameworks/base/core/java/android/provider/Settings.java中的三个内部类：Global、Secure、System。</p><p>也就是Settings的三种分类，分别如下：</p><ol><li>Global：所有的偏好设置对系统的所有用户公开，第三方APP有读没有写的权限；</li><li>System：包含各种各样的用户偏好系统设置，第三方APP有读没有写的权限；</li><li>Secure：安全性的用户偏好系统设置，第三方APP有读没有写的权限。</li></ol><p>可以看到它们三个都继承了BaseColumns</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * System settings, containing miscellaneous system preferences.  This
     * table holds simple name/value pairs.  There are convenience
     * functions for accessing individual settings entries.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">System</span> <span class="token keyword">extends</span> <span class="token class-name">NameValueTable</span> <span class="token punctuation">{</span>
        <span class="token comment">// NOTE: If you add new settings here, be sure to add them to</span>
        <span class="token comment">// com.android.providers.settings.SettingsProtoDumpUtil#dumpProtoSystemSettingsLocked.</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">DEFAULT_FONT_SCALE</span> <span class="token operator">=</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * The content:// style URL for this table
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Uri</span> <span class="token constant">CONTENT_URI</span> <span class="token operator">=</span>
            <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;content://&quot;</span> <span class="token operator">+</span> <span class="token constant">AUTHORITY</span> <span class="token operator">+</span> <span class="token string">&quot;/system&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ContentProviderHolder</span> sProviderHolder <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">ContentProviderHolder</span><span class="token punctuation">(</span><span class="token constant">CONTENT_URI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">NameValueCache</span> sNameValueCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NameValueCache</span><span class="token punctuation">(</span>
                <span class="token constant">CONTENT_URI</span><span class="token punctuation">,</span>
                <span class="token constant">CALL_METHOD_GET_SYSTEM</span><span class="token punctuation">,</span>
                <span class="token constant">CALL_METHOD_PUT_SYSTEM</span><span class="token punctuation">,</span>
                sProviderHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token constant">MOVED_TO_SECURE</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Secure system settings, containing system preferences that applications
     * can read but are not allowed to write.  These are for preferences that
     * the user must explicitly modify through the system UI or specialized
     * APIs for those values, not modified directly by applications.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Secure</span> <span class="token keyword">extends</span> <span class="token class-name">NameValueTable</span> <span class="token punctuation">{</span>
        <span class="token comment">// NOTE: If you add new settings here, be sure to add them to</span>
        <span class="token comment">// com.android.providers.settings.SettingsProtoDumpUtil#dumpProtoSecureSettingsLocked.</span>

        <span class="token doc-comment comment">/**
         * The content:// style URL for this table
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Uri</span> <span class="token constant">CONTENT_URI</span> <span class="token operator">=</span>
            <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;content://&quot;</span> <span class="token operator">+</span> <span class="token constant">AUTHORITY</span> <span class="token operator">+</span> <span class="token string">&quot;/secure&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Global system settings, containing preferences that always apply identically
     * to all defined users.  Applications can read these but are not allowed to write;
     * like the &quot;Secure&quot; settings, these are for preferences that the user must
     * explicitly modify through the system UI or specialized APIs for those values.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Global</span> <span class="token keyword">extends</span> <span class="token class-name">NameValueTable</span> <span class="token punctuation">{</span>
        <span class="token comment">// NOTE: If you add new settings here, be sure to add them to</span>
        <span class="token comment">// com.android.providers.settings.SettingsProtoDumpUtil#dumpProtoGlobalSettingsLocked.</span>

        <span class="token doc-comment comment">/**
         * The content:// style URL for global secure settings items.  Not public.
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Uri</span> <span class="token constant">CONTENT_URI</span> <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;content://&quot;</span> <span class="token operator">+</span> <span class="token constant">AUTHORITY</span> <span class="token operator">+</span> <span class="token string">&quot;/global&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * Whether users are allowed to add more users or guest from lockscreen.
         * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
         * Type: int
         * <span class="token keyword">@hide</span>
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ADD_USERS_WHEN_LOCKED</span> <span class="token operator">=</span> <span class="token string">&quot;add_users_when_locked&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在Settings.java搜索NameValueTable可以看到：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Common base for tables of name/value settings.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">NameValueTable</span> <span class="token keyword">implements</span> <span class="token class-name">BaseColumns</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">NAME</span> <span class="token operator">=</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">VALUE</span> <span class="token operator">=</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">putString</span><span class="token punctuation">(</span><span class="token class-name">ContentResolver</span> resolver<span class="token punctuation">,</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">,</span>
                <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The database will take care of replacing duplicates.</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">ContentValues</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">NAME</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">VALUE</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                resolver<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Can&#39;t set key &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> uri<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Uri</span> <span class="token function">getUriFor</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">withAppendedPath</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看**/frameworks/base/core/java/android/provider/BaseColumns.java**可以看到：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">android<span class="token punctuation">.</span>provider</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BaseColumns</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * The unique ID for a row.
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span><span class="token punctuation">&gt;</span></span>Type: INTEGER (long)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> _ID <span class="token operator">=</span> <span class="token string">&quot;_id&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The count of rows in a directory.
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span><span class="token punctuation">&gt;</span></span>Type: INTEGER<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> _COUNT <span class="token operator">=</span> <span class="token string">&quot;_count&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个类只是提供了两个字段，一个是&quot;_id&quot;一个是&quot;_count&quot;，便于调用数据库时导致拼写错误，你也可以扩展它，或者自定义这么个，然后直接调用它的常量名，防止写sql语句时把列名拼错。</p><p>可以看出Settings中不论是Global、System还是Secure的数据都由键值对组成的。</p><h2 id="二、与systemproperties的不同点" tabindex="-1"><a class="header-anchor" href="#二、与systemproperties的不同点" aria-hidden="true">#</a> 二、与SystemProperties的不同点</h2><p>SettingsProvider有点类似Android的properties系统（Android属性系统）：SystemProperties</p><p>但是SettingsProvider和SystemProperties有以下不同点：</p><ol><li>数据保存方式不同：SystemProperties的数据保存属性文件中（/system/build.prop等），开机后会被加载到system properties store；SettingsProvider的数据保存在文件/data/system/users/0/settings_***.xml和数据库settings.db中；</li><li>作用范围不同：SystemProperties可以实现跨进程、跨层次调用，即底层的c/c++可以调用，java层也可以调用；SettingProvider只能能在java层（APP）使用；</li><li>公开程度不同：SettingProvider有部分功能上层第三方APP可以使用（对于加了@hide标记的第三方APP仅可读，不可修改），SystemProperties上层第三方APP不可以使用。</li></ol><h2 id="三、关于settings的修改方式" tabindex="-1"><a class="header-anchor" href="#三、关于settings的修改方式" aria-hidden="true">#</a> 三、关于Settings的修改方式：</h2><p><strong>通过adb shell进行修改：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PS C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>MAZHUANG<span class="token operator">&gt;</span> adb shell
xet509:/ <span class="token comment"># settings put global audio_test_result 0   </span>
xet509:/ <span class="token comment"># settings get global audio_test_result</span>
<span class="token number">0</span>
xet509:/ <span class="token comment"># settings list system</span>
<span class="token assign-left variable">accelerometer_rotation</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">alarm_alert</span><span class="token operator">=</span>content://media/internal/audio/media/210?title<span class="token operator">=</span>Cesium<span class="token operator">&amp;</span><span class="token assign-left variable">canonical</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">alarm_alert_set</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">background_power_saving_enable</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出主要格式为：</p><p>adb shell settings get [ global/system/secure ] [ key ]</p><p>adb shell settings put [ global/system/secure ] [ key ] [ value ]</p><p>adb shell settings list [ global/system/secure ]</p><p>通过java代码修改：（支持常用的String、int、boolean等类型的get和put）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span>mContext<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;audio_test_result&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//修改</span>
<span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>mContext<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;audio_test_result&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//查询</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>常用的几个方法可以看Global/System/Secure中的几个方法(Global/System/Secure都有这个方法)：</p><p>具体实现都在：/frameworks/base/core/java/android/provider/Settings.java**中</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token doc-comment comment">/**
         * Look up a name in the database.
         * <span class="token keyword">@param</span> <span class="token parameter">resolver</span> to access the database with
         * <span class="token keyword">@param</span> <span class="token parameter">name</span> to look up in the table
         * <span class="token keyword">@return</span> the corresponding value, or null if not present
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">ContentResolver</span> resolver<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getStringForUser</span><span class="token punctuation">(</span>resolver<span class="token punctuation">,</span> name<span class="token punctuation">,</span> resolver<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Store a name/value pair into the database.
         * <span class="token keyword">@param</span> <span class="token parameter">resolver</span> to access the database with
         * <span class="token keyword">@param</span> <span class="token parameter">name</span> to store
         * <span class="token keyword">@param</span> <span class="token parameter">value</span> to associate with the name
         * <span class="token keyword">@return</span> true if the value was set, false on database errors
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">putString</span><span class="token punctuation">(</span><span class="token class-name">ContentResolver</span> resolver<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">putStringForUser</span><span class="token punctuation">(</span>resolver<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> resolver<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、settings中值的监听" tabindex="-1"><a class="header-anchor" href="#四、settings中值的监听" aria-hidden="true">#</a> 四、Settings中值的监听</h2><p>有时需要监听Settings下面的值，这个时候可以通过ContentObserver 来监听值的变化。</p><p>1.首先自定义一个类继承ContentObserver。在onChange()方法里面再次去获取Settings的值。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SettingsAudioTestObserver</span> <span class="token keyword">extends</span> <span class="token class-name">ContentObserver</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">SettingsAudioTestObserver</span><span class="token punctuation">(</span><span class="token class-name">Handler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
  
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> selfChange<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot; SettingsAudioTestObserver  onChange......&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> maudio <span class="token operator">=</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>mContext<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token constant">AUDIO_TEST_RESULT</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot; SettingsAudioTestObserver  onChanged  maudio====&quot;</span> <span class="token operator">+</span> maudio<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot; SettingsAudioTestObserver  onChanged  Integer.toString(maudio) start ====&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>maudio<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">if</span><span class="token punctuation">(</span>maudio <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">WriteFile</span><span class="token punctuation">(</span><span class="token constant">AUDIO_TEST_RESULT_PATH</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token class-name">WriteFile</span><span class="token punctuation">(</span><span class="token constant">AUDIO_TEST_RESULT_PATH</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot; SettingsAudioTestObserver  onChanged  Integer.toString(maudio)  end ====&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>maudio<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.注册监听。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token comment">/*async*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mAudiotestobserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SettingsAudioTestObserver</span><span class="token punctuation">(</span>mHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
mContext<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">registerContentObserver</span><span class="token punctuation">(</span><span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token function">getUriFor</span><span class="token punctuation">(</span>
    <span class="token class-name">Settings<span class="token punctuation">.</span>Global</span><span class="token punctuation">.</span><span class="token constant">AUDIO_TEST_RESULT</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> mAudiotestobserver<span class="token punctuation">,</span> <span class="token class-name">UserHandle</span><span class="token punctuation">.</span><span class="token constant">USER_ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.结束时候取消监听。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unregisterContentObserver</span><span class="token punctuation">(</span>mAudiotestobserver<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="五、settings常用之处" tabindex="-1"><a class="header-anchor" href="#五、settings常用之处" aria-hidden="true">#</a> 五、Settings常用之处</h2><p>系统设置中很多设置其实都是存在Settings中的System、Global、Secure中</p><p>需要用到公共数据的时候也可以采用存在Settings中这种方法</p><p>可以对Settings中某个值进行监听，执行对应的操作等…</p>`,56),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","Settingsshujuku.html.vue"]]);export{r as default};
