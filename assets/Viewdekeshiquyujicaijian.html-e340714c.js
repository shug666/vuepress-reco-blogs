import{_ as t,r as p,o as e,c as o,b as s,d as n,e as c,a as i}from"./app-e8f85126.js";const l={},u=i(`<h1 id="获取view的可视区域" tabindex="-1"><a class="header-anchor" href="#获取view的可视区域" aria-hidden="true">#</a> 获取View的可视区域</h1><ul><li><code>getGlobalVisibleRect(rect);</code>，是以屏幕左上角为参考系，判断<code>view</code>有一部分在屏幕中，返回<code>true</code>（没有被父<code>View</code>遮挡）。反之，如果它全部被父<code>View</code>遮挡住或者本身就是不可见的，返回<code>false</code>。</li><li><code>getLocalVisibleRect(rect);</code>，当<code>View</code>可见时，以自身<code>View</code>左上角为参考系，坐标系的原点为<code>View</code>自己的坐标原点。当<code>View</code>不可见时，以父控件左上角为参考系，坐标系的原点为<code>View</code>的父控件的坐标原点。</li></ul><p><strong>判断View1是否在某个View2可视区域内</strong></p><p>当使用<code>getLocalVisibleRect(rect)</code>时，当View不在可视区域内时： 在顶部，<code>Rect.top &lt;0</code> 在底部，<code>Rect.bottom&gt;View2.getHeight</code> 所以</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isCover</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">,</span> <span class="token class-name">View</span> view1<span class="token punctuation">,</span> <span class="token class-name">View</span> view2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view1<span class="token punctuation">.</span><span class="token function">getLocalVisibleRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> rect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> view2<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app<span class="token punctuation">.</span>motiongear<span class="token punctuation">.</span>clipboundsmotion</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Outline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Rect</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewOutlineProvider</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Created by ubuntu on 15-11-13.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomOutlineProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ViewOutlineProvider</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getOutline</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token class-name">Outline</span> outline<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        view<span class="token punctuation">.</span><span class="token function">getGlobalVisibleRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> leftMargin <span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> topMargin <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">Rect</span> selfRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span>leftMargin<span class="token punctuation">,</span> topMargin<span class="token punctuation">,</span>
                rect<span class="token punctuation">.</span>right <span class="token operator">-</span> rect<span class="token punctuation">.</span>left <span class="token operator">-</span> leftMargin<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>bottom <span class="token operator">-</span> rect<span class="token punctuation">.</span>top <span class="token operator">-</span> topMargin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        outline<span class="token punctuation">.</span><span class="token function">setRoundRect</span><span class="token punctuation">(</span>selfRect<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>判断View可视区域占其自身百分比（当view1开始可视后调用，否则一直都是100%)</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getVisibilePercent</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">,</span> <span class="token class-name">View</span> view1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view1<span class="token punctuation">.</span><span class="token function">getLocalVisibleRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">&quot;测试&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rect.height = &quot;</span> <span class="token operator">+</span> rect<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; view1.height = &quot;</span> <span class="token operator">+</span> view1<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> rect<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> view1<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">&quot;测试&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>判断View是否显示出现在屏幕上</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isCoverScreen_LocalVisibleRect</span><span class="token punctuation">(</span><span class="token class-name">View</span> view1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> screenWidth <span class="token operator">=</span> <span class="token class-name">CFUtil</span><span class="token punctuation">.</span><span class="token function">getScreenWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取屏幕宽度</span>
    <span class="token keyword">int</span> screenHeight <span class="token operator">=</span> <span class="token class-name">CFUtil</span><span class="token punctuation">.</span><span class="token function">getScreenHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取屏幕高度</span>
    <span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view1<span class="token punctuation">.</span><span class="token function">getLocalVisibleRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>  <span class="token function">getGlobalVisibleRect</span><span class="token punctuation">(</span><span class="token class-name">Rect</span> rect<span class="token punctuation">)</span><span class="token operator">:</span>获取当前view的可视区域，坐标系使用的<span class="token class-name">Root</span> <span class="token class-name">View</span>的也就是<span class="token class-name">DecorView</span>的坐标系，这点需要注意，不是<span class="token class-name">View</span>自身的坐标系。

  <span class="token function">setClipBounds</span><span class="token punctuation">(</span><span class="token class-name">Rect</span> rect<span class="token punctuation">)</span><span class="token punctuation">,</span>直接指定当前view的可视区域，当前的<span class="token class-name">Rect</span>使用的view的自身的坐标系。

  <span class="token function">setOutlineProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，设置当前<span class="token class-name">View</span>的<span class="token class-name">Outline</span>。

  <span class="token function">setClipToOutlines</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，截取当前的可视区域到<span class="token class-name">Outline</span>，如果设置<span class="token function">setClipBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法，这个方法就失效了。 rect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> screenHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="view进行裁剪的方法" tabindex="-1"><a class="header-anchor" href="#view进行裁剪的方法" aria-hidden="true">#</a> View进行裁剪的方法</h1><p>在android中有时候要求只显示view的部分区域，这个时候就需要对当前的view进行剪裁的操作。在android中剪裁当前的view的有两种方法：一种是直接截取view，第二种是通过Outline设置。涉及到的类方法如下：</p><ol><li><p>getGlobalVisibleRect(Rect rect):获取当前view的可视区域，坐标系使用的Root View的也就是DecorView的坐标系，这点需要注意，不是View自身的坐标系。</p></li><li><p>setClipBounds(Rect rect),直接指定当前view的可视区域，当前的Rect使用的view的自身的坐标系。</p></li><li><p>setOutlineProvider()，设置当前View的Outline。</p></li><li><p>setClipToOutlines()，截取当前的可视区域到Outline，如果设置setClipBounds()方法，这个方法就失效了。</p></li></ol><p>下面通过一个简单的例子来说明一下这几个方法的使用：</p><p>MainActivity.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app<span class="token punctuation">.</span>motiongear<span class="token punctuation">.</span>clipboundsmotion</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Rect</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> <span class="token punctuation">{</span>

    <span class="token class-name">Button</span> mRectBtn<span class="token punctuation">,</span> mBoundBtn<span class="token punctuation">;</span>
    <span class="token class-name">ImageView</span> mImageView<span class="token punctuation">;</span>
    <span class="token class-name">Rect</span> originRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>

        mRectBtn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBoundBtn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mImageView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>imageview<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mRectBtn<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBoundBtn<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mImageView<span class="token punctuation">.</span><span class="token function">setOutlineProvider</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomOutlineProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> mRectBtn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//getGlobalVisibleRect()相对与父布局的rect</span>
            mImageView<span class="token punctuation">.</span><span class="token function">getGlobalVisibleRect</span><span class="token punctuation">(</span>originRect<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> centerX <span class="token operator">=</span> <span class="token punctuation">(</span>originRect<span class="token punctuation">.</span>right <span class="token operator">-</span> originRect<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> centerY <span class="token operator">=</span> <span class="token punctuation">(</span>originRect<span class="token punctuation">.</span>bottom <span class="token operator">-</span> originRect<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token comment">//设置View的显示区域，坐标是自身</span>
            <span class="token class-name">Rect</span> tmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span>centerX <span class="token operator">-</span> <span class="token number">150</span><span class="token punctuation">,</span> centerY <span class="token operator">-</span> <span class="token number">150</span><span class="token punctuation">,</span> centerX <span class="token operator">+</span> <span class="token number">150</span><span class="token punctuation">,</span> centerY <span class="token operator">+</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mImageView<span class="token punctuation">.</span><span class="token function">setClipBounds</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> mBoundBtn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//通过Outline设置</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>mImageView<span class="token punctuation">.</span><span class="token function">getClipToOutline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                mImageView<span class="token punctuation">.</span><span class="token function">setClipToOutline</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                mImageView<span class="token punctuation">.</span><span class="token function">setClipToOutline</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CustomOutlineProvider.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app<span class="token punctuation">.</span>motiongear<span class="token punctuation">.</span>clipboundsmotion</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Outline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Rect</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewOutlineProvider</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Created by ubuntu on 15-11-13.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomOutlineProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ViewOutlineProvider</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getOutline</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token class-name">Outline</span> outline<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        view<span class="token punctuation">.</span><span class="token function">getGlobalVisibleRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> leftMargin <span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> topMargin <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">Rect</span> selfRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span>leftMargin<span class="token punctuation">,</span> topMargin<span class="token punctuation">,</span>
                rect<span class="token punctuation">.</span>right <span class="token operator">-</span> rect<span class="token punctuation">.</span>left <span class="token operator">-</span> leftMargin<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>bottom <span class="token operator">-</span> rect<span class="token punctuation">.</span>top <span class="token operator">-</span> topMargin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        outline<span class="token punctuation">.</span><span class="token function">setRoundRect</span><span class="token punctuation">(</span>selfRect<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h1><p><code>getGlobalVisibleRect(rect)</code> 简单来说就是目标<code>view</code>在父<code>view</code>的映射，然后从屏幕左上角开始计算，保存到<code>rect</code>中，注意是父<code>view</code>，而不是屏幕，因为demo的父<code>view</code>(<code>RelativeLayout</code>)和屏幕宽高是一样的。</p><p><code>getLocalVisibleRect(rect)</code>只要这个<code>View</code>的左上角在屏幕中，它的<code>LocalVisibleRect</code>的左上角坐标就一定是(0,0)，如果<code>View</code>的右下角在屏幕中，它的<code>LocalVisibleRect</code>右下角坐标就一定是(<code>view.getWidth()</code>, <code>view.getHeight()</code>)。 如果不在屏幕中，他的<code>Rect</code>数值就跟<code>getGlobalVisibleRect(rect)</code>是一样的。</p>`,20),k={href:"https://www.cnblogs.com/summerpxy/p/4962761.html",target:"_blank",rel:"noopener noreferrer"};function r(d,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[n("本文转自 "),s("a",k,[n("https://www.cnblogs.com/summerpxy/p/4962761.html"),c(a)]),n("，https://blog.csdn.net/chennai1101/article/details/134511170如有侵权，请联系删除。")])])}const b=t(l,[["render",r],["__file","Viewdekeshiquyujicaijian.html.vue"]]);export{b as default};
